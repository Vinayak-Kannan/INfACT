Skill,Explanation,Related Course,Credits,Semester,Collapsed Skill,Title,Professor,Professor Google Scholar Citations,Description
Python programming,"Students will gain proficiency in programming using the Python language, which is the main focus of the course.","6.100A Introduction to Computer Science Programming in Python
",1,Fall 2023,Python programming,"6.100A Introduction to Computer Science Programming in Python
", ,0,"(, ); first half of term
Prereq: None
Units: 3-0-3
Credit cannot also be received for 6.100L
https://introcomp.mit.edu/fall23
Lecture: MW3-4.30 (ENDS OCT 27) (26-100) Lab: TBA Recitation: F10 (ENDS OCT 27) (37-212) or F11 (ENDS OCT 27) (37-212) or F1 (ENDS OCT 27) (6-120) or F2 (ENDS OCT 27) (6-120) or F10 (ENDS OCT 27) (2-190) or F11 (ENDS OCT 27) (2-190) or F1 (ENDS OCT 27) (34-101)

Introduction to computer science and programming for students with little or no programming experience. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity. Combination of 6.100A and 6.100B or 16.C20 counts as REST subject. Final given in the seventh week of the term.
A. BellTextbooks (Fall 2023)"
Algorithmic problem-solving,"Students will develop skills in solving problems using computational techniques, including the design and implementation of algorithms.","6.100A Introduction to Computer Science Programming in Python
",1,Fall 2023,,"6.100A Introduction to Computer Science Programming in Python
", ,0,"(, ); first half of term
Prereq: None
Units: 3-0-3
Credit cannot also be received for 6.100L
https://introcomp.mit.edu/fall23
Lecture: MW3-4.30 (ENDS OCT 27) (26-100) Lab: TBA Recitation: F10 (ENDS OCT 27) (37-212) or F11 (ENDS OCT 27) (37-212) or F1 (ENDS OCT 27) (6-120) or F2 (ENDS OCT 27) (6-120) or F10 (ENDS OCT 27) (2-190) or F11 (ENDS OCT 27) (2-190) or F1 (ENDS OCT 27) (34-101)

Introduction to computer science and programming for students with little or no programming experience. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity. Combination of 6.100A and 6.100B or 16.C20 counts as REST subject. Final given in the seventh week of the term.
A. BellTextbooks (Fall 2023)"
Testing and debugging,Students will learn how to test and debug their programs to ensure their correctness and identify and fix any errors or issues.,"6.100A Introduction to Computer Science Programming in Python
",1,Fall 2023,,"6.100A Introduction to Computer Science Programming in Python
", ,0,"(, ); first half of term
Prereq: None
Units: 3-0-3
Credit cannot also be received for 6.100L
https://introcomp.mit.edu/fall23
Lecture: MW3-4.30 (ENDS OCT 27) (26-100) Lab: TBA Recitation: F10 (ENDS OCT 27) (37-212) or F11 (ENDS OCT 27) (37-212) or F1 (ENDS OCT 27) (6-120) or F2 (ENDS OCT 27) (6-120) or F10 (ENDS OCT 27) (2-190) or F11 (ENDS OCT 27) (2-190) or F1 (ENDS OCT 27) (34-101)

Introduction to computer science and programming for students with little or no programming experience. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity. Combination of 6.100A and 6.100B or 16.C20 counts as REST subject. Final given in the seventh week of the term.
A. BellTextbooks (Fall 2023)"
Data structures,"Students will learn about basic data structures such as lists, arrays, and dictionaries, and how to use them effectively in their programs.","6.100A Introduction to Computer Science Programming in Python
",1,Fall 2023,,"6.100A Introduction to Computer Science Programming in Python
", ,0,"(, ); first half of term
Prereq: None
Units: 3-0-3
Credit cannot also be received for 6.100L
https://introcomp.mit.edu/fall23
Lecture: MW3-4.30 (ENDS OCT 27) (26-100) Lab: TBA Recitation: F10 (ENDS OCT 27) (37-212) or F11 (ENDS OCT 27) (37-212) or F1 (ENDS OCT 27) (6-120) or F2 (ENDS OCT 27) (6-120) or F10 (ENDS OCT 27) (2-190) or F11 (ENDS OCT 27) (2-190) or F1 (ENDS OCT 27) (34-101)

Introduction to computer science and programming for students with little or no programming experience. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity. Combination of 6.100A and 6.100B or 16.C20 counts as REST subject. Final given in the seventh week of the term.
A. BellTextbooks (Fall 2023)"
Computational thinking,"Students will develop the ability to think algorithmically and break down complex problems into smaller, manageable steps.","6.100A Introduction to Computer Science Programming in Python
",1,Fall 2023,,"6.100A Introduction to Computer Science Programming in Python
", ,0,"(, ); first half of term
Prereq: None
Units: 3-0-3
Credit cannot also be received for 6.100L
https://introcomp.mit.edu/fall23
Lecture: MW3-4.30 (ENDS OCT 27) (26-100) Lab: TBA Recitation: F10 (ENDS OCT 27) (37-212) or F11 (ENDS OCT 27) (37-212) or F1 (ENDS OCT 27) (6-120) or F2 (ENDS OCT 27) (6-120) or F10 (ENDS OCT 27) (2-190) or F11 (ENDS OCT 27) (2-190) or F1 (ENDS OCT 27) (34-101)

Introduction to computer science and programming for students with little or no programming experience. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity. Combination of 6.100A and 6.100B or 16.C20 counts as REST subject. Final given in the seventh week of the term.
A. BellTextbooks (Fall 2023)"
Programming,Students will develop proficiency in programming languages and gain the ability to write code to solve computational problems.,"6.100B Introduction to Computational Thinking and Data Science
",1,Fall 2023,,"6.100B Introduction to Computational Thinking and Data Science
", ,0,"(, ); second half of term
Prereq: 6.100A or permission of instructor
Units: 3-0-3
Credit cannot also be received for 9.C20, 16.C20, 18.C20, CSE.C20
https://introcomp.mit.edu/fall23
Lecture: MW3-4.30 (BEGINS OCT 30) (26-100) Lab: TBA Recitation: F10 (BEGINS OCT 30) (37-212) or F11 (BEGINS OCT 30) (37-212) or F1 (BEGINS OCT 30) (6-120) or F2 (BEGINS OCT 30) (6-120) or F10 (BEGINS OCT 30) (2-190) or F11 (BEGINS OCT 30) (2-190) or F1 (BEGINS OCT 30) (34-101)

Provides an introduction to using computation to understand real-world phenomena. Topics include plotting, stochastic programs, probability and statistics, random walks, Monte Carlo simulations, modeling data, optimization problems, and clustering. Combination of 6.100A and 6.100B counts as REST subject.
A. BellTextbooks (Fall 2023)"
Data analysis,Students will learn how to analyze and interpret data using computational tools and techniques.,"6.100B Introduction to Computational Thinking and Data Science
",1,Fall 2023,,"6.100B Introduction to Computational Thinking and Data Science
", ,0,"(, ); second half of term
Prereq: 6.100A or permission of instructor
Units: 3-0-3
Credit cannot also be received for 9.C20, 16.C20, 18.C20, CSE.C20
https://introcomp.mit.edu/fall23
Lecture: MW3-4.30 (BEGINS OCT 30) (26-100) Lab: TBA Recitation: F10 (BEGINS OCT 30) (37-212) or F11 (BEGINS OCT 30) (37-212) or F1 (BEGINS OCT 30) (6-120) or F2 (BEGINS OCT 30) (6-120) or F10 (BEGINS OCT 30) (2-190) or F11 (BEGINS OCT 30) (2-190) or F1 (BEGINS OCT 30) (34-101)

Provides an introduction to using computation to understand real-world phenomena. Topics include plotting, stochastic programs, probability and statistics, random walks, Monte Carlo simulations, modeling data, optimization problems, and clustering. Combination of 6.100A and 6.100B counts as REST subject.
A. BellTextbooks (Fall 2023)"
Problem-solving,Students will develop problem-solving skills as they apply computational thinking to real-world phenomena.,"6.100B Introduction to Computational Thinking and Data Science
",1,Fall 2023,Problem-solving,"6.100B Introduction to Computational Thinking and Data Science
", ,0,"(, ); second half of term
Prereq: 6.100A or permission of instructor
Units: 3-0-3
Credit cannot also be received for 9.C20, 16.C20, 18.C20, CSE.C20
https://introcomp.mit.edu/fall23
Lecture: MW3-4.30 (BEGINS OCT 30) (26-100) Lab: TBA Recitation: F10 (BEGINS OCT 30) (37-212) or F11 (BEGINS OCT 30) (37-212) or F1 (BEGINS OCT 30) (6-120) or F2 (BEGINS OCT 30) (6-120) or F10 (BEGINS OCT 30) (2-190) or F11 (BEGINS OCT 30) (2-190) or F1 (BEGINS OCT 30) (34-101)

Provides an introduction to using computation to understand real-world phenomena. Topics include plotting, stochastic programs, probability and statistics, random walks, Monte Carlo simulations, modeling data, optimization problems, and clustering. Combination of 6.100A and 6.100B counts as REST subject.
A. BellTextbooks (Fall 2023)"
Modeling,Students will learn how to create mathematical and computational models to represent and simulate real-world phenomena.,"6.100B Introduction to Computational Thinking and Data Science
",1,Fall 2023,,"6.100B Introduction to Computational Thinking and Data Science
", ,0,"(, ); second half of term
Prereq: 6.100A or permission of instructor
Units: 3-0-3
Credit cannot also be received for 9.C20, 16.C20, 18.C20, CSE.C20
https://introcomp.mit.edu/fall23
Lecture: MW3-4.30 (BEGINS OCT 30) (26-100) Lab: TBA Recitation: F10 (BEGINS OCT 30) (37-212) or F11 (BEGINS OCT 30) (37-212) or F1 (BEGINS OCT 30) (6-120) or F2 (BEGINS OCT 30) (6-120) or F10 (BEGINS OCT 30) (2-190) or F11 (BEGINS OCT 30) (2-190) or F1 (BEGINS OCT 30) (34-101)

Provides an introduction to using computation to understand real-world phenomena. Topics include plotting, stochastic programs, probability and statistics, random walks, Monte Carlo simulations, modeling data, optimization problems, and clustering. Combination of 6.100A and 6.100B counts as REST subject.
A. BellTextbooks (Fall 2023)"
Optimization,Students will gain the ability to formulate and solve optimization problems using computational methods.,"6.100B Introduction to Computational Thinking and Data Science
",1,Fall 2023,,"6.100B Introduction to Computational Thinking and Data Science
", ,0,"(, ); second half of term
Prereq: 6.100A or permission of instructor
Units: 3-0-3
Credit cannot also be received for 9.C20, 16.C20, 18.C20, CSE.C20
https://introcomp.mit.edu/fall23
Lecture: MW3-4.30 (BEGINS OCT 30) (26-100) Lab: TBA Recitation: F10 (BEGINS OCT 30) (37-212) or F11 (BEGINS OCT 30) (37-212) or F1 (BEGINS OCT 30) (6-120) or F2 (BEGINS OCT 30) (6-120) or F10 (BEGINS OCT 30) (2-190) or F11 (BEGINS OCT 30) (2-190) or F1 (BEGINS OCT 30) (34-101)

Provides an introduction to using computation to understand real-world phenomena. Topics include plotting, stochastic programs, probability and statistics, random walks, Monte Carlo simulations, modeling data, optimization problems, and clustering. Combination of 6.100A and 6.100B counts as REST subject.
A. BellTextbooks (Fall 2023)"
Programming,Students will develop programming skills using Python to solve problems and implement algorithms.,"6.100L Introduction to Computer Science and Programming
",1,Fall 2023,Programming and Coding,"6.100L Introduction to Computer Science and Programming
", ,0,"(, )
Prereq: None
Units: 3-0-6
Credit cannot also be received for 6.100A
https://introcomp.mit.edu/6.100L_fa23
Lecture: MW3-4.30 (2-190)

Introduction to computer science and programming for students with no programming experience. Presents content taught in 6.100A over an entire semester. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity.
A. BellTextbooks (Fall 2023)"
Computational techniques,Students will learn and apply computational techniques to analyze and solve problems.,"6.100L Introduction to Computer Science and Programming
",1,Fall 2023,,"6.100L Introduction to Computer Science and Programming
", ,0,"(, )
Prereq: None
Units: 3-0-6
Credit cannot also be received for 6.100A
https://introcomp.mit.edu/6.100L_fa23
Lecture: MW3-4.30 (2-190)

Introduction to computer science and programming for students with no programming experience. Presents content taught in 6.100A over an entire semester. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity.
A. BellTextbooks (Fall 2023)"
Algorithm design,Students will gain the skill of designing algorithms to solve specific tasks efficiently.,"6.100L Introduction to Computer Science and Programming
",1,Fall 2023,,"6.100L Introduction to Computer Science and Programming
", ,0,"(, )
Prereq: None
Units: 3-0-6
Credit cannot also be received for 6.100A
https://introcomp.mit.edu/6.100L_fa23
Lecture: MW3-4.30 (2-190)

Introduction to computer science and programming for students with no programming experience. Presents content taught in 6.100A over an entire semester. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity.
A. BellTextbooks (Fall 2023)"
Testing and debugging,Students will learn how to test and debug their programs to ensure their correctness and efficiency.,"6.100L Introduction to Computer Science and Programming
",1,Fall 2023,Software Testing and Debugging,"6.100L Introduction to Computer Science and Programming
", ,0,"(, )
Prereq: None
Units: 3-0-6
Credit cannot also be received for 6.100A
https://introcomp.mit.edu/6.100L_fa23
Lecture: MW3-4.30 (2-190)

Introduction to computer science and programming for students with no programming experience. Presents content taught in 6.100A over an entire semester. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity.
A. BellTextbooks (Fall 2023)"
Data structures,"Students will learn about and manipulate various data structures such as lists, arrays, and dictionaries.","6.100L Introduction to Computer Science and Programming
",1,Fall 2023,Data Structures and Manipulation,"6.100L Introduction to Computer Science and Programming
", ,0,"(, )
Prereq: None
Units: 3-0-6
Credit cannot also be received for 6.100A
https://introcomp.mit.edu/6.100L_fa23
Lecture: MW3-4.30 (2-190)

Introduction to computer science and programming for students with no programming experience. Presents content taught in 6.100A over an entire semester. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity.
A. BellTextbooks (Fall 2023)"
Programming,"Students will gain proficiency in programming languages, specifically Python, and learn how to apply programming methods to solve abstract problems.","6.1010 Fundamentals of Programming
",1,Fall 2023,Programming and Coding,"6.1010 Fundamentals of Programming
", ,0,"(, ) 
Prereq: 6.100A
Units: 2-4-6
https://py.mit.edu
Lecture: MW9 (36-156) or MW10 (36-156) or MW11 (2-190, 36-155) or MW1 (36-112, 3-270) or MW2 (36-112, 26-100) or MW3 (36-156) or MW10 (36-155) Lab: F10-1 (34-501) or F2-5 (34-501) +final

Introduces fundamental concepts of programming. Designed to develop skills in applying basic methods from programming languages to abstract problems. Topics include programming and Python basics, computational concepts, software engineering, algorithmic techniques, data types, and recursion.  Lab component consists of software design, construction, and implementation of design. Enrollment may be limited.
A. HartzNo textbook information available"
Software engineering,"Students will develop skills in software design, construction, and implementation.","6.1010 Fundamentals of Programming
",1,Fall 2023,,"6.1010 Fundamentals of Programming
", ,0,"(, ) 
Prereq: 6.100A
Units: 2-4-6
https://py.mit.edu
Lecture: MW9 (36-156) or MW10 (36-156) or MW11 (2-190, 36-155) or MW1 (36-112, 3-270) or MW2 (36-112, 26-100) or MW3 (36-156) or MW10 (36-155) Lab: F10-1 (34-501) or F2-5 (34-501) +final

Introduces fundamental concepts of programming. Designed to develop skills in applying basic methods from programming languages to abstract problems. Topics include programming and Python basics, computational concepts, software engineering, algorithmic techniques, data types, and recursion.  Lab component consists of software design, construction, and implementation of design. Enrollment may be limited.
A. HartzNo textbook information available"
Algorithmic techniques,Students will learn various algorithmic techniques used in programming to solve complex problems efficiently.,"6.1010 Fundamentals of Programming
",1,Fall 2023,Algorithmic Techniques,"6.1010 Fundamentals of Programming
", ,0,"(, ) 
Prereq: 6.100A
Units: 2-4-6
https://py.mit.edu
Lecture: MW9 (36-156) or MW10 (36-156) or MW11 (2-190, 36-155) or MW1 (36-112, 3-270) or MW2 (36-112, 26-100) or MW3 (36-156) or MW10 (36-155) Lab: F10-1 (34-501) or F2-5 (34-501) +final

Introduces fundamental concepts of programming. Designed to develop skills in applying basic methods from programming languages to abstract problems. Topics include programming and Python basics, computational concepts, software engineering, algorithmic techniques, data types, and recursion.  Lab component consists of software design, construction, and implementation of design. Enrollment may be limited.
A. HartzNo textbook information available"
Data types,Students will learn about different data types and how to manipulate and store data in programming.,"6.1010 Fundamentals of Programming
",1,Fall 2023,Data Structures and Manipulation,"6.1010 Fundamentals of Programming
", ,0,"(, ) 
Prereq: 6.100A
Units: 2-4-6
https://py.mit.edu
Lecture: MW9 (36-156) or MW10 (36-156) or MW11 (2-190, 36-155) or MW1 (36-112, 3-270) or MW2 (36-112, 26-100) or MW3 (36-156) or MW10 (36-155) Lab: F10-1 (34-501) or F2-5 (34-501) +final

Introduces fundamental concepts of programming. Designed to develop skills in applying basic methods from programming languages to abstract problems. Topics include programming and Python basics, computational concepts, software engineering, algorithmic techniques, data types, and recursion.  Lab component consists of software design, construction, and implementation of design. Enrollment may be limited.
A. HartzNo textbook information available"
Recursion,Students will learn the concept of recursion and how to use it in programming to solve repetitive problems.,"6.1010 Fundamentals of Programming
",1,Fall 2023,Recursion,"6.1010 Fundamentals of Programming
", ,0,"(, ) 
Prereq: 6.100A
Units: 2-4-6
https://py.mit.edu
Lecture: MW9 (36-156) or MW10 (36-156) or MW11 (2-190, 36-155) or MW1 (36-112, 3-270) or MW2 (36-112, 26-100) or MW3 (36-156) or MW10 (36-155) Lab: F10-1 (34-501) or F2-5 (34-501) +final

Introduces fundamental concepts of programming. Designed to develop skills in applying basic methods from programming languages to abstract problems. Topics include programming and Python basics, computational concepts, software engineering, algorithmic techniques, data types, and recursion.  Lab component consists of software design, construction, and implementation of design. Enrollment may be limited.
A. HartzNo textbook information available"
Software development,"Students will learn the fundamental principles and techniques of software development, including writing safe and bug-free code.","6.1020 Software Construction
",1,Fall 2023,Software Development and Web Application Security,"6.1020 Software Construction
", ,0,"()
Prereq: 6.1010
Units: 3-0-12

Introduces fundamental principles and techniques of software development: how to write software that is safe from bugs, easy to understand, and ready for change. Topics include specifications and invariants; testing, test-case generation, and coverage; abstract data types and representation independence; design patterns for object-oriented programming; concurrent programming, including message passing and shared memory concurrency, and defending against races and deadlock; and functional programming with immutable data and higher-order functions. Includes weekly programming exercises and larger group programming projects.
Staff"
Testing and test-case generation,Students will gain proficiency in testing software and generating test cases to ensure the quality and reliability of their code.,"6.1020 Software Construction
",1,Fall 2023,Software Testing and Debugging,"6.1020 Software Construction
", ,0,"()
Prereq: 6.1010
Units: 3-0-12

Introduces fundamental principles and techniques of software development: how to write software that is safe from bugs, easy to understand, and ready for change. Topics include specifications and invariants; testing, test-case generation, and coverage; abstract data types and representation independence; design patterns for object-oriented programming; concurrent programming, including message passing and shared memory concurrency, and defending against races and deadlock; and functional programming with immutable data and higher-order functions. Includes weekly programming exercises and larger group programming projects.
Staff"
Object-oriented programming,"Students will learn design patterns and techniques for object-oriented programming, enabling them to write modular and reusable code.","6.1020 Software Construction
",1,Fall 2023,Object-oriented programming,"6.1020 Software Construction
", ,0,"()
Prereq: 6.1010
Units: 3-0-12

Introduces fundamental principles and techniques of software development: how to write software that is safe from bugs, easy to understand, and ready for change. Topics include specifications and invariants; testing, test-case generation, and coverage; abstract data types and representation independence; design patterns for object-oriented programming; concurrent programming, including message passing and shared memory concurrency, and defending against races and deadlock; and functional programming with immutable data and higher-order functions. Includes weekly programming exercises and larger group programming projects.
Staff"
Concurrent programming,"Students will develop skills in concurrent programming, including message passing and shared memory concurrency, and learn how to defend against races and deadlock.","6.1020 Software Construction
",1,Fall 2023,,"6.1020 Software Construction
", ,0,"()
Prereq: 6.1010
Units: 3-0-12

Introduces fundamental principles and techniques of software development: how to write software that is safe from bugs, easy to understand, and ready for change. Topics include specifications and invariants; testing, test-case generation, and coverage; abstract data types and representation independence; design patterns for object-oriented programming; concurrent programming, including message passing and shared memory concurrency, and defending against races and deadlock; and functional programming with immutable data and higher-order functions. Includes weekly programming exercises and larger group programming projects.
Staff"
Functional programming,"Students will learn the concepts of functional programming, including working with immutable data and higher-order functions.","6.1020 Software Construction
",1,Fall 2023,Functional programming,"6.1020 Software Construction
", ,0,"()
Prereq: 6.1010
Units: 3-0-12

Introduces fundamental principles and techniques of software development: how to write software that is safe from bugs, easy to understand, and ready for change. Topics include specifications and invariants; testing, test-case generation, and coverage; abstract data types and representation independence; design patterns for object-oriented programming; concurrent programming, including message passing and shared memory concurrency, and defending against races and deadlock; and functional programming with immutable data and higher-order functions. Includes weekly programming exercises and larger group programming projects.
Staff"
Web application development,"Students will learn how to design and build full-stack web applications, gaining proficiency in developing web-based software.","6.1040 Software Design
",1,Fall 2023,,"6.1040 Software Design
", ,0,"()
Prereq: 6.1020 and 6.1200
Units: 4-0-14
https://61040-fa23.github.io
Lecture: MW2.30-4 (1-190) Recitation: R10 (38-166) or R11 (56-191) or R12 (26-314) or R1 (34-303) or R2 (34-301) or R3 (34-301)

Provides design-focused instruction on how to build complex software applications. Design topics include classic human-computer interaction (HCI) design tactics (need finding, heuristic evaluation, prototyping, user testing), conceptual design (inventing, modeling and evaluating constituent concepts), social and ethical implications, abstract data modeling, and visual design. Implementation topics include reactive front-ends, web services, and databases. Students work both on individual projects and a larger team project in which they design and build full-stack web applications.
D. JacksonTextbooks (Fall 2023)"
Human-computer interaction (HCI) design,"Students will acquire skills in classic HCI design tactics such as need finding, heuristic evaluation, prototyping, and user testing.","6.1040 Software Design
",1,Fall 2023,,"6.1040 Software Design
", ,0,"()
Prereq: 6.1020 and 6.1200
Units: 4-0-14
https://61040-fa23.github.io
Lecture: MW2.30-4 (1-190) Recitation: R10 (38-166) or R11 (56-191) or R12 (26-314) or R1 (34-303) or R2 (34-301) or R3 (34-301)

Provides design-focused instruction on how to build complex software applications. Design topics include classic human-computer interaction (HCI) design tactics (need finding, heuristic evaluation, prototyping, user testing), conceptual design (inventing, modeling and evaluating constituent concepts), social and ethical implications, abstract data modeling, and visual design. Implementation topics include reactive front-ends, web services, and databases. Students work both on individual projects and a larger team project in which they design and build full-stack web applications.
D. JacksonTextbooks (Fall 2023)"
Database management,"Students will develop proficiency in working with databases, including topics such as database design and web services.","6.1040 Software Design
",1,Fall 2023,,"6.1040 Software Design
", ,0,"()
Prereq: 6.1020 and 6.1200
Units: 4-0-14
https://61040-fa23.github.io
Lecture: MW2.30-4 (1-190) Recitation: R10 (38-166) or R11 (56-191) or R12 (26-314) or R1 (34-303) or R2 (34-301) or R3 (34-301)

Provides design-focused instruction on how to build complex software applications. Design topics include classic human-computer interaction (HCI) design tactics (need finding, heuristic evaluation, prototyping, user testing), conceptual design (inventing, modeling and evaluating constituent concepts), social and ethical implications, abstract data modeling, and visual design. Implementation topics include reactive front-ends, web services, and databases. Students work both on individual projects and a larger team project in which they design and build full-stack web applications.
D. JacksonTextbooks (Fall 2023)"
Problem-solving,"Through programming projects, students will enhance their problem-solving abilities, applying their skills to solve complex software development challenges.","6.1040 Software Design
",1,Fall 2023,Problem-solving,"6.1040 Software Design
", ,0,"()
Prereq: 6.1020 and 6.1200
Units: 4-0-14
https://61040-fa23.github.io
Lecture: MW2.30-4 (1-190) Recitation: R10 (38-166) or R11 (56-191) or R12 (26-314) or R1 (34-303) or R2 (34-301) or R3 (34-301)

Provides design-focused instruction on how to build complex software applications. Design topics include classic human-computer interaction (HCI) design tactics (need finding, heuristic evaluation, prototyping, user testing), conceptual design (inventing, modeling and evaluating constituent concepts), social and ethical implications, abstract data modeling, and visual design. Implementation topics include reactive front-ends, web services, and databases. Students work both on individual projects and a larger team project in which they design and build full-stack web applications.
D. JacksonTextbooks (Fall 2023)"
Communication,"Students will improve their communication skills as they collaborate on individual and team projects, effectively conveying their ideas and collaborating with others.","6.1040 Software Design
",1,Fall 2023,Communication,"6.1040 Software Design
", ,0,"()
Prereq: 6.1020 and 6.1200
Units: 4-0-14
https://61040-fa23.github.io
Lecture: MW2.30-4 (1-190) Recitation: R10 (38-166) or R11 (56-191) or R12 (26-314) or R1 (34-303) or R2 (34-301) or R3 (34-301)

Provides design-focused instruction on how to build complex software applications. Design topics include classic human-computer interaction (HCI) design tactics (need finding, heuristic evaluation, prototyping, user testing), conceptual design (inventing, modeling and evaluating constituent concepts), social and ethical implications, abstract data modeling, and visual design. Implementation topics include reactive front-ends, web services, and databases. Students work both on individual projects and a larger team project in which they design and build full-stack web applications.
D. JacksonTextbooks (Fall 2023)"
Performance analysis,Students will learn how to analyze the performance of software systems.,"6.1060 Software Performance Engineering
",1,Fall 2023,,"6.1060 Software Performance Engineering
", ,0,"()
Prereq: 6.1020, 6.1210, and 6.1910
Units: 3-12-3
Lecture: TR9.30-11 (26-100) Lab: F10-12 (4-265) or F1-3 (34-302) or F3-5 (34-302) or F10-12 (26-322) or F1-3 (34-301) or F3-5 (34-301) or F3-5 (34-304)

Project-based introduction to building efficient, high-performance and scalable software systems. Topics include performance analysis, algorithmic techniques for high performance, instruction-level optimizations, vectorization, cache and memory hierarchy optimization, and parallel programming.
C. LeisersonNo textbook information available"
Algorithmic techniques for high performance,Students will learn various algorithms and techniques to optimize the performance of software systems.,"6.1060 Software Performance Engineering
",1,Fall 2023,,"6.1060 Software Performance Engineering
", ,0,"()
Prereq: 6.1020, 6.1210, and 6.1910
Units: 3-12-3
Lecture: TR9.30-11 (26-100) Lab: F10-12 (4-265) or F1-3 (34-302) or F3-5 (34-302) or F10-12 (26-322) or F1-3 (34-301) or F3-5 (34-301) or F3-5 (34-304)

Project-based introduction to building efficient, high-performance and scalable software systems. Topics include performance analysis, algorithmic techniques for high performance, instruction-level optimizations, vectorization, cache and memory hierarchy optimization, and parallel programming.
C. LeisersonNo textbook information available"
Instruction-level optimizations,Students will gain proficiency in optimizing software at the instruction level.,"6.1060 Software Performance Engineering
",1,Fall 2023,Instruction-level optimizations,"6.1060 Software Performance Engineering
", ,0,"()
Prereq: 6.1020, 6.1210, and 6.1910
Units: 3-12-3
Lecture: TR9.30-11 (26-100) Lab: F10-12 (4-265) or F1-3 (34-302) or F3-5 (34-302) or F10-12 (26-322) or F1-3 (34-301) or F3-5 (34-301) or F3-5 (34-304)

Project-based introduction to building efficient, high-performance and scalable software systems. Topics include performance analysis, algorithmic techniques for high performance, instruction-level optimizations, vectorization, cache and memory hierarchy optimization, and parallel programming.
C. LeisersonNo textbook information available"
Vectorization,Students will learn how to utilize vectorization to improve the performance of software systems.,"6.1060 Software Performance Engineering
",1,Fall 2023,Vectorization,"6.1060 Software Performance Engineering
", ,0,"()
Prereq: 6.1020, 6.1210, and 6.1910
Units: 3-12-3
Lecture: TR9.30-11 (26-100) Lab: F10-12 (4-265) or F1-3 (34-302) or F3-5 (34-302) or F10-12 (26-322) or F1-3 (34-301) or F3-5 (34-301) or F3-5 (34-304)

Project-based introduction to building efficient, high-performance and scalable software systems. Topics include performance analysis, algorithmic techniques for high performance, instruction-level optimizations, vectorization, cache and memory hierarchy optimization, and parallel programming.
C. LeisersonNo textbook information available"
Parallel programming,Students will develop skills in programming for parallel computing.,"6.1060 Software Performance Engineering
",1,Fall 2023,Parallel Computing,"6.1060 Software Performance Engineering
", ,0,"()
Prereq: 6.1020, 6.1210, and 6.1910
Units: 3-12-3
Lecture: TR9.30-11 (26-100) Lab: F10-12 (4-265) or F1-3 (34-302) or F3-5 (34-302) or F10-12 (26-322) or F1-3 (34-301) or F3-5 (34-301) or F3-5 (34-304)

Project-based introduction to building efficient, high-performance and scalable software systems. Topics include performance analysis, algorithmic techniques for high performance, instruction-level optimizations, vectorization, cache and memory hierarchy optimization, and parallel programming.
C. LeisersonNo textbook information available"
Algorithm design and analysis,Students will learn how to design and analyze algorithms to solve various computational problems.,"6.5060 Algorithm Engineering
",1,Fall 2023,Algorithm Analysis and Design,"6.5060 Algorithm Engineering
", ,0,"()
Prereq: 6.1060 and 6.1220
Units: 3-0-9

Covers the theory and practice of algorithms and data structures. Topics include models of computation, algorithm design and analysis, and performance engineering of algorithm implementations. Presents the design and implementation of sequential, parallel, cache-efficient, and external-memory algorithms. Illustrates many of the principles of algorithm engineering in the context of parallel algorithms and graph problems.
Staff"
Performance engineering,Students will gain the ability to optimize and improve the performance of algorithm implementations.,"6.5060 Algorithm Engineering
",1,Fall 2023,Performance Analysis and Optimization,"6.5060 Algorithm Engineering
", ,0,"()
Prereq: 6.1060 and 6.1220
Units: 3-0-9

Covers the theory and practice of algorithms and data structures. Topics include models of computation, algorithm design and analysis, and performance engineering of algorithm implementations. Presents the design and implementation of sequential, parallel, cache-efficient, and external-memory algorithms. Illustrates many of the principles of algorithm engineering in the context of parallel algorithms and graph problems.
Staff"
Sequential algorithm implementation,Students will develop the skill to implement algorithms that are executed sequentially.,"6.5060 Algorithm Engineering
",1,Fall 2023,,"6.5060 Algorithm Engineering
", ,0,"()
Prereq: 6.1060 and 6.1220
Units: 3-0-9

Covers the theory and practice of algorithms and data structures. Topics include models of computation, algorithm design and analysis, and performance engineering of algorithm implementations. Presents the design and implementation of sequential, parallel, cache-efficient, and external-memory algorithms. Illustrates many of the principles of algorithm engineering in the context of parallel algorithms and graph problems.
Staff"
Parallel algorithm implementation,Students will learn how to implement algorithms that can be executed in parallel.,"6.5060 Algorithm Engineering
",1,Fall 2023,Parallel Algorithm,"6.5060 Algorithm Engineering
", ,0,"()
Prereq: 6.1060 and 6.1220
Units: 3-0-9

Covers the theory and practice of algorithms and data structures. Topics include models of computation, algorithm design and analysis, and performance engineering of algorithm implementations. Presents the design and implementation of sequential, parallel, cache-efficient, and external-memory algorithms. Illustrates many of the principles of algorithm engineering in the context of parallel algorithms and graph problems.
Staff"
External-memory algorithm implementation,Students will gain proficiency in implementing algorithms that efficiently use external memory.,"6.5060 Algorithm Engineering
",1,Fall 2023,External-memory algorithm implementation,"6.5060 Algorithm Engineering
", ,0,"()
Prereq: 6.1060 and 6.1220
Units: 3-0-9

Covers the theory and practice of algorithms and data structures. Topics include models of computation, algorithm design and analysis, and performance engineering of algorithm implementations. Presents the design and implementation of sequential, parallel, cache-efficient, and external-memory algorithms. Illustrates many of the principles of algorithm engineering in the context of parallel algorithms and graph problems.
Staff"
Multicore programming,"Students will gain proficiency in programming multicore machines, including understanding principles and core techniques such as locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and synchronization techniques.","6.5080 Multicore Programming
",1,Fall 2023,Concurrent and Parallel Programming,"6.5080 Multicore Programming
", ,0,"()
(Subject meets with 6.5081)
Prereq: 6.1210
Units: 4-0-8

Introduces principles and core techniques for programming multicore machines. Topics include locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and state-of-the-art synchronization techniques, such as transactional memory. Includes sequence of programming assignments on a large multicore machine, culminating with the design of a highly concurrent application. Students taking graduate version complete additional assignments.
Staff"
Transactional memory,Students will learn about state-of-the-art synchronization technique called transactional memory and how to apply it in multicore programming.,"6.5080 Multicore Programming
",1,Fall 2023,Transactional memory,"6.5080 Multicore Programming
", ,0,"()
(Subject meets with 6.5081)
Prereq: 6.1210
Units: 4-0-8

Introduces principles and core techniques for programming multicore machines. Topics include locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and state-of-the-art synchronization techniques, such as transactional memory. Includes sequence of programming assignments on a large multicore machine, culminating with the design of a highly concurrent application. Students taking graduate version complete additional assignments.
Staff"
Multicore programming,"Students will gain proficiency in programming multicore machines, including principles and core techniques such as locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and synchronization techniques.","6.5081 Multicore Programming
",1,Fall 2023,Concurrent and Parallel Programming,"6.5081 Multicore Programming
", ,0,"()
(Subject meets with 6.5080)
Prereq: 6.1210
Units: 4-0-8
 Subject Cancelled 

Introduces principles and core techniques for programming multicore machines. Topics include locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and state-of-the-art synchronization techniques, such as transactional memory. Includes sequence of programming assignments on a large multicore machine, culminating with the design of a highly concurrent application. Students taking graduate version complete additional assignments.
Staff

Programming Languages"
Designing highly concurrent applications,Students will learn how to design a highly concurrent application as part of the programming assignments.,"6.5081 Multicore Programming
",1,Fall 2023,Designing highly concurrent applications,"6.5081 Multicore Programming
", ,0,"()
(Subject meets with 6.5080)
Prereq: 6.1210
Units: 4-0-8
 Subject Cancelled 

Introduces principles and core techniques for programming multicore machines. Topics include locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and state-of-the-art synchronization techniques, such as transactional memory. Includes sequence of programming assignments on a large multicore machine, culminating with the design of a highly concurrent application. Students taking graduate version complete additional assignments.
Staff

Programming Languages"
Programming assignments,Students will develop their programming skills through a sequence of programming assignments on a large multicore machine.,"6.5081 Multicore Programming
",1,Fall 2023,,"6.5081 Multicore Programming
", ,0,"()
(Subject meets with 6.5080)
Prereq: 6.1210
Units: 4-0-8
 Subject Cancelled 

Introduces principles and core techniques for programming multicore machines. Topics include locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and state-of-the-art synchronization techniques, such as transactional memory. Includes sequence of programming assignments on a large multicore machine, culminating with the design of a highly concurrent application. Students taking graduate version complete additional assignments.
Staff

Programming Languages"
Transactional memory,"Students will learn about state-of-the-art synchronization techniques, such as transactional memory, used in multicore programming.","6.5081 Multicore Programming
",1,Fall 2023,Transactional memory,"6.5081 Multicore Programming
", ,0,"()
(Subject meets with 6.5080)
Prereq: 6.1210
Units: 4-0-8
 Subject Cancelled 

Introduces principles and core techniques for programming multicore machines. Topics include locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and state-of-the-art synchronization techniques, such as transactional memory. Includes sequence of programming assignments on a large multicore machine, culminating with the design of a highly concurrent application. Students taking graduate version complete additional assignments.
Staff

Programming Languages"
Compiler design,Students will learn how to design and implement compilers for higher-level programming languages.,"6.1100 Computer Language Engineering
",1,Fall 2023,Compiler design,"6.1100 Computer Language Engineering
", ,0,"()
Prereq: 6.1020 and 6.1910
Units: 4-4-4

Analyzes issues associated with the implementation of higher-level programming languages. Fundamental concepts, functions, and structures of compilers. The interaction of theory and practice. Using tools in building software. Includes a multi-person project on compiler design and implementation.
Staff"
Software development,Students will gain proficiency in using tools and techniques for building software.,"6.1100 Computer Language Engineering
",1,Fall 2023,Software Development and Web Application Security,"6.1100 Computer Language Engineering
", ,0,"()
Prereq: 6.1020 and 6.1910
Units: 4-4-4

Analyzes issues associated with the implementation of higher-level programming languages. Fundamental concepts, functions, and structures of compilers. The interaction of theory and practice. Using tools in building software. Includes a multi-person project on compiler design and implementation.
Staff"
Programming languages,Students will develop proficiency in understanding and working with different programming languages.,"6.1100 Computer Language Engineering
",1,Fall 2023,,"6.1100 Computer Language Engineering
", ,0,"()
Prereq: 6.1020 and 6.1910
Units: 4-4-4

Analyzes issues associated with the implementation of higher-level programming languages. Fundamental concepts, functions, and structures of compilers. The interaction of theory and practice. Using tools in building software. Includes a multi-person project on compiler design and implementation.
Staff"
Problem-solving,Students will enhance their problem-solving skills through the multi-person project on compiler design and implementation.,"6.1100 Computer Language Engineering
",1,Fall 2023,Problem-solving,"6.1100 Computer Language Engineering
", ,0,"()
Prereq: 6.1020 and 6.1910
Units: 4-4-4

Analyzes issues associated with the implementation of higher-level programming languages. Fundamental concepts, functions, and structures of compilers. The interaction of theory and practice. Using tools in building software. Includes a multi-person project on compiler design and implementation.
Staff"
Teamwork,Students will learn how to collaborate effectively in a multi-person project.,"6.1100 Computer Language Engineering
",1,Fall 2023,,"6.1100 Computer Language Engineering
", ,0,"()
Prereq: 6.1020 and 6.1910
Units: 4-4-4

Analyzes issues associated with the implementation of higher-level programming languages. Fundamental concepts, functions, and structures of compilers. The interaction of theory and practice. Using tools in building software. Includes a multi-person project on compiler design and implementation.
Staff"
Dynamic programming languages,"Students will gain proficiency in designing and implementing modern, dynamic programming languages.","6.1120 Dynamic Computer Language Engineering
",1,Fall 2023,,"6.1120 Dynamic Computer Language Engineering
", ,0,"()
Prereq: 6.1020 or 6.1910
Units: 4-4-4
Lecture: MWF1 (66-160) Recitation: TR1 (36-155)

Studies the design and implementation of modern, dynamic programming languages. Topics include fundamental approaches for parsing, semantics and interpretation, virtual machines, garbage collection, just-in-time machine code generation, and optimization. Includes a semester-long, group project that delivers a virtual machine that spans all of these topics.
M. RinardNo textbook information available"
Parsing,"Students will learn fundamental approaches for parsing, which involves analyzing the structure of a program.","6.1120 Dynamic Computer Language Engineering
",1,Fall 2023,Parsing,"6.1120 Dynamic Computer Language Engineering
", ,0,"()
Prereq: 6.1020 or 6.1910
Units: 4-4-4
Lecture: MWF1 (66-160) Recitation: TR1 (36-155)

Studies the design and implementation of modern, dynamic programming languages. Topics include fundamental approaches for parsing, semantics and interpretation, virtual machines, garbage collection, just-in-time machine code generation, and optimization. Includes a semester-long, group project that delivers a virtual machine that spans all of these topics.
M. RinardNo textbook information available"
Semantics and interpretation,Students will develop the ability to understand and interpret the meaning of programming language constructs.,"6.1120 Dynamic Computer Language Engineering
",1,Fall 2023,,"6.1120 Dynamic Computer Language Engineering
", ,0,"()
Prereq: 6.1020 or 6.1910
Units: 4-4-4
Lecture: MWF1 (66-160) Recitation: TR1 (36-155)

Studies the design and implementation of modern, dynamic programming languages. Topics include fundamental approaches for parsing, semantics and interpretation, virtual machines, garbage collection, just-in-time machine code generation, and optimization. Includes a semester-long, group project that delivers a virtual machine that spans all of these topics.
M. RinardNo textbook information available"
Virtual machines,"Students will learn about the design and implementation of virtual machines, which execute programs written in a specific programming language.","6.1120 Dynamic Computer Language Engineering
",1,Fall 2023,Virtual machines,"6.1120 Dynamic Computer Language Engineering
", ,0,"()
Prereq: 6.1020 or 6.1910
Units: 4-4-4
Lecture: MWF1 (66-160) Recitation: TR1 (36-155)

Studies the design and implementation of modern, dynamic programming languages. Topics include fundamental approaches for parsing, semantics and interpretation, virtual machines, garbage collection, just-in-time machine code generation, and optimization. Includes a semester-long, group project that delivers a virtual machine that spans all of these topics.
M. RinardNo textbook information available"
Garbage collection,"Students will gain knowledge and skills in implementing garbage collection techniques, which manage memory allocation and deallocation in programming languages.","6.1120 Dynamic Computer Language Engineering
",1,Fall 2023,Garbage collection,"6.1120 Dynamic Computer Language Engineering
", ,0,"()
Prereq: 6.1020 or 6.1910
Units: 4-4-4
Lecture: MWF1 (66-160) Recitation: TR1 (36-155)

Studies the design and implementation of modern, dynamic programming languages. Topics include fundamental approaches for parsing, semantics and interpretation, virtual machines, garbage collection, just-in-time machine code generation, and optimization. Includes a semester-long, group project that delivers a virtual machine that spans all of these topics.
M. RinardNo textbook information available"
Programming,"Students will gain proficiency in programming languages such as Haskell and Ocaml, as they implement techniques covered in class and build simple verifiers.","6.5110 Foundations of Program Analysis
",1,Fall 2023,Programming and Coding,"6.5110 Foundations of Program Analysis
", ,0,"()
Prereq: 6.1100
Units: 3-0-9
 Subject Cancelled 

Presents major principles and techniques for program analysis. Includes formal semantics, type systems and type-based program analysis, abstract interpretation and model checking and synthesis. Emphasis on Haskell and Ocaml, but no prior experience in these languages is assumed. Student assignments include implementing of techniques covered in class, including building simple verifiers.
A. Solar-Lezama"
Program analysis,"Students will learn and apply major principles and techniques for program analysis, including formal semantics, type systems, type-based program analysis, abstract interpretation, and model checking and synthesis.","6.5110 Foundations of Program Analysis
",1,Fall 2023,Program analysis,"6.5110 Foundations of Program Analysis
", ,0,"()
Prereq: 6.1100
Units: 3-0-9
 Subject Cancelled 

Presents major principles and techniques for program analysis. Includes formal semantics, type systems and type-based program analysis, abstract interpretation and model checking and synthesis. Emphasis on Haskell and Ocaml, but no prior experience in these languages is assumed. Student assignments include implementing of techniques covered in class, including building simple verifiers.
A. Solar-Lezama"
Logical reasoning,Students will develop the skill of analyzing and evaluating logical arguments.,"6.5120 Formal Reasoning About Programs
",1,Fall 2023,,"6.5120 Formal Reasoning About Programs
", ,0,"()
Prereq: 6.1020 and 6.1200
Units: 3-0-9

Surveys techniques for rigorous mathematical reasoning about correctness of software, emphasizing commonalities across approaches. Introduces interactive computer theorem proving with the Coq proof assistant, which is used for all assignments, providing immediate feedback on soundness of logical arguments. Covers common program-proof techniques, including operational semantics, model checking, abstract interpretation, type systems, program logics, and their applications to functional, imperative, and concurrent programs. Develops a common conceptual framework based on invariants, abstraction, and modularity applied to state and labeled transition systems.
Staff"
Programming,Students will gain proficiency in programming languages and techniques used in formal reasoning about programs.,"6.5120 Formal Reasoning About Programs
",1,Fall 2023,Programming and Coding,"6.5120 Formal Reasoning About Programs
", ,0,"()
Prereq: 6.1020 and 6.1200
Units: 3-0-9

Surveys techniques for rigorous mathematical reasoning about correctness of software, emphasizing commonalities across approaches. Introduces interactive computer theorem proving with the Coq proof assistant, which is used for all assignments, providing immediate feedback on soundness of logical arguments. Covers common program-proof techniques, including operational semantics, model checking, abstract interpretation, type systems, program logics, and their applications to functional, imperative, and concurrent programs. Develops a common conceptual framework based on invariants, abstraction, and modularity applied to state and labeled transition systems.
Staff"
Model checking,Students will learn how to use model checking techniques to verify the correctness of software.,"6.5120 Formal Reasoning About Programs
",1,Fall 2023,Model checking,"6.5120 Formal Reasoning About Programs
", ,0,"()
Prereq: 6.1020 and 6.1200
Units: 3-0-9

Surveys techniques for rigorous mathematical reasoning about correctness of software, emphasizing commonalities across approaches. Introduces interactive computer theorem proving with the Coq proof assistant, which is used for all assignments, providing immediate feedback on soundness of logical arguments. Covers common program-proof techniques, including operational semantics, model checking, abstract interpretation, type systems, program logics, and their applications to functional, imperative, and concurrent programs. Develops a common conceptual framework based on invariants, abstraction, and modularity applied to state and labeled transition systems.
Staff"
Abstract interpretation,Students will learn how to apply abstract interpretation techniques to analyze and reason about programs.,"6.5120 Formal Reasoning About Programs
",1,Fall 2023,,"6.5120 Formal Reasoning About Programs
", ,0,"()
Prereq: 6.1020 and 6.1200
Units: 3-0-9

Surveys techniques for rigorous mathematical reasoning about correctness of software, emphasizing commonalities across approaches. Introduces interactive computer theorem proving with the Coq proof assistant, which is used for all assignments, providing immediate feedback on soundness of logical arguments. Covers common program-proof techniques, including operational semantics, model checking, abstract interpretation, type systems, program logics, and their applications to functional, imperative, and concurrent programs. Develops a common conceptual framework based on invariants, abstraction, and modularity applied to state and labeled transition systems.
Staff"
Coq proof assistant,Students will develop proficiency in using the Coq proof assistant for interactive computer theorem proving.,"6.5120 Formal Reasoning About Programs
",1,Fall 2023,Coq proof assistant,"6.5120 Formal Reasoning About Programs
", ,0,"()
Prereq: 6.1020 and 6.1200
Units: 3-0-9

Surveys techniques for rigorous mathematical reasoning about correctness of software, emphasizing commonalities across approaches. Introduces interactive computer theorem proving with the Coq proof assistant, which is used for all assignments, providing immediate feedback on soundness of logical arguments. Covers common program-proof techniques, including operational semantics, model checking, abstract interpretation, type systems, program logics, and their applications to functional, imperative, and concurrent programs. Develops a common conceptual framework based on invariants, abstraction, and modularity applied to state and labeled transition systems.
Staff"
Programming,Students will develop proficiency in programming languages and gain the ability to write code to solve complex problems.,"6.5150 Large-scale Symbolic Systems
",1,Fall 2023,Programming and Coding,"6.5150 Large-scale Symbolic Systems
", ,0,"()
(Subject meets with 6.5151)
Prereq: 6.4100 or permission of instructor
Units: 3-0-9

Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.
G. J. Sussman"
Database management,Students will learn how to manage databases and manipulate data using SQL.,"6.5150 Large-scale Symbolic Systems
",1,Fall 2023,Database-related tasks,"6.5150 Large-scale Symbolic Systems
", ,0,"()
(Subject meets with 6.5151)
Prereq: 6.4100 or permission of instructor
Units: 3-0-9

Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.
G. J. Sussman"
Problem-solving,Students will develop the ability to analyze and solve problems related to large-scale symbolic systems.,"6.5150 Large-scale Symbolic Systems
",1,Fall 2023,Problem-solving,"6.5150 Large-scale Symbolic Systems
", ,0,"()
(Subject meets with 6.5151)
Prereq: 6.4100 or permission of instructor
Units: 3-0-9

Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.
G. J. Sussman"
Communication,Students will enhance their communication skills through assignments and projects that require clear and effective communication of ideas and concepts.,"6.5150 Large-scale Symbolic Systems
",1,Fall 2023,Communication,"6.5150 Large-scale Symbolic Systems
", ,0,"()
(Subject meets with 6.5151)
Prereq: 6.4100 or permission of instructor
Units: 3-0-9

Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.
G. J. Sussman"
Software design,Students will learn how to design and implement large software systems that can be adapted to various uses.,"6.5150 Large-scale Symbolic Systems
",1,Fall 2023,Software Development and Engineering,"6.5150 Large-scale Symbolic Systems
", ,0,"()
(Subject meets with 6.5151)
Prereq: 6.4100 or permission of instructor
Units: 3-0-9

Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.
G. J. Sussman"
Programming,Students will develop proficiency in programming languages and techniques to design and implement large software systems.,"6.5151 Large-scale Symbolic Systems
",1,Fall 2023,Programming and Coding,"6.5151 Large-scale Symbolic Systems
", ,0,"()
(Subject meets with 6.5150)
Prereq: 6.4100 or permission of instructor
Units: 3-0-9

Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.
Staff"
Database management,Students will learn how to manage and manipulate data in large-scale symbolic systems.,"6.5151 Large-scale Symbolic Systems
",1,Fall 2023,Database-related tasks,"6.5151 Large-scale Symbolic Systems
", ,0,"()
(Subject meets with 6.5150)
Prereq: 6.4100 or permission of instructor
Units: 3-0-9

Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.
Staff"
Problem-solving,Students will develop problem-solving skills as they work on designing and implementing large software systems.,"6.5151 Large-scale Symbolic Systems
",1,Fall 2023,Problem-solving,"6.5151 Large-scale Symbolic Systems
", ,0,"()
(Subject meets with 6.5150)
Prereq: 6.4100 or permission of instructor
Units: 3-0-9

Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.
Staff"
Communication,Students will enhance their communication skills through collaborative projects and presentations.,"6.5151 Large-scale Symbolic Systems
",1,Fall 2023,Communication,"6.5151 Large-scale Symbolic Systems
", ,0,"()
(Subject meets with 6.5150)
Prereq: 6.4100 or permission of instructor
Units: 3-0-9

Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.
Staff"
Analytical thinking,Students will develop the ability to analyze complex issues and make informed decisions in the context of large-scale symbolic systems.,"6.5151 Large-scale Symbolic Systems
",1,Fall 2023,Analytical Thinking Skills,"6.5151 Large-scale Symbolic Systems
", ,0,"()
(Subject meets with 6.5150)
Prereq: 6.4100 or permission of instructor
Units: 3-0-9

Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.
Staff"
Programming,Students will develop programming skills through extensive use of computation for simulation and symbolic analysis.,"6.5160[J] Classical Mechanics: A Computational Approach
",1,Fall 2023,Programming and Coding,"6.5160[J] Classical Mechanics: A Computational Approach
", ,0,"()
(Same subject as 8.351[J], 12.620[J])
Prereq: Physics I (GIR), 18.03, and permission of instructor
Units: 3-3-6
Lecture: MWF1 (54-823) Lab: W EVE (7-10 PM) (54-517)

Classical mechanics in a computational framework, Lagrangian formulation, action, variational principles, and Hamilton's principle. Conserved quantities, Hamiltonian formulation, surfaces of section, chaos, and Liouville's theorem. Poincarďż˝ integral invariants, Poincarďż˝-Birkhoff and KAM theorems. Invariant curves and cantori. Nonlinear resonances, resonance overlap and transition to chaos. Symplectic integration. Adiabatic invariants. Applications to simple physical systems and solar system dynamics. Extensive use of computation to capture methods, for simulation, and for symbolic analysis. Programming experience required.
J. Wisdom, G. J. SussmanTextbooks (Fall 2023)

Theoretical Computer Science"
Computational analysis,Students will gain proficiency in using computation to capture methods and analyze physical systems.,"6.5160[J] Classical Mechanics: A Computational Approach
",1,Fall 2023,Computational Complexity,"6.5160[J] Classical Mechanics: A Computational Approach
", ,0,"()
(Same subject as 8.351[J], 12.620[J])
Prereq: Physics I (GIR), 18.03, and permission of instructor
Units: 3-3-6
Lecture: MWF1 (54-823) Lab: W EVE (7-10 PM) (54-517)

Classical mechanics in a computational framework, Lagrangian formulation, action, variational principles, and Hamilton's principle. Conserved quantities, Hamiltonian formulation, surfaces of section, chaos, and Liouville's theorem. Poincarďż˝ integral invariants, Poincarďż˝-Birkhoff and KAM theorems. Invariant curves and cantori. Nonlinear resonances, resonance overlap and transition to chaos. Symplectic integration. Adiabatic invariants. Applications to simple physical systems and solar system dynamics. Extensive use of computation to capture methods, for simulation, and for symbolic analysis. Programming experience required.
J. Wisdom, G. J. SussmanTextbooks (Fall 2023)

Theoretical Computer Science"
SQL,"Although not explicitly mentioned in the course description, programming experience is required, indicating that students will likely develop skills in SQL or a similar database query language.","6.5160[J] Classical Mechanics: A Computational Approach
",1,Fall 2023,SQL,"6.5160[J] Classical Mechanics: A Computational Approach
", ,0,"()
(Same subject as 8.351[J], 12.620[J])
Prereq: Physics I (GIR), 18.03, and permission of instructor
Units: 3-3-6
Lecture: MWF1 (54-823) Lab: W EVE (7-10 PM) (54-517)

Classical mechanics in a computational framework, Lagrangian formulation, action, variational principles, and Hamilton's principle. Conserved quantities, Hamiltonian formulation, surfaces of section, chaos, and Liouville's theorem. Poincarďż˝ integral invariants, Poincarďż˝-Birkhoff and KAM theorems. Invariant curves and cantori. Nonlinear resonances, resonance overlap and transition to chaos. Symplectic integration. Adiabatic invariants. Applications to simple physical systems and solar system dynamics. Extensive use of computation to capture methods, for simulation, and for symbolic analysis. Programming experience required.
J. Wisdom, G. J. SussmanTextbooks (Fall 2023)

Theoretical Computer Science"
Logical notation,Students will learn how to use logical notation to express mathematical statements and proofs.,"6.1200[J] Mathematics for Computer Science
",1,Fall 2023,Logical notation,"6.1200[J] Mathematics for Computer Science
", ,0,"(, ) 
(Same subject as 18.062[J])
Prereq: Calculus I (GIR)
Units: 5-0-7
Lecture: TR2.30-4 (26-100) Recitation: WF10 (26-168, 36-144) or WF11 (26-168, 36-144, 13-3101) or WF12 (26-168, 36-144, 13-3101) or WF1 (26-168, 38-166, 24-112) or WF2 (26-168, 38-166, 24-307) or WF3 (26-168, 38-166, 24-307) or WF4 (26-168) +final

Elementary discrete mathematics for science and engineering, with a focus on mathematical tools and proof techniques useful in computer science. Topics include logical notation, sets, relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools, and discrete probability.
Z. AbelNo textbook information available"
Graph theory,"Students will gain proficiency in analyzing and manipulating graphs, which are essential in computer science.","6.1200[J] Mathematics for Computer Science
",1,Fall 2023,,"6.1200[J] Mathematics for Computer Science
", ,0,"(, ) 
(Same subject as 18.062[J])
Prereq: Calculus I (GIR)
Units: 5-0-7
Lecture: TR2.30-4 (26-100) Recitation: WF10 (26-168, 36-144) or WF11 (26-168, 36-144, 13-3101) or WF12 (26-168, 36-144, 13-3101) or WF1 (26-168, 38-166, 24-112) or WF2 (26-168, 38-166, 24-307) or WF3 (26-168, 38-166, 24-307) or WF4 (26-168) +final

Elementary discrete mathematics for science and engineering, with a focus on mathematical tools and proof techniques useful in computer science. Topics include logical notation, sets, relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools, and discrete probability.
Z. AbelNo textbook information available"
Induction and proofs by contradiction,Students will develop the ability to use mathematical induction and proofs by contradiction to solve problems and prove theorems.,"6.1200[J] Mathematics for Computer Science
",1,Fall 2023,Induction and proofs by contradiction,"6.1200[J] Mathematics for Computer Science
", ,0,"(, ) 
(Same subject as 18.062[J])
Prereq: Calculus I (GIR)
Units: 5-0-7
Lecture: TR2.30-4 (26-100) Recitation: WF10 (26-168, 36-144) or WF11 (26-168, 36-144, 13-3101) or WF12 (26-168, 36-144, 13-3101) or WF1 (26-168, 38-166, 24-112) or WF2 (26-168, 38-166, 24-307) or WF3 (26-168, 38-166, 24-307) or WF4 (26-168) +final

Elementary discrete mathematics for science and engineering, with a focus on mathematical tools and proof techniques useful in computer science. Topics include logical notation, sets, relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools, and discrete probability.
Z. AbelNo textbook information available"
Elementary analysis of algorithms,Students will learn how to analyze the efficiency and complexity of algorithms using mathematical techniques.,"6.1200[J] Mathematics for Computer Science
",1,Fall 2023,,"6.1200[J] Mathematics for Computer Science
", ,0,"(, ) 
(Same subject as 18.062[J])
Prereq: Calculus I (GIR)
Units: 5-0-7
Lecture: TR2.30-4 (26-100) Recitation: WF10 (26-168, 36-144) or WF11 (26-168, 36-144, 13-3101) or WF12 (26-168, 36-144, 13-3101) or WF1 (26-168, 38-166, 24-112) or WF2 (26-168, 38-166, 24-307) or WF3 (26-168, 38-166, 24-307) or WF4 (26-168) +final

Elementary discrete mathematics for science and engineering, with a focus on mathematical tools and proof techniques useful in computer science. Topics include logical notation, sets, relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools, and discrete probability.
Z. AbelNo textbook information available"
Discrete probability,"Students will acquire the skill of applying probability concepts to discrete scenarios, which is crucial in computer science.","6.1200[J] Mathematics for Computer Science
",1,Fall 2023,Discrete probability,"6.1200[J] Mathematics for Computer Science
", ,0,"(, ) 
(Same subject as 18.062[J])
Prereq: Calculus I (GIR)
Units: 5-0-7
Lecture: TR2.30-4 (26-100) Recitation: WF10 (26-168, 36-144) or WF11 (26-168, 36-144, 13-3101) or WF12 (26-168, 36-144, 13-3101) or WF1 (26-168, 38-166, 24-112) or WF2 (26-168, 38-166, 24-307) or WF3 (26-168, 38-166, 24-307) or WF4 (26-168) +final

Elementary discrete mathematics for science and engineering, with a focus on mathematical tools and proof techniques useful in computer science. Topics include logical notation, sets, relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools, and discrete probability.
Z. AbelNo textbook information available"
Logical reasoning,Students will develop the skill of logical reasoning as they learn about logical notation and proofs by contradiction.,"6.120A Discrete Mathematics and Proof for Computer Science
",1,Fall 2023,Reasoning,"6.120A Discrete Mathematics and Proof for Computer Science
", ,0,"(); second half of term
Prereq: Calculus I (GIR)
Units: 3-0-3

Subset of elementary discrete mathematics for science and engineering useful in computer science. Topics may include logical notation, sets, done relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools.
Staff"
Problem-solving,Students will enhance their problem-solving skills through the application of mathematical concepts in computer science.,"6.120A Discrete Mathematics and Proof for Computer Science
",1,Fall 2023,Problem-solving,"6.120A Discrete Mathematics and Proof for Computer Science
", ,0,"(); second half of term
Prereq: Calculus I (GIR)
Units: 3-0-3

Subset of elementary discrete mathematics for science and engineering useful in computer science. Topics may include logical notation, sets, done relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools.
Staff"
Algorithm analysis,Students will gain proficiency in analyzing the efficiency of algorithms through the study of asymptotic notation and elementary analysis of algorithms.,"6.120A Discrete Mathematics and Proof for Computer Science
",1,Fall 2023,Algorithm Design and Analysis,"6.120A Discrete Mathematics and Proof for Computer Science
", ,0,"(); second half of term
Prereq: Calculus I (GIR)
Units: 3-0-3

Subset of elementary discrete mathematics for science and engineering useful in computer science. Topics may include logical notation, sets, done relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools.
Staff"
Combinatorial thinking,Students will learn how to think combinatorially and develop the skill of counting tools as they study permutations and combinations.,"6.120A Discrete Mathematics and Proof for Computer Science
",1,Fall 2023,Thinking Approaches,"6.120A Discrete Mathematics and Proof for Computer Science
", ,0,"(); second half of term
Prereq: Calculus I (GIR)
Units: 3-0-3

Subset of elementary discrete mathematics for science and engineering useful in computer science. Topics may include logical notation, sets, done relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools.
Staff"
Graph theory,Students will acquire the skill of understanding and manipulating graphs as they learn about elementary graph theory.,"6.120A Discrete Mathematics and Proof for Computer Science
",1,Fall 2023,Graph Theory and Graph Algorithms,"6.120A Discrete Mathematics and Proof for Computer Science
", ,0,"(); second half of term
Prereq: Calculus I (GIR)
Units: 3-0-3

Subset of elementary discrete mathematics for science and engineering useful in computer science. Topics may include logical notation, sets, done relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools.
Staff"
Algorithm design,Students will learn how to design algorithms to solve computational problems.,"6.1210 Introduction to Algorithms
",1,Fall 2023,Algorithm Design and Analysis,"6.1210 Introduction to Algorithms
", ,0,"(, )
Prereq: 6.100A and (6.120A or 6.1200)
Units: 5-0-7
Lecture: TR11-12.30 (26-100) Recitation: WF10 (34-304, 35-310, 34-303) or WF11 (34-304, 35-310, 34-303) or WF12 (34-303, 34-304) or WF1 (34-304, 35-310) or WF2 (35-310, 36-155) or WF3 (36-155) or WF4 (36-155) or WF12 (3-442) or WF1 (3-442) or WF2 (36-144) or WF12 (34-301) +final

Introduction to mathematical modeling of computational problems, as well as common algorithms, algorithmic paradigms, and data structures used to solve these problems. Emphasizes the relationship between algorithms and programming, and introduces basic performance measures and analysis techniques for these problems. Enrollment may be limited.
M. KarchmerNo textbook information available"
Programming,Students will gain proficiency in programming as they implement algorithms in code.,"6.1210 Introduction to Algorithms
",1,Fall 2023,Programming and Coding,"6.1210 Introduction to Algorithms
", ,0,"(, )
Prereq: 6.100A and (6.120A or 6.1200)
Units: 5-0-7
Lecture: TR11-12.30 (26-100) Recitation: WF10 (34-304, 35-310, 34-303) or WF11 (34-304, 35-310, 34-303) or WF12 (34-303, 34-304) or WF1 (34-304, 35-310) or WF2 (35-310, 36-155) or WF3 (36-155) or WF4 (36-155) or WF12 (3-442) or WF1 (3-442) or WF2 (36-144) or WF12 (34-301) +final

Introduction to mathematical modeling of computational problems, as well as common algorithms, algorithmic paradigms, and data structures used to solve these problems. Emphasizes the relationship between algorithms and programming, and introduces basic performance measures and analysis techniques for these problems. Enrollment may be limited.
M. KarchmerNo textbook information available"
Algorithm design,Students will learn how to design efficient algorithms to solve various problems.,"6.1220[J] Design and Analysis of Algorithms
",1,Fall 2023,Algorithm Design and Analysis,"6.1220[J] Design and Analysis of Algorithms
", ,0,"(, )
(Same subject as 18.410[J])
Prereq: 6.1200 and 6.1210
Units: 4-0-8
Lecture: TR11-12.30 (34-101) Recitation: F10 (36-155) or F3 (36-153) or F10 (36-156) or F11 (36-155, 36-156) or F12 (26-210, 36-156) or F1 (26-210, 36-156) or F2 (36-153) or F10 (36-112) or F1 (36-153) or F2 (36-112) +final

Techniques for the design and analysis of efficient algorithms, emphasizing methods useful in practice. Topics include sorting; search trees, heaps, and hashing; divide-and-conquer; dynamic programming; greedy algorithms; amortized analysis; graph algorithms; and shortest paths. Advanced topics may include network flow; computational geometry; number-theoretic algorithms; polynomial and matrix calculations; caching; and parallel computing.
S. RaghuramanTextbooks (Fall 2023)"
Sorting,Students will gain proficiency in sorting algorithms and their implementation.,"6.1220[J] Design and Analysis of Algorithms
",1,Fall 2023,Sorting,"6.1220[J] Design and Analysis of Algorithms
", ,0,"(, )
(Same subject as 18.410[J])
Prereq: 6.1200 and 6.1210
Units: 4-0-8
Lecture: TR11-12.30 (34-101) Recitation: F10 (36-155) or F3 (36-153) or F10 (36-156) or F11 (36-155, 36-156) or F12 (26-210, 36-156) or F1 (26-210, 36-156) or F2 (36-153) or F10 (36-112) or F1 (36-153) or F2 (36-112) +final

Techniques for the design and analysis of efficient algorithms, emphasizing methods useful in practice. Topics include sorting; search trees, heaps, and hashing; divide-and-conquer; dynamic programming; greedy algorithms; amortized analysis; graph algorithms; and shortest paths. Advanced topics may include network flow; computational geometry; number-theoretic algorithms; polynomial and matrix calculations; caching; and parallel computing.
S. RaghuramanTextbooks (Fall 2023)"
Dynamic programming,Students will learn the technique of dynamic programming to solve optimization problems.,"6.1220[J] Design and Analysis of Algorithms
",1,Fall 2023,Dynamic programming languages,"6.1220[J] Design and Analysis of Algorithms
", ,0,"(, )
(Same subject as 18.410[J])
Prereq: 6.1200 and 6.1210
Units: 4-0-8
Lecture: TR11-12.30 (34-101) Recitation: F10 (36-155) or F3 (36-153) or F10 (36-156) or F11 (36-155, 36-156) or F12 (26-210, 36-156) or F1 (26-210, 36-156) or F2 (36-153) or F10 (36-112) or F1 (36-153) or F2 (36-112) +final

Techniques for the design and analysis of efficient algorithms, emphasizing methods useful in practice. Topics include sorting; search trees, heaps, and hashing; divide-and-conquer; dynamic programming; greedy algorithms; amortized analysis; graph algorithms; and shortest paths. Advanced topics may include network flow; computational geometry; number-theoretic algorithms; polynomial and matrix calculations; caching; and parallel computing.
S. RaghuramanTextbooks (Fall 2023)"
Graph algorithms,Students will develop skills in designing and analyzing algorithms for graph-related problems.,"6.1220[J] Design and Analysis of Algorithms
",1,Fall 2023,Graph Theory and Graph Algorithms,"6.1220[J] Design and Analysis of Algorithms
", ,0,"(, )
(Same subject as 18.410[J])
Prereq: 6.1200 and 6.1210
Units: 4-0-8
Lecture: TR11-12.30 (34-101) Recitation: F10 (36-155) or F3 (36-153) or F10 (36-156) or F11 (36-155, 36-156) or F12 (26-210, 36-156) or F1 (26-210, 36-156) or F2 (36-153) or F10 (36-112) or F1 (36-153) or F2 (36-112) +final

Techniques for the design and analysis of efficient algorithms, emphasizing methods useful in practice. Topics include sorting; search trees, heaps, and hashing; divide-and-conquer; dynamic programming; greedy algorithms; amortized analysis; graph algorithms; and shortest paths. Advanced topics may include network flow; computational geometry; number-theoretic algorithms; polynomial and matrix calculations; caching; and parallel computing.
S. RaghuramanTextbooks (Fall 2023)"
Amortized analysis,Students will learn the concept of amortized analysis and its application in analyzing algorithms.,"6.1220[J] Design and Analysis of Algorithms
",1,Fall 2023,Amortized analysis,"6.1220[J] Design and Analysis of Algorithms
", ,0,"(, )
(Same subject as 18.410[J])
Prereq: 6.1200 and 6.1210
Units: 4-0-8
Lecture: TR11-12.30 (34-101) Recitation: F10 (36-155) or F3 (36-153) or F10 (36-156) or F11 (36-155, 36-156) or F12 (26-210, 36-156) or F1 (26-210, 36-156) or F2 (36-153) or F10 (36-112) or F1 (36-153) or F2 (36-112) +final

Techniques for the design and analysis of efficient algorithms, emphasizing methods useful in practice. Topics include sorting; search trees, heaps, and hashing; divide-and-conquer; dynamic programming; greedy algorithms; amortized analysis; graph algorithms; and shortest paths. Advanced topics may include network flow; computational geometry; number-theoretic algorithms; polynomial and matrix calculations; caching; and parallel computing.
S. RaghuramanTextbooks (Fall 2023)"
Problem-solving,Students will develop problem-solving skills as they work on classifying computational tasks in terms of their difficulty and exploring fundamental issues in computing.,"6.1400[J] Computability and Complexity Theory
",1,Fall 2023,Problem-solving,"6.1400[J] Computability and Complexity Theory
", ,0,"()
(Same subject as 18.400[J])
Prereq: (6.1200 and 6.1210) or permission of instructor
Units: 4-0-8

Mathematical introduction to the theory of computing. Rigorously explores what kinds of tasks can be efficiently solved with computers by way of finite automata, circuits, Turing machines, and communication complexity, introducing students to some major open problems in mathematics. Builds skills in classifying computational tasks in terms of their difficulty. Discusses other fundamental issues in computing, including the Halting Problem, the Church-Turing Thesis, the P versus NP problem, and the power of randomness.  
Staff"
Analytical thinking,Students will learn to analyze and evaluate different computational tasks and their complexity.,"6.1400[J] Computability and Complexity Theory
",1,Fall 2023,Analytical Thinking Skills,"6.1400[J] Computability and Complexity Theory
", ,0,"()
(Same subject as 18.400[J])
Prereq: (6.1200 and 6.1210) or permission of instructor
Units: 4-0-8

Mathematical introduction to the theory of computing. Rigorously explores what kinds of tasks can be efficiently solved with computers by way of finite automata, circuits, Turing machines, and communication complexity, introducing students to some major open problems in mathematics. Builds skills in classifying computational tasks in terms of their difficulty. Discusses other fundamental issues in computing, including the Halting Problem, the Church-Turing Thesis, the P versus NP problem, and the power of randomness.  
Staff"
Logical reasoning,"Students will develop logical reasoning skills as they study the theory of computing and solve problems related to finite automata, circuits, Turing machines, and communication complexity.","6.1400[J] Computability and Complexity Theory
",1,Fall 2023,Reasoning,"6.1400[J] Computability and Complexity Theory
", ,0,"()
(Same subject as 18.400[J])
Prereq: (6.1200 and 6.1210) or permission of instructor
Units: 4-0-8

Mathematical introduction to the theory of computing. Rigorously explores what kinds of tasks can be efficiently solved with computers by way of finite automata, circuits, Turing machines, and communication complexity, introducing students to some major open problems in mathematics. Builds skills in classifying computational tasks in terms of their difficulty. Discusses other fundamental issues in computing, including the Halting Problem, the Church-Turing Thesis, the P versus NP problem, and the power of randomness.  
Staff"
Data analysis,Students will gain skills in analyzing data and information related to computational tasks and open problems in mathematics.,"6.1400[J] Computability and Complexity Theory
",1,Fall 2023,Data Analysis and Research,"6.1400[J] Computability and Complexity Theory
", ,0,"()
(Same subject as 18.400[J])
Prereq: (6.1200 and 6.1210) or permission of instructor
Units: 4-0-8

Mathematical introduction to the theory of computing. Rigorously explores what kinds of tasks can be efficiently solved with computers by way of finite automata, circuits, Turing machines, and communication complexity, introducing students to some major open problems in mathematics. Builds skills in classifying computational tasks in terms of their difficulty. Discusses other fundamental issues in computing, including the Halting Problem, the Church-Turing Thesis, the P versus NP problem, and the power of randomness.  
Staff"
Critical thinking,"Students will enhance their critical thinking skills as they evaluate and discuss fundamental issues in computing, such as the Halting Problem, the Church-Turing Thesis, and the P versus NP problem.","6.1400[J] Computability and Complexity Theory
",1,Fall 2023,,"6.1400[J] Computability and Complexity Theory
", ,0,"()
(Same subject as 18.400[J])
Prereq: (6.1200 and 6.1210) or permission of instructor
Units: 4-0-8

Mathematical introduction to the theory of computing. Rigorously explores what kinds of tasks can be efficiently solved with computers by way of finite automata, circuits, Turing machines, and communication complexity, introducing students to some major open problems in mathematics. Builds skills in classifying computational tasks in terms of their difficulty. Discusses other fundamental issues in computing, including the Halting Problem, the Church-Turing Thesis, the P versus NP problem, and the power of randomness.  
Staff"
Problem-solving,"Students will develop problem-solving skills as they learn about parameterized algorithms and fine-grained complexity, which require finding efficient solutions to computational problems.","6.1420 Fixed Parameter and Fine-grained Computation
",1,Fall 2023,Problem-solving,"6.1420 Fixed Parameter and Fine-grained Computation
", ,0,"()
Prereq: 6.1200, 6.1210, and (6.1220, 6.1400, or 18.404)
Units: 3-0-9

An overview of the theory of parameterized algorithms and the ""problem-centric"" theory of fine-grained complexity, both of which reconsider how to measure the difficulty and feasibility of solving computational problems. Topics include: fixed-parameter tractability (FPT) and its characterizations, the W-hierarchy (W[1], W[2], W[P], etc.), 3-sum-hardness, all-pairs shortest paths (APSP)-equivalences, strong exponential time hypothesis (SETH) hardness of problems, and the connections to circuit complexity and other aspects of computing.
Staff"
Algorithm design,Students will learn how to design algorithms that are parameterized and can handle complex computational problems.,"6.1420 Fixed Parameter and Fine-grained Computation
",1,Fall 2023,Algorithm Design and Analysis,"6.1420 Fixed Parameter and Fine-grained Computation
", ,0,"()
Prereq: 6.1200, 6.1210, and (6.1220, 6.1400, or 18.404)
Units: 3-0-9

An overview of the theory of parameterized algorithms and the ""problem-centric"" theory of fine-grained complexity, both of which reconsider how to measure the difficulty and feasibility of solving computational problems. Topics include: fixed-parameter tractability (FPT) and its characterizations, the W-hierarchy (W[1], W[2], W[P], etc.), 3-sum-hardness, all-pairs shortest paths (APSP)-equivalences, strong exponential time hypothesis (SETH) hardness of problems, and the connections to circuit complexity and other aspects of computing.
Staff"
Data analysis,Students will gain proficiency in analyzing data and identifying patterns and structures in order to solve computational problems.,"6.1420 Fixed Parameter and Fine-grained Computation
",1,Fall 2023,Data Analysis and Research,"6.1420 Fixed Parameter and Fine-grained Computation
", ,0,"()
Prereq: 6.1200, 6.1210, and (6.1220, 6.1400, or 18.404)
Units: 3-0-9

An overview of the theory of parameterized algorithms and the ""problem-centric"" theory of fine-grained complexity, both of which reconsider how to measure the difficulty and feasibility of solving computational problems. Topics include: fixed-parameter tractability (FPT) and its characterizations, the W-hierarchy (W[1], W[2], W[P], etc.), 3-sum-hardness, all-pairs shortest paths (APSP)-equivalences, strong exponential time hypothesis (SETH) hardness of problems, and the connections to circuit complexity and other aspects of computing.
Staff"
Critical thinking,Students will develop critical thinking skills as they analyze the difficulty and feasibility of solving computational problems using parameterized algorithms and fine-grained complexity.,"6.1420 Fixed Parameter and Fine-grained Computation
",1,Fall 2023,Cognitive Thinking,"6.1420 Fixed Parameter and Fine-grained Computation
", ,0,"()
Prereq: 6.1200, 6.1210, and (6.1220, 6.1400, or 18.404)
Units: 3-0-9

An overview of the theory of parameterized algorithms and the ""problem-centric"" theory of fine-grained complexity, both of which reconsider how to measure the difficulty and feasibility of solving computational problems. Topics include: fixed-parameter tractability (FPT) and its characterizations, the W-hierarchy (W[1], W[2], W[P], etc.), 3-sum-hardness, all-pairs shortest paths (APSP)-equivalences, strong exponential time hypothesis (SETH) hardness of problems, and the connections to circuit complexity and other aspects of computing.
Staff"
Programming,Students will enhance their programming skills as they implement and optimize algorithms for solving computational problems.,"6.1420 Fixed Parameter and Fine-grained Computation
",1,Fall 2023,Programming and Coding,"6.1420 Fixed Parameter and Fine-grained Computation
", ,0,"()
Prereq: 6.1200, 6.1210, and (6.1220, 6.1400, or 18.404)
Units: 3-0-9

An overview of the theory of parameterized algorithms and the ""problem-centric"" theory of fine-grained complexity, both of which reconsider how to measure the difficulty and feasibility of solving computational problems. Topics include: fixed-parameter tractability (FPT) and its characterizations, the W-hierarchy (W[1], W[2], W[P], etc.), 3-sum-hardness, all-pairs shortest paths (APSP)-equivalences, strong exponential time hypothesis (SETH) hardness of problems, and the connections to circuit complexity and other aspects of computing.
Staff"
Algorithm design,Students will learn how to design algorithms to solve complex computational problems.,"6.5210[J] Advanced Algorithms
",1,Fall 2023,Algorithm Design and Analysis,"6.5210[J] Advanced Algorithms
", ,0,"()
(Same subject as 18.415[J])
Prereq: 6.1220 and (6.1200, 6.3700, or 18.600)
Units: 5-0-7

First-year graduate subject in algorithms. Emphasizes fundamental algorithms and advanced methods of algorithmic design, analysis, and implementation. Surveys a variety of computational models and the algorithms for them. Data structures, network flows, linear programming, computational geometry, approximation algorithms, online algorithms, parallel algorithms, external memory, streaming algorithms.
Staff"
Algorithm analysis,Students will gain proficiency in analyzing the efficiency and correctness of algorithms.,"6.5210[J] Advanced Algorithms
",1,Fall 2023,Algorithm Design and Analysis,"6.5210[J] Advanced Algorithms
", ,0,"()
(Same subject as 18.415[J])
Prereq: 6.1220 and (6.1200, 6.3700, or 18.600)
Units: 5-0-7

First-year graduate subject in algorithms. Emphasizes fundamental algorithms and advanced methods of algorithmic design, analysis, and implementation. Surveys a variety of computational models and the algorithms for them. Data structures, network flows, linear programming, computational geometry, approximation algorithms, online algorithms, parallel algorithms, external memory, streaming algorithms.
Staff"
Data structure implementation,Students will develop the skill of implementing various data structures to optimize algorithm performance.,"6.5210[J] Advanced Algorithms
",1,Fall 2023,Data Structures and Manipulation,"6.5210[J] Advanced Algorithms
", ,0,"()
(Same subject as 18.415[J])
Prereq: 6.1220 and (6.1200, 6.3700, or 18.600)
Units: 5-0-7

First-year graduate subject in algorithms. Emphasizes fundamental algorithms and advanced methods of algorithmic design, analysis, and implementation. Surveys a variety of computational models and the algorithms for them. Data structures, network flows, linear programming, computational geometry, approximation algorithms, online algorithms, parallel algorithms, external memory, streaming algorithms.
Staff"
Computational geometry,Students will learn how to manipulate geometric objects and solve geometric problems using algorithms.,"6.5210[J] Advanced Algorithms
",1,Fall 2023,,"6.5210[J] Advanced Algorithms
", ,0,"()
(Same subject as 18.415[J])
Prereq: 6.1220 and (6.1200, 6.3700, or 18.600)
Units: 5-0-7

First-year graduate subject in algorithms. Emphasizes fundamental algorithms and advanced methods of algorithmic design, analysis, and implementation. Surveys a variety of computational models and the algorithms for them. Data structures, network flows, linear programming, computational geometry, approximation algorithms, online algorithms, parallel algorithms, external memory, streaming algorithms.
Staff"
Parallel algorithm design,Students will learn how to design algorithms that can be executed in parallel on multiple processors.,"6.5210[J] Advanced Algorithms
",1,Fall 2023,,"6.5210[J] Advanced Algorithms
", ,0,"()
(Same subject as 18.415[J])
Prereq: 6.1220 and (6.1200, 6.3700, or 18.600)
Units: 5-0-7

First-year graduate subject in algorithms. Emphasizes fundamental algorithms and advanced methods of algorithmic design, analysis, and implementation. Surveys a variety of computational models and the algorithms for them. Data structures, network flows, linear programming, computational geometry, approximation algorithms, online algorithms, parallel algorithms, external memory, streaming algorithms.
Staff"
Algorithm design,Students will learn how to design algorithms using randomization techniques.,"6.5220[J] Randomized Algorithms
",1,Fall 2023,Algorithm Design and Analysis,"6.5220[J] Randomized Algorithms
", ,0,"()
(Same subject as 18.416[J])
Prereq: (6.1200 or 6.3700) and (6.1220 or 6.5210)
Units: 5-0-7

Studies how randomization can be used to make algorithms simpler and more efficient via random sampling, random selection of witnesses, symmetry breaking, and Markov chains. Models of randomized computation. Data structures: hash tables, and skip lists. Graph algorithms: minimum spanning trees, shortest paths, and minimum cuts. Geometric algorithms: convex hulls, linear programming in fixed or arbitrary dimension. Approximate counting; parallel algorithms; online algorithms; derandomization techniques; and tools for probabilistic analysis of algorithms.
Staff"
Random sampling,Students will gain proficiency in using random sampling as a method to simplify and improve algorithms.,"6.5220[J] Randomized Algorithms
",1,Fall 2023,,"6.5220[J] Randomized Algorithms
", ,0,"()
(Same subject as 18.416[J])
Prereq: (6.1200 or 6.3700) and (6.1220 or 6.5210)
Units: 5-0-7

Studies how randomization can be used to make algorithms simpler and more efficient via random sampling, random selection of witnesses, symmetry breaking, and Markov chains. Models of randomized computation. Data structures: hash tables, and skip lists. Graph algorithms: minimum spanning trees, shortest paths, and minimum cuts. Geometric algorithms: convex hulls, linear programming in fixed or arbitrary dimension. Approximate counting; parallel algorithms; online algorithms; derandomization techniques; and tools for probabilistic analysis of algorithms.
Staff"
Symmetry breaking,Students will learn how to break symmetries in algorithms to improve efficiency.,"6.5220[J] Randomized Algorithms
",1,Fall 2023,Symmetry breaking,"6.5220[J] Randomized Algorithms
", ,0,"()
(Same subject as 18.416[J])
Prereq: (6.1200 or 6.3700) and (6.1220 or 6.5210)
Units: 5-0-7

Studies how randomization can be used to make algorithms simpler and more efficient via random sampling, random selection of witnesses, symmetry breaking, and Markov chains. Models of randomized computation. Data structures: hash tables, and skip lists. Graph algorithms: minimum spanning trees, shortest paths, and minimum cuts. Geometric algorithms: convex hulls, linear programming in fixed or arbitrary dimension. Approximate counting; parallel algorithms; online algorithms; derandomization techniques; and tools for probabilistic analysis of algorithms.
Staff"
Markov chains,Students will learn about Markov chains and their application in randomized algorithms.,"6.5220[J] Randomized Algorithms
",1,Fall 2023,Markov chains,"6.5220[J] Randomized Algorithms
", ,0,"()
(Same subject as 18.416[J])
Prereq: (6.1200 or 6.3700) and (6.1220 or 6.5210)
Units: 5-0-7

Studies how randomization can be used to make algorithms simpler and more efficient via random sampling, random selection of witnesses, symmetry breaking, and Markov chains. Models of randomized computation. Data structures: hash tables, and skip lists. Graph algorithms: minimum spanning trees, shortest paths, and minimum cuts. Geometric algorithms: convex hulls, linear programming in fixed or arbitrary dimension. Approximate counting; parallel algorithms; online algorithms; derandomization techniques; and tools for probabilistic analysis of algorithms.
Staff"
Data structure implementation,Students will develop the skill of implementing data structures such as hash tables and skip lists.,"6.5220[J] Randomized Algorithms
",1,Fall 2023,Data Structures and Manipulation,"6.5220[J] Randomized Algorithms
", ,0,"()
(Same subject as 18.416[J])
Prereq: (6.1200 or 6.3700) and (6.1220 or 6.5210)
Units: 5-0-7

Studies how randomization can be used to make algorithms simpler and more efficient via random sampling, random selection of witnesses, symmetry breaking, and Markov chains. Models of randomized computation. Data structures: hash tables, and skip lists. Graph algorithms: minimum spanning trees, shortest paths, and minimum cuts. Geometric algorithms: convex hulls, linear programming in fixed or arbitrary dimension. Approximate counting; parallel algorithms; online algorithms; derandomization techniques; and tools for probabilistic analysis of algorithms.
Staff"
Data structure design,Students will learn how to design advanced and powerful data structures for efficient algorithms.,"6.5230 Advanced Data Structures
",1,Fall 2023,Data Structures and Manipulation,"6.5230 Advanced Data Structures
", ,0,"()
Prereq: 6.1220
Units: 3-0-9

More advanced and powerful data structures for answering several queries on the same data. Such structures are crucial in particular for designing efficient algorithms. Dictionaries; hashing; search trees. Self-adjusting data structures; linear search; splay trees; dynamic optimality. Integer data structures; word RAM. Predecessor problem; van Emde Boas priority queues; y-fast trees; fusion trees. Lower bounds; cell-probe model; round elimination. Dynamic graphs; link-cut trees; dynamic connectivity. Strings; text indexing; suffix arrays; suffix trees. Static data structures; compact arrays; rank and select. Succinct data structures; tree encodings; implicit data structures. External-memory and cache-oblivious data structures; B-trees; buffer trees; tree layout; ordered-file maintenance. Temporal data structures; persistence; retroactivity.
Staff"
SQL,"Students will gain proficiency in SQL, which is essential for querying and manipulating data in databases.","6.5230 Advanced Data Structures
",1,Fall 2023,SQL,"6.5230 Advanced Data Structures
", ,0,"()
Prereq: 6.1220
Units: 3-0-9

More advanced and powerful data structures for answering several queries on the same data. Such structures are crucial in particular for designing efficient algorithms. Dictionaries; hashing; search trees. Self-adjusting data structures; linear search; splay trees; dynamic optimality. Integer data structures; word RAM. Predecessor problem; van Emde Boas priority queues; y-fast trees; fusion trees. Lower bounds; cell-probe model; round elimination. Dynamic graphs; link-cut trees; dynamic connectivity. Strings; text indexing; suffix arrays; suffix trees. Static data structures; compact arrays; rank and select. Succinct data structures; tree encodings; implicit data structures. External-memory and cache-oblivious data structures; B-trees; buffer trees; tree layout; ordered-file maintenance. Temporal data structures; persistence; retroactivity.
Staff"
Problem-solving,Students will develop problem-solving skills as they work on designing and implementing data structures.,"6.5230 Advanced Data Structures
",1,Fall 2023,Problem-solving,"6.5230 Advanced Data Structures
", ,0,"()
Prereq: 6.1220
Units: 3-0-9

More advanced and powerful data structures for answering several queries on the same data. Such structures are crucial in particular for designing efficient algorithms. Dictionaries; hashing; search trees. Self-adjusting data structures; linear search; splay trees; dynamic optimality. Integer data structures; word RAM. Predecessor problem; van Emde Boas priority queues; y-fast trees; fusion trees. Lower bounds; cell-probe model; round elimination. Dynamic graphs; link-cut trees; dynamic connectivity. Strings; text indexing; suffix arrays; suffix trees. Static data structures; compact arrays; rank and select. Succinct data structures; tree encodings; implicit data structures. External-memory and cache-oblivious data structures; B-trees; buffer trees; tree layout; ordered-file maintenance. Temporal data structures; persistence; retroactivity.
Staff"
Programming,Students will enhance their programming skills through hands-on projects and assignments.,"6.5230 Advanced Data Structures
",1,Fall 2023,Programming and Coding,"6.5230 Advanced Data Structures
", ,0,"()
Prereq: 6.1220
Units: 3-0-9

More advanced and powerful data structures for answering several queries on the same data. Such structures are crucial in particular for designing efficient algorithms. Dictionaries; hashing; search trees. Self-adjusting data structures; linear search; splay trees; dynamic optimality. Integer data structures; word RAM. Predecessor problem; van Emde Boas priority queues; y-fast trees; fusion trees. Lower bounds; cell-probe model; round elimination. Dynamic graphs; link-cut trees; dynamic connectivity. Strings; text indexing; suffix arrays; suffix trees. Static data structures; compact arrays; rank and select. Succinct data structures; tree encodings; implicit data structures. External-memory and cache-oblivious data structures; B-trees; buffer trees; tree layout; ordered-file maintenance. Temporal data structures; persistence; retroactivity.
Staff"
Analytical thinking,Students will develop the ability to analyze complex problems and find optimal solutions using data structures.,"6.5230 Advanced Data Structures
",1,Fall 2023,Analytical Thinking Skills,"6.5230 Advanced Data Structures
", ,0,"()
Prereq: 6.1220
Units: 3-0-9

More advanced and powerful data structures for answering several queries on the same data. Such structures are crucial in particular for designing efficient algorithms. Dictionaries; hashing; search trees. Self-adjusting data structures; linear search; splay trees; dynamic optimality. Integer data structures; word RAM. Predecessor problem; van Emde Boas priority queues; y-fast trees; fusion trees. Lower bounds; cell-probe model; round elimination. Dynamic graphs; link-cut trees; dynamic connectivity. Strings; text indexing; suffix arrays; suffix trees. Static data structures; compact arrays; rank and select. Succinct data structures; tree encodings; implicit data structures. External-memory and cache-oblivious data structures; B-trees; buffer trees; tree layout; ordered-file maintenance. Temporal data structures; persistence; retroactivity.
Staff"
Algorithm analysis,Students will learn how to analyze algorithms and understand their efficiency in sublinear time.,"6.5240 Sublinear Time Algorithms
",1,Fall 2023,Algorithm Design and Analysis,"6.5240 Sublinear Time Algorithms
", ,0,"()
Prereq: 6.1220 or permission of instructor
Units: 3-0-9

Sublinear time algorithms understand parameters and properties of input data after viewing only a minuscule fraction of it. Tools from number theory, combinatorics, linear algebra, optimization theory, distributed algorithms, statistics, and probability are covered. Topics include: testing and estimating properties of distributions, functions, graphs, strings, point sets, and various combinatorial objects.
Staff"
Statistical analysis,Students will gain proficiency in statistical analysis techniques used in sublinear time algorithms.,"6.5240 Sublinear Time Algorithms
",1,Fall 2023,Statistical Concepts,"6.5240 Sublinear Time Algorithms
", ,0,"()
Prereq: 6.1220 or permission of instructor
Units: 3-0-9

Sublinear time algorithms understand parameters and properties of input data after viewing only a minuscule fraction of it. Tools from number theory, combinatorics, linear algebra, optimization theory, distributed algorithms, statistics, and probability are covered. Topics include: testing and estimating properties of distributions, functions, graphs, strings, point sets, and various combinatorial objects.
Staff"
Optimization theory,Students will learn about optimization theory and its application in sublinear time algorithms.,"6.5240 Sublinear Time Algorithms
",1,Fall 2023,Optimization,"6.5240 Sublinear Time Algorithms
", ,0,"()
Prereq: 6.1220 or permission of instructor
Units: 3-0-9

Sublinear time algorithms understand parameters and properties of input data after viewing only a minuscule fraction of it. Tools from number theory, combinatorics, linear algebra, optimization theory, distributed algorithms, statistics, and probability are covered. Topics include: testing and estimating properties of distributions, functions, graphs, strings, point sets, and various combinatorial objects.
Staff"
Distributed algorithms,Students will learn about distributed algorithms and their role in sublinear time algorithms.,"6.5240 Sublinear Time Algorithms
",1,Fall 2023,Distributed algorithms,"6.5240 Sublinear Time Algorithms
", ,0,"()
Prereq: 6.1220 or permission of instructor
Units: 3-0-9

Sublinear time algorithms understand parameters and properties of input data after viewing only a minuscule fraction of it. Tools from number theory, combinatorics, linear algebra, optimization theory, distributed algorithms, statistics, and probability are covered. Topics include: testing and estimating properties of distributions, functions, graphs, strings, point sets, and various combinatorial objects.
Staff"
Problem-solving,Students will develop problem-solving skills as they work on sublinear time algorithm projects.,"6.5240 Sublinear Time Algorithms
",1,Fall 2023,Problem-solving,"6.5240 Sublinear Time Algorithms
", ,0,"()
Prereq: 6.1220 or permission of instructor
Units: 3-0-9

Sublinear time algorithms understand parameters and properties of input data after viewing only a minuscule fraction of it. Tools from number theory, combinatorics, linear algebra, optimization theory, distributed algorithms, statistics, and probability are covered. Topics include: testing and estimating properties of distributions, functions, graphs, strings, point sets, and various combinatorial objects.
Staff"
Algorithm design,Students will learn how to design algorithms that can be executed concurrently in distributed networks.,"6.5250[J] Distributed Algorithms
",1,Fall 2023,Algorithm Design and Analysis,"6.5250[J] Distributed Algorithms
", ,0,"()
(Same subject as 18.437[J])
Prereq: 6.1220
Units: 3-0-9

Design and analysis of concurrent algorithms, emphasizing those suitable for use in distributed networks. Process synchronization, allocation of computational resources, distributed consensus, distributed graph algorithms, election of a leader in a network, distributed termination, deadlock detection, concurrency control, communication, and clock synchronization. Special consideration given to issues of efficiency and fault tolerance. Formal models and proof methods for distributed computation.
M. Ghaffari, N. A. Lynch"
Process synchronization,Students will gain proficiency in synchronizing processes in a distributed system to ensure proper execution.,"6.5250[J] Distributed Algorithms
",1,Fall 2023,,"6.5250[J] Distributed Algorithms
", ,0,"()
(Same subject as 18.437[J])
Prereq: 6.1220
Units: 3-0-9

Design and analysis of concurrent algorithms, emphasizing those suitable for use in distributed networks. Process synchronization, allocation of computational resources, distributed consensus, distributed graph algorithms, election of a leader in a network, distributed termination, deadlock detection, concurrency control, communication, and clock synchronization. Special consideration given to issues of efficiency and fault tolerance. Formal models and proof methods for distributed computation.
M. Ghaffari, N. A. Lynch"
Distributed consensus,Students will learn techniques for achieving consensus among multiple processes in a distributed network.,"6.5250[J] Distributed Algorithms
",1,Fall 2023,Distributed consensus,"6.5250[J] Distributed Algorithms
", ,0,"()
(Same subject as 18.437[J])
Prereq: 6.1220
Units: 3-0-9

Design and analysis of concurrent algorithms, emphasizing those suitable for use in distributed networks. Process synchronization, allocation of computational resources, distributed consensus, distributed graph algorithms, election of a leader in a network, distributed termination, deadlock detection, concurrency control, communication, and clock synchronization. Special consideration given to issues of efficiency and fault tolerance. Formal models and proof methods for distributed computation.
M. Ghaffari, N. A. Lynch"
Deadlock detection,Students will develop the ability to detect and resolve deadlocks in distributed systems.,"6.5250[J] Distributed Algorithms
",1,Fall 2023,Deadlock detection,"6.5250[J] Distributed Algorithms
", ,0,"()
(Same subject as 18.437[J])
Prereq: 6.1220
Units: 3-0-9

Design and analysis of concurrent algorithms, emphasizing those suitable for use in distributed networks. Process synchronization, allocation of computational resources, distributed consensus, distributed graph algorithms, election of a leader in a network, distributed termination, deadlock detection, concurrency control, communication, and clock synchronization. Special consideration given to issues of efficiency and fault tolerance. Formal models and proof methods for distributed computation.
M. Ghaffari, N. A. Lynch"
Concurrency control,Students will learn methods for managing concurrent access to shared resources in a distributed environment.,"6.5250[J] Distributed Algorithms
",1,Fall 2023,Concurrency control,"6.5250[J] Distributed Algorithms
", ,0,"()
(Same subject as 18.437[J])
Prereq: 6.1220
Units: 3-0-9

Design and analysis of concurrent algorithms, emphasizing those suitable for use in distributed networks. Process synchronization, allocation of computational resources, distributed consensus, distributed graph algorithms, election of a leader in a network, distributed termination, deadlock detection, concurrency control, communication, and clock synchronization. Special consideration given to issues of efficiency and fault tolerance. Formal models and proof methods for distributed computation.
M. Ghaffari, N. A. Lynch"
Algorithmic origami design,"Students will learn how to design origami using algorithms, which involves manipulating and folding paper to create specific shapes and patterns.","6.5310 Geometric Folding Algorithms: Linkages, Origami, Polyhedra
",1,Fall 2023,Algorithmic origami design,"6.5310 Geometric Folding Algorithms: Linkages, Origami, Polyhedra
", ,0,"()
Prereq: 6.1220 or permission of instructor
Units: 3-0-9
 Subject Cancelled 

Covers discrete geometry and algorithms underlying the reconfiguration of foldable structures, with applications to robotics, manufacturing, and biology. Linkages made from one-dimensional rods connected by hinges: constructing polynomial curves, characterizing rigidity, characterizing unfoldable versus locked, protein folding. Folding two-dimensional paper (origami): characterizing flat foldability, algorithmic origami design, one-cut magic trick. Unfolding and folding three-dimensional polyhedra: edge unfolding, vertex unfolding, gluings, Alexandrov's Theorem, hinged dissections.
E. D. Demaine"
Database design,"Although not explicitly mentioned in the course description, the mention of ""reconfiguration of foldable structures"" and ""applications to robotics, manufacturing, and biology"" suggests that students may need to design and manipulate databases to store and analyze data related to foldable structures and their applications.","6.5310 Geometric Folding Algorithms: Linkages, Origami, Polyhedra
",1,Fall 2023,Database-related tasks,"6.5310 Geometric Folding Algorithms: Linkages, Origami, Polyhedra
", ,0,"()
Prereq: 6.1220 or permission of instructor
Units: 3-0-9
 Subject Cancelled 

Covers discrete geometry and algorithms underlying the reconfiguration of foldable structures, with applications to robotics, manufacturing, and biology. Linkages made from one-dimensional rods connected by hinges: constructing polynomial curves, characterizing rigidity, characterizing unfoldable versus locked, protein folding. Folding two-dimensional paper (origami): characterizing flat foldability, algorithmic origami design, one-cut magic trick. Unfolding and folding three-dimensional polyhedra: edge unfolding, vertex unfolding, gluings, Alexandrov's Theorem, hinged dissections.
E. D. Demaine"
Algorithm design and analysis,Students will learn how to design and analyze algorithms for geometric problems.,"6.5320 Geometric Computing
",1,Fall 2023,Algorithm Analysis and Design,"6.5320 Geometric Computing
", ,0,"()
Prereq: 6.1220
Units: 3-0-9

Introduction to the design and analysis of algorithms for geometric problems, in low- and high-dimensional spaces. Algorithms: convex hulls, polygon triangulation, Delaunay triangulation, motion planning, pattern matching. Geometric data structures: point location, Voronoi diagrams, Binary Space Partitions. Geometric problems in higher dimensions: linear programming, closest pair problems. High-dimensional nearest neighbor search and low-distortion embeddings between metric spaces. Geometric algorithms for massive data sets: external memory and streaming algorithms. Geometric optimization.
Staff"
Convex hulls,Students will gain proficiency in implementing algorithms for finding convex hulls.,"6.5320 Geometric Computing
",1,Fall 2023,Convex hulls,"6.5320 Geometric Computing
", ,0,"()
Prereq: 6.1220
Units: 3-0-9

Introduction to the design and analysis of algorithms for geometric problems, in low- and high-dimensional spaces. Algorithms: convex hulls, polygon triangulation, Delaunay triangulation, motion planning, pattern matching. Geometric data structures: point location, Voronoi diagrams, Binary Space Partitions. Geometric problems in higher dimensions: linear programming, closest pair problems. High-dimensional nearest neighbor search and low-distortion embeddings between metric spaces. Geometric algorithms for massive data sets: external memory and streaming algorithms. Geometric optimization.
Staff"
Delaunay triangulation,Students will learn about Delaunay triangulation and its application in geometric problems.,"6.5320 Geometric Computing
",1,Fall 2023,Delaunay triangulation,"6.5320 Geometric Computing
", ,0,"()
Prereq: 6.1220
Units: 3-0-9

Introduction to the design and analysis of algorithms for geometric problems, in low- and high-dimensional spaces. Algorithms: convex hulls, polygon triangulation, Delaunay triangulation, motion planning, pattern matching. Geometric data structures: point location, Voronoi diagrams, Binary Space Partitions. Geometric problems in higher dimensions: linear programming, closest pair problems. High-dimensional nearest neighbor search and low-distortion embeddings between metric spaces. Geometric algorithms for massive data sets: external memory and streaming algorithms. Geometric optimization.
Staff"
Motion planning,Students will develop the skill of motion planning in geometric spaces.,"6.5320 Geometric Computing
",1,Fall 2023,Motion planning,"6.5320 Geometric Computing
", ,0,"()
Prereq: 6.1220
Units: 3-0-9

Introduction to the design and analysis of algorithms for geometric problems, in low- and high-dimensional spaces. Algorithms: convex hulls, polygon triangulation, Delaunay triangulation, motion planning, pattern matching. Geometric data structures: point location, Voronoi diagrams, Binary Space Partitions. Geometric problems in higher dimensions: linear programming, closest pair problems. High-dimensional nearest neighbor search and low-distortion embeddings between metric spaces. Geometric algorithms for massive data sets: external memory and streaming algorithms. Geometric optimization.
Staff"
Pattern matching,Students will learn how to apply pattern matching algorithms to solve geometric problems.,"6.5320 Geometric Computing
",1,Fall 2023,Pattern matching,"6.5320 Geometric Computing
", ,0,"()
Prereq: 6.1220
Units: 3-0-9

Introduction to the design and analysis of algorithms for geometric problems, in low- and high-dimensional spaces. Algorithms: convex hulls, polygon triangulation, Delaunay triangulation, motion planning, pattern matching. Geometric data structures: point location, Voronoi diagrams, Binary Space Partitions. Geometric problems in higher dimensions: linear programming, closest pair problems. High-dimensional nearest neighbor search and low-distortion embeddings between metric spaces. Geometric algorithms for massive data sets: external memory and streaming algorithms. Geometric optimization.
Staff"
Algorithm design,Students will learn how to design algorithms for equilibria and fixed points in game theory.,"6.5340 Topics in Algorithmic Game Theory
",1,Fall 2023,Algorithm Design and Analysis,"6.5340 Topics in Algorithmic Game Theory
", ,0,"()
Prereq: 6.1210 or 6.1220
Units: 3-0-9

Presents research topics at the interface of computer science and game theory, with an emphasis on algorithms and computational complexity. Explores the types of game-theoretic tools that are applicable to computer systems, the loss in system performance due to the conflicts of interest of users and administrators, and the design of systems whose performance is robust with respect to conflicts of interest inside the system. Algorithmic focus is on algorithms for equilibria, the complexity of equilibria and fixed points, algorithmic tools in mechanism design, learning in games, and the price of anarchy.
Staff"
Computational complexity,Students will gain proficiency in understanding the complexity of algorithms and their impact on system performance.,"6.5340 Topics in Algorithmic Game Theory
",1,Fall 2023,,"6.5340 Topics in Algorithmic Game Theory
", ,0,"()
Prereq: 6.1210 or 6.1220
Units: 3-0-9

Presents research topics at the interface of computer science and game theory, with an emphasis on algorithms and computational complexity. Explores the types of game-theoretic tools that are applicable to computer systems, the loss in system performance due to the conflicts of interest of users and administrators, and the design of systems whose performance is robust with respect to conflicts of interest inside the system. Algorithmic focus is on algorithms for equilibria, the complexity of equilibria and fixed points, algorithmic tools in mechanism design, learning in games, and the price of anarchy.
Staff"
Mechanism design,"Students will learn algorithmic tools used in mechanism design, which involves designing systems that are robust in the face of conflicts of interest.","6.5340 Topics in Algorithmic Game Theory
",1,Fall 2023,,"6.5340 Topics in Algorithmic Game Theory
", ,0,"()
Prereq: 6.1210 or 6.1220
Units: 3-0-9

Presents research topics at the interface of computer science and game theory, with an emphasis on algorithms and computational complexity. Explores the types of game-theoretic tools that are applicable to computer systems, the loss in system performance due to the conflicts of interest of users and administrators, and the design of systems whose performance is robust with respect to conflicts of interest inside the system. Algorithmic focus is on algorithms for equilibria, the complexity of equilibria and fixed points, algorithmic tools in mechanism design, learning in games, and the price of anarchy.
Staff"
Learning in games,Students will develop skills in understanding and analyzing learning processes in game theory.,"6.5340 Topics in Algorithmic Game Theory
",1,Fall 2023,Learning in games,"6.5340 Topics in Algorithmic Game Theory
", ,0,"()
Prereq: 6.1210 or 6.1220
Units: 3-0-9

Presents research topics at the interface of computer science and game theory, with an emphasis on algorithms and computational complexity. Explores the types of game-theoretic tools that are applicable to computer systems, the loss in system performance due to the conflicts of interest of users and administrators, and the design of systems whose performance is robust with respect to conflicts of interest inside the system. Algorithmic focus is on algorithms for equilibria, the complexity of equilibria and fixed points, algorithmic tools in mechanism design, learning in games, and the price of anarchy.
Staff"
Price of anarchy,Students will learn how to calculate and analyze the price of anarchy in game-theoretic systems.,"6.5340 Topics in Algorithmic Game Theory
",1,Fall 2023,Price of anarchy,"6.5340 Topics in Algorithmic Game Theory
", ,0,"()
Prereq: 6.1210 or 6.1220
Units: 3-0-9

Presents research topics at the interface of computer science and game theory, with an emphasis on algorithms and computational complexity. Explores the types of game-theoretic tools that are applicable to computer systems, the loss in system performance due to the conflicts of interest of users and administrators, and the design of systems whose performance is robust with respect to conflicts of interest inside the system. Algorithmic focus is on algorithms for equilibria, the complexity of equilibria and fixed points, algorithmic tools in mechanism design, learning in games, and the price of anarchy.
Staff"
Matrix multiplication,"Students will gain proficiency in performing matrix multiplication, a fundamental skill in linear algebra and graph algorithms.","6.5350 Matrix Multiplication and Graph Algorithms
",1,Fall 2023,Matrix multiplication,"6.5350 Matrix Multiplication and Graph Algorithms
", ,0,"()
Prereq: 6.1220
Units: 3-0-9
 Subject Cancelled 

Explores topics around matrix multiplication (MM) and its use in the design of graph algorithms. Focuses on problems such as transitive closure, shortest paths, graph matching, and other classical graph problems. Explores fast approximation algorithms when MM techniques are too expensive.
Staff"
Graph algorithms,"Students will learn and develop skills in implementing and analyzing various graph algorithms, such as transitive closure, shortest paths, and graph matching.","6.5350 Matrix Multiplication and Graph Algorithms
",1,Fall 2023,Graph Theory and Graph Algorithms,"6.5350 Matrix Multiplication and Graph Algorithms
", ,0,"()
Prereq: 6.1220
Units: 3-0-9
 Subject Cancelled 

Explores topics around matrix multiplication (MM) and its use in the design of graph algorithms. Focuses on problems such as transitive closure, shortest paths, graph matching, and other classical graph problems. Explores fast approximation algorithms when MM techniques are too expensive.
Staff"
Problem-solving,"Through working on graph algorithm problems, students will enhance their problem-solving skills, including identifying and analyzing problems, developing algorithms, and finding efficient solutions.","6.5350 Matrix Multiplication and Graph Algorithms
",1,Fall 2023,Problem-solving,"6.5350 Matrix Multiplication and Graph Algorithms
", ,0,"()
Prereq: 6.1220
Units: 3-0-9
 Subject Cancelled 

Explores topics around matrix multiplication (MM) and its use in the design of graph algorithms. Focuses on problems such as transitive closure, shortest paths, graph matching, and other classical graph problems. Explores fast approximation algorithms when MM techniques are too expensive.
Staff"
Algorithm analysis,"Students will learn how to analyze the efficiency and complexity of graph algorithms, including understanding time and space complexity, and making informed decisions about algorithm selection.","6.5350 Matrix Multiplication and Graph Algorithms
",1,Fall 2023,Algorithm Design and Analysis,"6.5350 Matrix Multiplication and Graph Algorithms
", ,0,"()
Prereq: 6.1220
Units: 3-0-9
 Subject Cancelled 

Explores topics around matrix multiplication (MM) and its use in the design of graph algorithms. Focuses on problems such as transitive closure, shortest paths, graph matching, and other classical graph problems. Explores fast approximation algorithms when MM techniques are too expensive.
Staff"
Programming,"Students will develop programming skills in implementing graph algorithms, using programming languages such as Python or Java.","6.5350 Matrix Multiplication and Graph Algorithms
",1,Fall 2023,Programming and Coding,"6.5350 Matrix Multiplication and Graph Algorithms
", ,0,"()
Prereq: 6.1220
Units: 3-0-9
 Subject Cancelled 

Explores topics around matrix multiplication (MM) and its use in the design of graph algorithms. Focuses on problems such as transitive closure, shortest paths, graph matching, and other classical graph problems. Explores fast approximation algorithms when MM techniques are too expensive.
Staff"
Computational complexity theory,Students will develop a proficiency in understanding and analyzing the complexity of computational problems.,"6.5400[J] Theory of Computation
",1,Fall 2023,Complexity Theory,"6.5400[J] Theory of Computation
", ,0,"()
(Same subject as 18.4041[J])(Subject meets with 18.404)
Prereq: 6.1200 or 18.200
Units: 4-0-8
Lecture: TR2.30-4 (34-101) Recitation: F10 (4-261) or F11 (4-261) or F12 (4-257) or F1 (4-257) or F2 (4-145) or F3 (4-145) +final

A more extensive and theoretical treatment of the material in 6.1400J/18.400J, emphasizing computability and computational complexity theory. Regular and context-free languages. Decidable and undecidable problems, reducibility, recursive function theory. Time and space measures on computation, completeness, hierarchy theorems, inherently complex problems, oracles, probabilistic computation, and interactive proof systems. Students in Course 18 must register for the undergraduate version, 18.404.
M. SipserTextbooks (Fall 2023)"
Reducibility,"Students will learn how to reduce one problem to another, which is a fundamental skill in computational theory.","6.5400[J] Theory of Computation
",1,Fall 2023,Reducibility,"6.5400[J] Theory of Computation
", ,0,"()
(Same subject as 18.4041[J])(Subject meets with 18.404)
Prereq: 6.1200 or 18.200
Units: 4-0-8
Lecture: TR2.30-4 (34-101) Recitation: F10 (4-261) or F11 (4-261) or F12 (4-257) or F1 (4-257) or F2 (4-145) or F3 (4-145) +final

A more extensive and theoretical treatment of the material in 6.1400J/18.400J, emphasizing computability and computational complexity theory. Regular and context-free languages. Decidable and undecidable problems, reducibility, recursive function theory. Time and space measures on computation, completeness, hierarchy theorems, inherently complex problems, oracles, probabilistic computation, and interactive proof systems. Students in Course 18 must register for the undergraduate version, 18.404.
M. SipserTextbooks (Fall 2023)"
Recursive function theory,"Students will gain the ability to understand and analyze recursive functions, which are essential in computation.","6.5400[J] Theory of Computation
",1,Fall 2023,Recursive function theory,"6.5400[J] Theory of Computation
", ,0,"()
(Same subject as 18.4041[J])(Subject meets with 18.404)
Prereq: 6.1200 or 18.200
Units: 4-0-8
Lecture: TR2.30-4 (34-101) Recitation: F10 (4-261) or F11 (4-261) or F12 (4-257) or F1 (4-257) or F2 (4-145) or F3 (4-145) +final

A more extensive and theoretical treatment of the material in 6.1400J/18.400J, emphasizing computability and computational complexity theory. Regular and context-free languages. Decidable and undecidable problems, reducibility, recursive function theory. Time and space measures on computation, completeness, hierarchy theorems, inherently complex problems, oracles, probabilistic computation, and interactive proof systems. Students in Course 18 must register for the undergraduate version, 18.404.
M. SipserTextbooks (Fall 2023)"
Probabilistic computation,Students will learn how to incorporate randomness and probability into computational algorithms.,"6.5400[J] Theory of Computation
",1,Fall 2023,,"6.5400[J] Theory of Computation
", ,0,"()
(Same subject as 18.4041[J])(Subject meets with 18.404)
Prereq: 6.1200 or 18.200
Units: 4-0-8
Lecture: TR2.30-4 (34-101) Recitation: F10 (4-261) or F11 (4-261) or F12 (4-257) or F1 (4-257) or F2 (4-145) or F3 (4-145) +final

A more extensive and theoretical treatment of the material in 6.1400J/18.400J, emphasizing computability and computational complexity theory. Regular and context-free languages. Decidable and undecidable problems, reducibility, recursive function theory. Time and space measures on computation, completeness, hierarchy theorems, inherently complex problems, oracles, probabilistic computation, and interactive proof systems. Students in Course 18 must register for the undergraduate version, 18.404.
M. SipserTextbooks (Fall 2023)"
Interactive proof systems,"Students will develop the skill of designing and analyzing interactive proof systems, which are used to verify the correctness of computations.","6.5400[J] Theory of Computation
",1,Fall 2023,Interactive proof systems,"6.5400[J] Theory of Computation
", ,0,"()
(Same subject as 18.4041[J])(Subject meets with 18.404)
Prereq: 6.1200 or 18.200
Units: 4-0-8
Lecture: TR2.30-4 (34-101) Recitation: F10 (4-261) or F11 (4-261) or F12 (4-257) or F1 (4-257) or F2 (4-145) or F3 (4-145) +final

A more extensive and theoretical treatment of the material in 6.1400J/18.400J, emphasizing computability and computational complexity theory. Regular and context-free languages. Decidable and undecidable problems, reducibility, recursive function theory. Time and space measures on computation, completeness, hierarchy theorems, inherently complex problems, oracles, probabilistic computation, and interactive proof systems. Students in Course 18 must register for the undergraduate version, 18.404.
M. SipserTextbooks (Fall 2023)"
Problem-solving,Students will develop advanced problem-solving skills as they study and analyze complex computational complexity theory topics.,"6.5410[J] Advanced Complexity Theory
",1,Fall 2023,Problem-solving,"6.5410[J] Advanced Complexity Theory
", ,0,"()
(Same subject as 18.405[J])
Prereq: 18.404
Units: 3-0-9

Current research topics in computational complexity theory. Nondeterministic, alternating, probabilistic, and parallel computation models. Boolean circuits. Complexity classes and complete sets. The polynomial-time hierarchy. Interactive proof systems. Relativization. Definitions of randomness. Pseudo-randomness and derandomizations. Interactive proof systems and probabilistically checkable proofs.
R. Williams"
Logical reasoning,Students will learn how to apply logical reasoning to solve complex computational problems and analyze computational models.,"6.5410[J] Advanced Complexity Theory
",1,Fall 2023,Reasoning,"6.5410[J] Advanced Complexity Theory
", ,0,"()
(Same subject as 18.405[J])
Prereq: 18.404
Units: 3-0-9

Current research topics in computational complexity theory. Nondeterministic, alternating, probabilistic, and parallel computation models. Boolean circuits. Complexity classes and complete sets. The polynomial-time hierarchy. Interactive proof systems. Relativization. Definitions of randomness. Pseudo-randomness and derandomizations. Interactive proof systems and probabilistically checkable proofs.
R. Williams"
Algorithm design,Students will gain proficiency in designing algorithms to solve computational complexity problems.,"6.5410[J] Advanced Complexity Theory
",1,Fall 2023,Algorithm Design and Analysis,"6.5410[J] Advanced Complexity Theory
", ,0,"()
(Same subject as 18.405[J])
Prereq: 18.404
Units: 3-0-9

Current research topics in computational complexity theory. Nondeterministic, alternating, probabilistic, and parallel computation models. Boolean circuits. Complexity classes and complete sets. The polynomial-time hierarchy. Interactive proof systems. Relativization. Definitions of randomness. Pseudo-randomness and derandomizations. Interactive proof systems and probabilistically checkable proofs.
R. Williams"
Mathematical modeling,Students will learn how to use mathematical models to analyze and understand computational complexity.,"6.5410[J] Advanced Complexity Theory
",1,Fall 2023,Modeling,"6.5410[J] Advanced Complexity Theory
", ,0,"()
(Same subject as 18.405[J])
Prereq: 18.404
Units: 3-0-9

Current research topics in computational complexity theory. Nondeterministic, alternating, probabilistic, and parallel computation models. Boolean circuits. Complexity classes and complete sets. The polynomial-time hierarchy. Interactive proof systems. Relativization. Definitions of randomness. Pseudo-randomness and derandomizations. Interactive proof systems and probabilistically checkable proofs.
R. Williams"
Critical thinking,Students will enhance their critical thinking skills as they evaluate and analyze different computational complexity theories and concepts.,"6.5410[J] Advanced Complexity Theory
",1,Fall 2023,Cognitive Thinking,"6.5410[J] Advanced Complexity Theory
", ,0,"()
(Same subject as 18.405[J])
Prereq: 18.404
Units: 3-0-9

Current research topics in computational complexity theory. Nondeterministic, alternating, probabilistic, and parallel computation models. Boolean circuits. Complexity classes and complete sets. The polynomial-time hierarchy. Interactive proof systems. Relativization. Definitions of randomness. Pseudo-randomness and derandomizations. Interactive proof systems and probabilistically checkable proofs.
R. Williams"
Probabilistic proofs,"Students will learn how to construct and analyze probabilistic proofs, which involve using randomness to prove the correctness of algorithms or mathematical statements.","6.5420 Randomness and Computation
",1,Fall 2023,Probabilistic Concepts,"6.5420 Randomness and Computation
", ,0,"()
Prereq: 6.1220 and 18.4041
Units: 3-0-9

The power and sources of randomness in computation. Connections and applications to computational complexity, computational learning theory, cryptography and combinatorics. Topics include: probabilistic proofs, uniform generation and approximate counting, Fourier analysis of Boolean functions, computational learning theory, expander graphs, pseudorandom generators, derandomization.
R. Rubinfeld"
Uniform generation and approximate counting,Students will gain proficiency in generating random samples from a given distribution and estimating the size of a set or the probability of an event using random sampling techniques.,"6.5420 Randomness and Computation
",1,Fall 2023,Uniform generation and approximate counting,"6.5420 Randomness and Computation
", ,0,"()
Prereq: 6.1220 and 18.4041
Units: 3-0-9

The power and sources of randomness in computation. Connections and applications to computational complexity, computational learning theory, cryptography and combinatorics. Topics include: probabilistic proofs, uniform generation and approximate counting, Fourier analysis of Boolean functions, computational learning theory, expander graphs, pseudorandom generators, derandomization.
R. Rubinfeld"
Fourier analysis of Boolean functions,"Students will learn how to analyze Boolean functions using Fourier analysis, which involves decomposing a function into a sum of simpler functions and studying their properties.","6.5420 Randomness and Computation
",1,Fall 2023,,"6.5420 Randomness and Computation
", ,0,"()
Prereq: 6.1220 and 18.4041
Units: 3-0-9

The power and sources of randomness in computation. Connections and applications to computational complexity, computational learning theory, cryptography and combinatorics. Topics include: probabilistic proofs, uniform generation and approximate counting, Fourier analysis of Boolean functions, computational learning theory, expander graphs, pseudorandom generators, derandomization.
R. Rubinfeld"
Computational learning theory,"Students will develop skills in understanding and applying computational learning theory, which deals with the design and analysis of algorithms that learn from data.","6.5420 Randomness and Computation
",1,Fall 2023,Computational learning theory,"6.5420 Randomness and Computation
", ,0,"()
Prereq: 6.1220 and 18.4041
Units: 3-0-9

The power and sources of randomness in computation. Connections and applications to computational complexity, computational learning theory, cryptography and combinatorics. Topics include: probabilistic proofs, uniform generation and approximate counting, Fourier analysis of Boolean functions, computational learning theory, expander graphs, pseudorandom generators, derandomization.
R. Rubinfeld"
Pseudorandom generators,"Students will learn about pseudorandom generators, which are algorithms that generate sequences of numbers that appear random but are actually deterministic.","6.5420 Randomness and Computation
",1,Fall 2023,Pseudorandom generators,"6.5420 Randomness and Computation
", ,0,"()
Prereq: 6.1220 and 18.4041
Units: 3-0-9

The power and sources of randomness in computation. Connections and applications to computational complexity, computational learning theory, cryptography and combinatorics. Topics include: probabilistic proofs, uniform generation and approximate counting, Fourier analysis of Boolean functions, computational learning theory, expander graphs, pseudorandom generators, derandomization.
R. Rubinfeld"
Quantum computing,"Students will gain proficiency in understanding and working with quantum computers, including their capabilities and limitations.","6.5430 Quantum Complexity Theory
",1,Fall 2023,Quantum computing,"6.5430 Quantum Complexity Theory
", ,0,"()
Prereq: 6.1400, 18.4041, and 18.435
Units: 3-0-9

Introduction to quantum computational complexity theory, the study of the fundamental capabilities and limitations of quantum computers. Topics include complexity classes, lower bounds, communication complexity, proofs and advice, and interactive proof systems in the quantum world; classical simulation of quantum circuits. The objective is to bring students to the research frontier.
Staff

Security & Cryptography"
Complexity theory,Students will learn about complexity classes and lower bounds in the context of quantum computing.,"6.5430 Quantum Complexity Theory
",1,Fall 2023,,"6.5430 Quantum Complexity Theory
", ,0,"()
Prereq: 6.1400, 18.4041, and 18.435
Units: 3-0-9

Introduction to quantum computational complexity theory, the study of the fundamental capabilities and limitations of quantum computers. Topics include complexity classes, lower bounds, communication complexity, proofs and advice, and interactive proof systems in the quantum world; classical simulation of quantum circuits. The objective is to bring students to the research frontier.
Staff

Security & Cryptography"
Communication complexity,Students will develop skills in understanding and analyzing communication complexity in quantum systems.,"6.5430 Quantum Complexity Theory
",1,Fall 2023,Communication complexity,"6.5430 Quantum Complexity Theory
", ,0,"()
Prereq: 6.1400, 18.4041, and 18.435
Units: 3-0-9

Introduction to quantum computational complexity theory, the study of the fundamental capabilities and limitations of quantum computers. Topics include complexity classes, lower bounds, communication complexity, proofs and advice, and interactive proof systems in the quantum world; classical simulation of quantum circuits. The objective is to bring students to the research frontier.
Staff

Security & Cryptography"
Proofs and advice,Students will learn how to construct and analyze proofs and advice in the quantum world.,"6.5430 Quantum Complexity Theory
",1,Fall 2023,Proofs and advice,"6.5430 Quantum Complexity Theory
", ,0,"()
Prereq: 6.1400, 18.4041, and 18.435
Units: 3-0-9

Introduction to quantum computational complexity theory, the study of the fundamental capabilities and limitations of quantum computers. Topics include complexity classes, lower bounds, communication complexity, proofs and advice, and interactive proof systems in the quantum world; classical simulation of quantum circuits. The objective is to bring students to the research frontier.
Staff

Security & Cryptography"
Interactive proof systems,Students will gain proficiency in understanding and working with interactive proof systems in the context of quantum computing.,"6.5430 Quantum Complexity Theory
",1,Fall 2023,Interactive proof systems,"6.5430 Quantum Complexity Theory
", ,0,"()
Prereq: 6.1400, 18.4041, and 18.435
Units: 3-0-9

Introduction to quantum computational complexity theory, the study of the fundamental capabilities and limitations of quantum computers. Topics include complexity classes, lower bounds, communication complexity, proofs and advice, and interactive proof systems in the quantum world; classical simulation of quantum circuits. The objective is to bring students to the research frontier.
Staff

Security & Cryptography"
Cryptography,"Students will gain proficiency in cryptographic foundations such as pseudorandomness, collision-resistant hash functions, authentication codes, signatures, authenticated encryption, and public-key encryption.","6.1600 Foundations of Computer Security
",1,Fall 2023,,"6.1600 Foundations of Computer Security
", ,0,"()
Prereq: 6.1210 and 6.1800
Units: 4-0-8
Lecture: MW11-12.30 (4-237) Recitation: F11 (35-308) +final

Fundamental notions and big ideas for achieving security in computer systems. Topics include cryptographic foundations (pseudorandomness, collision-resistant hash functions, authentication codes, signatures, authenticated encryption, public-key encryption), systems ideas (isolation, non-interference, authentication, access control, delegation, trust), and implementation techniques (privilege separation, fuzzing, symbolic execution, runtime defenses, side-channel attacks). Case studies of how these ideas are realized in deployed systems. Lab assignments apply ideas from lectures to learn how to build secure systems and how they can be attacked.
H. Corrigan-GibbsNo textbook information available"
Database design,"Although not explicitly mentioned in the course description, the implementation techniques and case studies in the course may involve the design and manipulation of databases.","6.1600 Foundations of Computer Security
",1,Fall 2023,Database-related tasks,"6.1600 Foundations of Computer Security
", ,0,"()
Prereq: 6.1210 and 6.1800
Units: 4-0-8
Lecture: MW11-12.30 (4-237) Recitation: F11 (35-308) +final

Fundamental notions and big ideas for achieving security in computer systems. Topics include cryptographic foundations (pseudorandomness, collision-resistant hash functions, authentication codes, signatures, authenticated encryption, public-key encryption), systems ideas (isolation, non-interference, authentication, access control, delegation, trust), and implementation techniques (privilege separation, fuzzing, symbolic execution, runtime defenses, side-channel attacks). Case studies of how these ideas are realized in deployed systems. Lab assignments apply ideas from lectures to learn how to build secure systems and how they can be attacked.
H. Corrigan-GibbsNo textbook information available"
Programming,Students will develop programming skills through lab assignments that involve building secure systems and implementing security measures.,"6.1600 Foundations of Computer Security
",1,Fall 2023,Programming and Coding,"6.1600 Foundations of Computer Security
", ,0,"()
Prereq: 6.1210 and 6.1800
Units: 4-0-8
Lecture: MW11-12.30 (4-237) Recitation: F11 (35-308) +final

Fundamental notions and big ideas for achieving security in computer systems. Topics include cryptographic foundations (pseudorandomness, collision-resistant hash functions, authentication codes, signatures, authenticated encryption, public-key encryption), systems ideas (isolation, non-interference, authentication, access control, delegation, trust), and implementation techniques (privilege separation, fuzzing, symbolic execution, runtime defenses, side-channel attacks). Case studies of how these ideas are realized in deployed systems. Lab assignments apply ideas from lectures to learn how to build secure systems and how they can be attacked.
H. Corrigan-GibbsNo textbook information available"
Problem-solving,The lab assignments and case studies in the course will require students to apply problem-solving skills to identify vulnerabilities and develop solutions.,"6.1600 Foundations of Computer Security
",1,Fall 2023,Problem-solving,"6.1600 Foundations of Computer Security
", ,0,"()
Prereq: 6.1210 and 6.1800
Units: 4-0-8
Lecture: MW11-12.30 (4-237) Recitation: F11 (35-308) +final

Fundamental notions and big ideas for achieving security in computer systems. Topics include cryptographic foundations (pseudorandomness, collision-resistant hash functions, authentication codes, signatures, authenticated encryption, public-key encryption), systems ideas (isolation, non-interference, authentication, access control, delegation, trust), and implementation techniques (privilege separation, fuzzing, symbolic execution, runtime defenses, side-channel attacks). Case studies of how these ideas are realized in deployed systems. Lab assignments apply ideas from lectures to learn how to build secure systems and how they can be attacked.
H. Corrigan-GibbsNo textbook information available"
Communication,"While not explicitly mentioned, effective communication skills may be necessary for presenting findings and discussing security concepts with peers and instructors.","6.1600 Foundations of Computer Security
",1,Fall 2023,Communication,"6.1600 Foundations of Computer Security
", ,0,"()
Prereq: 6.1210 and 6.1800
Units: 4-0-8
Lecture: MW11-12.30 (4-237) Recitation: F11 (35-308) +final

Fundamental notions and big ideas for achieving security in computer systems. Topics include cryptographic foundations (pseudorandomness, collision-resistant hash functions, authentication codes, signatures, authenticated encryption, public-key encryption), systems ideas (isolation, non-interference, authentication, access control, delegation, trust), and implementation techniques (privilege separation, fuzzing, symbolic execution, runtime defenses, side-channel attacks). Case studies of how these ideas are realized in deployed systems. Lab assignments apply ideas from lectures to learn how to build secure systems and how they can be attacked.
H. Corrigan-GibbsNo textbook information available"
Cryptographic algorithms,"Students will gain proficiency in various cryptographic algorithms such as symmetric cryptography, public-key cryptography, and elliptic curve cryptography.","6.5610 Applied Cryptography and Security
",1,Fall 2023,Cryptography,"6.5610 Applied Cryptography and Security
", ,0,"()
Prereq: 6.1200 and 6.1800
Units: 4-0-8

Emphasis on applied cryptography. May include: basic notion of systems security, cryptographic hash functions, symmetric cryptography (one-time pad, block ciphers, stream ciphers, message authentication codes), hash functions, key-exchange, public-key cryptography (encryption, digital signatures), elliptic curve cryptography,  secret-sharing, fully homomorphic encryption, zero-knowledge proofs, and electronic voting. Assignments include a final group project. Topics may vary year to year.
Staff"
Message authentication codes,Students will learn how to use message authentication codes to ensure the integrity and authenticity of messages.,"6.5610 Applied Cryptography and Security
",1,Fall 2023,Message authentication codes,"6.5610 Applied Cryptography and Security
", ,0,"()
Prereq: 6.1200 and 6.1800
Units: 4-0-8

Emphasis on applied cryptography. May include: basic notion of systems security, cryptographic hash functions, symmetric cryptography (one-time pad, block ciphers, stream ciphers, message authentication codes), hash functions, key-exchange, public-key cryptography (encryption, digital signatures), elliptic curve cryptography,  secret-sharing, fully homomorphic encryption, zero-knowledge proofs, and electronic voting. Assignments include a final group project. Topics may vary year to year.
Staff"
Fully homomorphic encryption,"Students will develop the skill of implementing fully homomorphic encryption, which allows computations to be performed on encrypted data without decrypting it.","6.5610 Applied Cryptography and Security
",1,Fall 2023,Fully homomorphic encryption,"6.5610 Applied Cryptography and Security
", ,0,"()
Prereq: 6.1200 and 6.1800
Units: 4-0-8

Emphasis on applied cryptography. May include: basic notion of systems security, cryptographic hash functions, symmetric cryptography (one-time pad, block ciphers, stream ciphers, message authentication codes), hash functions, key-exchange, public-key cryptography (encryption, digital signatures), elliptic curve cryptography,  secret-sharing, fully homomorphic encryption, zero-knowledge proofs, and electronic voting. Assignments include a final group project. Topics may vary year to year.
Staff"
Zero-knowledge proofs,"Students will learn how to construct and verify zero-knowledge proofs, which allow one party to prove knowledge of a secret without revealing the secret itself.","6.5610 Applied Cryptography and Security
",1,Fall 2023,Zero-knowledge proofs,"6.5610 Applied Cryptography and Security
", ,0,"()
Prereq: 6.1200 and 6.1800
Units: 4-0-8

Emphasis on applied cryptography. May include: basic notion of systems security, cryptographic hash functions, symmetric cryptography (one-time pad, block ciphers, stream ciphers, message authentication codes), hash functions, key-exchange, public-key cryptography (encryption, digital signatures), elliptic curve cryptography,  secret-sharing, fully homomorphic encryption, zero-knowledge proofs, and electronic voting. Assignments include a final group project. Topics may vary year to year.
Staff"
Electronic voting,"Students will acquire the skill of designing secure electronic voting systems, considering the challenges and cryptographic techniques involved.","6.5610 Applied Cryptography and Security
",1,Fall 2023,Electronic voting,"6.5610 Applied Cryptography and Security
", ,0,"()
Prereq: 6.1200 and 6.1800
Units: 4-0-8

Emphasis on applied cryptography. May include: basic notion of systems security, cryptographic hash functions, symmetric cryptography (one-time pad, block ciphers, stream ciphers, message authentication codes), hash functions, key-exchange, public-key cryptography (encryption, digital signatures), elliptic curve cryptography,  secret-sharing, fully homomorphic encryption, zero-knowledge proofs, and electronic voting. Assignments include a final group project. Topics may vary year to year.
Staff"
Cryptography,"Students will gain proficiency in the principles and techniques of cryptography, including public-key encryption, digital signatures, and pseudo-random number generation.","6.5620[J] Cryptography and Cryptanalysis
",1,Fall 2023,Cryptography and Cryptographic algorithms,"6.5620[J] Cryptography and Cryptanalysis
", ,0,"()
(Same subject as 18.425[J])
Prereq: 6.1220
Units: 3-0-9
https://mit6875.github.io/
Lecture: MW1-2.30 (1-190)

A rigorous introduction to modern cryptography. Emphasis on the fundamental cryptographic primitives of public-key encryption, digital signatures, pseudo-random number generation, and basic protocols and their computational complexity requirements.
V. VaikuntanathanTextbooks (Fall 2023)"
Cryptanalysis,"Students will learn how to analyze and break cryptographic systems, including identifying vulnerabilities and weaknesses in encryption algorithms.","6.5620[J] Cryptography and Cryptanalysis
",1,Fall 2023,Cryptanalysis,"6.5620[J] Cryptography and Cryptanalysis
", ,0,"()
(Same subject as 18.425[J])
Prereq: 6.1220
Units: 3-0-9
https://mit6875.github.io/
Lecture: MW1-2.30 (1-190)

A rigorous introduction to modern cryptography. Emphasis on the fundamental cryptographic primitives of public-key encryption, digital signatures, pseudo-random number generation, and basic protocols and their computational complexity requirements.
V. VaikuntanathanTextbooks (Fall 2023)"
Cryptographic algorithms,Students will gain proficiency in understanding and implementing advanced cryptographic algorithms.,"6.5630 Advanced Topics in Cryptography
",1,Fall 2023,Cryptography,"6.5630 Advanced Topics in Cryptography
", ,0,"() 
Prereq: 6.5620
Units: 3-0-9
Lecture: F1-4 (26-322)

In-depth exploration of recent results in cryptography.
Y. KalaiNo textbook information available"
Cryptanalysis,Students will learn techniques for analyzing and breaking cryptographic systems.,"6.5630 Advanced Topics in Cryptography
",1,Fall 2023,Cryptanalysis,"6.5630 Advanced Topics in Cryptography
", ,0,"() 
Prereq: 6.5620
Units: 3-0-9
Lecture: F1-4 (26-322)

In-depth exploration of recent results in cryptography.
Y. KalaiNo textbook information available"
Programming,Students will develop programming skills to implement cryptographic algorithms and protocols.,"6.5630 Advanced Topics in Cryptography
",1,Fall 2023,Programming and Coding,"6.5630 Advanced Topics in Cryptography
", ,0,"() 
Prereq: 6.5620
Units: 3-0-9
Lecture: F1-4 (26-322)

In-depth exploration of recent results in cryptography.
Y. KalaiNo textbook information available"
Mathematical reasoning,Students will enhance their ability to apply mathematical reasoning in cryptography.,"6.5630 Advanced Topics in Cryptography
",1,Fall 2023,Reasoning,"6.5630 Advanced Topics in Cryptography
", ,0,"() 
Prereq: 6.5620
Units: 3-0-9
Lecture: F1-4 (26-322)

In-depth exploration of recent results in cryptography.
Y. KalaiNo textbook information available"
Research skills,Students will learn how to conduct research in the field of cryptography and stay updated with recent advancements.,"6.5630 Advanced Topics in Cryptography
",1,Fall 2023,,"6.5630 Advanced Topics in Cryptography
", ,0,"() 
Prereq: 6.5620
Units: 3-0-9
Lecture: F1-4 (26-322)

In-depth exploration of recent results in cryptography.
Y. KalaiNo textbook information available"
Secure system design,"Students will learn how to design computer systems with a focus on security, including techniques for achieving security based on recent research papers.","6.5660 Computer Systems Security
",1,Fall 2023,Secure system design,"6.5660 Computer Systems Security
", ,0,"()
Prereq: 6.1020 and 6.1800
Units: 3-6-3

Design and implementation of secure computer systems. Lectures cover attacks that compromise security as well as techniques for achieving security, based on recent research papers. Topics include operating system security, privilege separation, capabilities, language-based security, cryptographic network protocols, trusted hardware, and security in web applications and mobile phones. Labs involve implementing and compromising a web application that sandboxes arbitrary code, and a group final project.
Staff

Computer Systems"
Operating system security,Students will gain proficiency in understanding and implementing security measures in operating systems.,"6.5660 Computer Systems Security
",1,Fall 2023,,"6.5660 Computer Systems Security
", ,0,"()
Prereq: 6.1020 and 6.1800
Units: 3-6-3

Design and implementation of secure computer systems. Lectures cover attacks that compromise security as well as techniques for achieving security, based on recent research papers. Topics include operating system security, privilege separation, capabilities, language-based security, cryptographic network protocols, trusted hardware, and security in web applications and mobile phones. Labs involve implementing and compromising a web application that sandboxes arbitrary code, and a group final project.
Staff

Computer Systems"
Cryptographic network protocols,Students will learn about cryptographic protocols used in network security and gain the ability to implement and analyze them.,"6.5660 Computer Systems Security
",1,Fall 2023,,"6.5660 Computer Systems Security
", ,0,"()
Prereq: 6.1020 and 6.1800
Units: 3-6-3

Design and implementation of secure computer systems. Lectures cover attacks that compromise security as well as techniques for achieving security, based on recent research papers. Topics include operating system security, privilege separation, capabilities, language-based security, cryptographic network protocols, trusted hardware, and security in web applications and mobile phones. Labs involve implementing and compromising a web application that sandboxes arbitrary code, and a group final project.
Staff

Computer Systems"
Web application security,"Students will develop skills in securing web applications, including techniques for sandboxing arbitrary code.","6.5660 Computer Systems Security
",1,Fall 2023,Software Development and Web Application Security,"6.5660 Computer Systems Security
", ,0,"()
Prereq: 6.1020 and 6.1800
Units: 3-6-3

Design and implementation of secure computer systems. Lectures cover attacks that compromise security as well as techniques for achieving security, based on recent research papers. Topics include operating system security, privilege separation, capabilities, language-based security, cryptographic network protocols, trusted hardware, and security in web applications and mobile phones. Labs involve implementing and compromising a web application that sandboxes arbitrary code, and a group final project.
Staff

Computer Systems"
Mobile phone security,Students will learn about security measures specific to mobile phones and gain the ability to implement them.,"6.5660 Computer Systems Security
",1,Fall 2023,Mobile phone security,"6.5660 Computer Systems Security
", ,0,"()
Prereq: 6.1020 and 6.1800
Units: 3-6-3

Design and implementation of secure computer systems. Lectures cover attacks that compromise security as well as techniques for achieving security, based on recent research papers. Topics include operating system security, privilege separation, capabilities, language-based security, cryptographic network protocols, trusted hardware, and security in web applications and mobile phones. Labs involve implementing and compromising a web application that sandboxes arbitrary code, and a group final project.
Staff

Computer Systems"
Client-server design,"Students will learn techniques for designing and implementing client-server systems, which involves handling and manipulating data and communication between clients and servers.","6.1800 Computer Systems Engineering
",1,Fall 2023,,"6.1800 Computer Systems Engineering
", ,0,"()
Prereq: 6.1910
Units: 5-1-6

Topics on the engineering of computer software and hardware systems: techniques for controlling complexity; strong modularity using client-server design, operating systems; performance, networks; naming; security and privacy; fault-tolerant systems, atomicity and coordination of concurrent activities, and recovery; impact of computer systems on society. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Includes a single, semester-long design project. Students engage in extensive written communication exercises. Enrollment may be limited.
K. LaCurts"
Operating systems,"Students will gain proficiency in understanding and working with operating systems, including handling and manipulating hardware and software resources.","6.1800 Computer Systems Engineering
",1,Fall 2023,Operating Systems,"6.1800 Computer Systems Engineering
", ,0,"()
Prereq: 6.1910
Units: 5-1-6

Topics on the engineering of computer software and hardware systems: techniques for controlling complexity; strong modularity using client-server design, operating systems; performance, networks; naming; security and privacy; fault-tolerant systems, atomicity and coordination of concurrent activities, and recovery; impact of computer systems on society. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Includes a single, semester-long design project. Students engage in extensive written communication exercises. Enrollment may be limited.
K. LaCurts"
Performance optimization,"Students will learn techniques for optimizing the performance of computer systems, which involves manipulating and analyzing data and system resources.","6.1800 Computer Systems Engineering
",1,Fall 2023,Performance Analysis and Optimization,"6.1800 Computer Systems Engineering
", ,0,"()
Prereq: 6.1910
Units: 5-1-6

Topics on the engineering of computer software and hardware systems: techniques for controlling complexity; strong modularity using client-server design, operating systems; performance, networks; naming; security and privacy; fault-tolerant systems, atomicity and coordination of concurrent activities, and recovery; impact of computer systems on society. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Includes a single, semester-long design project. Students engage in extensive written communication exercises. Enrollment may be limited.
K. LaCurts"
Network management,"Students will develop skills in managing computer networks, including handling and manipulating network configurations and troubleshooting network issues.","6.1800 Computer Systems Engineering
",1,Fall 2023,,"6.1800 Computer Systems Engineering
", ,0,"()
Prereq: 6.1910
Units: 5-1-6

Topics on the engineering of computer software and hardware systems: techniques for controlling complexity; strong modularity using client-server design, operating systems; performance, networks; naming; security and privacy; fault-tolerant systems, atomicity and coordination of concurrent activities, and recovery; impact of computer systems on society. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Includes a single, semester-long design project. Students engage in extensive written communication exercises. Enrollment may be limited.
K. LaCurts"
Security and privacy,"Students will learn about security and privacy measures in computer systems, including handling and manipulating security protocols and implementing privacy controls.","6.1800 Computer Systems Engineering
",1,Fall 2023,Security and privacy,"6.1800 Computer Systems Engineering
", ,0,"()
Prereq: 6.1910
Units: 5-1-6

Topics on the engineering of computer software and hardware systems: techniques for controlling complexity; strong modularity using client-server design, operating systems; performance, networks; naming; security and privacy; fault-tolerant systems, atomicity and coordination of concurrent activities, and recovery; impact of computer systems on society. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Includes a single, semester-long design project. Students engage in extensive written communication exercises. Enrollment may be limited.
K. LaCurts"
Operating system design and implementation,"Students will learn how to design and implement operating systems, including topics such as virtual memory, file systems, threads, and system calls.","6.1810 Operating System Engineering
",1,Fall 2023,,"6.1810 Operating System Engineering
", ,0,"()
Prereq: 6.1910
Units: 3-0-9
Lecture: MW1-2.30 (34-101)

Design and implementation of operating systems, and their use as a foundation for systems programming. Topics include virtual memory, file systems, threads, context switches, kernels, interrupts, system calls, interprocess communication, coordination, and interaction between software and hardware. A multi-processor operating system for RISC-V, xv6, is used to illustrate these topics. Individual laboratory assignments involve extending the xv6 operating system, for example to support sophisticated virtual memory features and networking.
R. MorrisNo textbook information available"
Systems programming,"Students will develop skills in systems programming, which involves writing low-level code to interact with hardware and manage system resources.","6.1810 Operating System Engineering
",1,Fall 2023,Computer Systems,"6.1810 Operating System Engineering
", ,0,"()
Prereq: 6.1910
Units: 3-0-9
Lecture: MW1-2.30 (34-101)

Design and implementation of operating systems, and their use as a foundation for systems programming. Topics include virtual memory, file systems, threads, context switches, kernels, interrupts, system calls, interprocess communication, coordination, and interaction between software and hardware. A multi-processor operating system for RISC-V, xv6, is used to illustrate these topics. Individual laboratory assignments involve extending the xv6 operating system, for example to support sophisticated virtual memory features and networking.
R. MorrisNo textbook information available"
Programming in RISC-V,"Students will gain proficiency in programming in the RISC-V instruction set architecture, which is used in the xv6 operating system.","6.1810 Operating System Engineering
",1,Fall 2023,Programming in RISC-V,"6.1810 Operating System Engineering
", ,0,"()
Prereq: 6.1910
Units: 3-0-9
Lecture: MW1-2.30 (34-101)

Design and implementation of operating systems, and their use as a foundation for systems programming. Topics include virtual memory, file systems, threads, context switches, kernels, interrupts, system calls, interprocess communication, coordination, and interaction between software and hardware. A multi-processor operating system for RISC-V, xv6, is used to illustrate these topics. Individual laboratory assignments involve extending the xv6 operating system, for example to support sophisticated virtual memory features and networking.
R. MorrisNo textbook information available"
Extending operating systems,"Students will learn how to extend the functionality of an operating system, such as adding support for advanced virtual memory features and networking.","6.1810 Operating System Engineering
",1,Fall 2023,,"6.1810 Operating System Engineering
", ,0,"()
Prereq: 6.1910
Units: 3-0-9
Lecture: MW1-2.30 (34-101)

Design and implementation of operating systems, and their use as a foundation for systems programming. Topics include virtual memory, file systems, threads, context switches, kernels, interrupts, system calls, interprocess communication, coordination, and interaction between software and hardware. A multi-processor operating system for RISC-V, xv6, is used to illustrate these topics. Individual laboratory assignments involve extending the xv6 operating system, for example to support sophisticated virtual memory features and networking.
R. MorrisNo textbook information available"
Problem-solving,Students will develop problem-solving skills as they work on laboratory assignments that involve solving complex issues related to operating system design and implementation.,"6.1810 Operating System Engineering
",1,Fall 2023,Problem-solving,"6.1810 Operating System Engineering
", ,0,"()
Prereq: 6.1910
Units: 3-0-9
Lecture: MW1-2.30 (34-101)

Design and implementation of operating systems, and their use as a foundation for systems programming. Topics include virtual memory, file systems, threads, context switches, kernels, interrupts, system calls, interprocess communication, coordination, and interaction between software and hardware. A multi-processor operating system for RISC-V, xv6, is used to illustrate these topics. Individual laboratory assignments involve extending the xv6 operating system, for example to support sophisticated virtual memory features and networking.
R. MorrisNo textbook information available"
Sensor programming,Students will learn how to program and manipulate sensors in IoT systems.,"6.1820[J] Mobile and Sensor Computing
",1,Fall 2023,,"6.1820[J] Mobile and Sensor Computing
", ,0,"()
(Same subject as MAS.453[J])
Prereq: 6.1800 or permission of instructor
Units: 3-0-9

Focuses on ""Internet of Things"" (IoT) systems and technologies, sensing, computing, and communication. Explores fundamental design and implementation issues in the engineering of mobile and sensor computing systems. Topics include battery-free sensors, seeing through wall, robotic sensors, vital sign sensors (breathing, heartbeats, emotions), sensing in cars and autonomous vehicles, subsea IoT, sensor security, positioning technologies (including GPS and indoor WiFi), inertial sensing (accelerometers, gyroscopes, inertial measurement units, dead-reckoning), embedded and distributed system architectures, sensing with radio signals, sensing with microphones and cameras, wireless sensor networks, embedded and distributed system architectures, mobile libraries and APIs to sensors, and application case studies. Includes readings from research literature, as well as laboratory assignments and a significant term project.
Staff"
Data analysis,Students will develop skills in analyzing data collected from sensors in order to extract meaningful insights.,"6.1820[J] Mobile and Sensor Computing
",1,Fall 2023,Data Analysis and Research,"6.1820[J] Mobile and Sensor Computing
", ,0,"()
(Same subject as MAS.453[J])
Prereq: 6.1800 or permission of instructor
Units: 3-0-9

Focuses on ""Internet of Things"" (IoT) systems and technologies, sensing, computing, and communication. Explores fundamental design and implementation issues in the engineering of mobile and sensor computing systems. Topics include battery-free sensors, seeing through wall, robotic sensors, vital sign sensors (breathing, heartbeats, emotions), sensing in cars and autonomous vehicles, subsea IoT, sensor security, positioning technologies (including GPS and indoor WiFi), inertial sensing (accelerometers, gyroscopes, inertial measurement units, dead-reckoning), embedded and distributed system architectures, sensing with radio signals, sensing with microphones and cameras, wireless sensor networks, embedded and distributed system architectures, mobile libraries and APIs to sensors, and application case studies. Includes readings from research literature, as well as laboratory assignments and a significant term project.
Staff"
Wireless communication,Students will gain proficiency in setting up and configuring wireless communication between IoT devices.,"6.1820[J] Mobile and Sensor Computing
",1,Fall 2023,Wireless communication,"6.1820[J] Mobile and Sensor Computing
", ,0,"()
(Same subject as MAS.453[J])
Prereq: 6.1800 or permission of instructor
Units: 3-0-9

Focuses on ""Internet of Things"" (IoT) systems and technologies, sensing, computing, and communication. Explores fundamental design and implementation issues in the engineering of mobile and sensor computing systems. Topics include battery-free sensors, seeing through wall, robotic sensors, vital sign sensors (breathing, heartbeats, emotions), sensing in cars and autonomous vehicles, subsea IoT, sensor security, positioning technologies (including GPS and indoor WiFi), inertial sensing (accelerometers, gyroscopes, inertial measurement units, dead-reckoning), embedded and distributed system architectures, sensing with radio signals, sensing with microphones and cameras, wireless sensor networks, embedded and distributed system architectures, mobile libraries and APIs to sensors, and application case studies. Includes readings from research literature, as well as laboratory assignments and a significant term project.
Staff"
Embedded system design,Students will learn how to design and implement embedded systems for IoT applications.,"6.1820[J] Mobile and Sensor Computing
",1,Fall 2023,,"6.1820[J] Mobile and Sensor Computing
", ,0,"()
(Same subject as MAS.453[J])
Prereq: 6.1800 or permission of instructor
Units: 3-0-9

Focuses on ""Internet of Things"" (IoT) systems and technologies, sensing, computing, and communication. Explores fundamental design and implementation issues in the engineering of mobile and sensor computing systems. Topics include battery-free sensors, seeing through wall, robotic sensors, vital sign sensors (breathing, heartbeats, emotions), sensing in cars and autonomous vehicles, subsea IoT, sensor security, positioning technologies (including GPS and indoor WiFi), inertial sensing (accelerometers, gyroscopes, inertial measurement units, dead-reckoning), embedded and distributed system architectures, sensing with radio signals, sensing with microphones and cameras, wireless sensor networks, embedded and distributed system architectures, mobile libraries and APIs to sensors, and application case studies. Includes readings from research literature, as well as laboratory assignments and a significant term project.
Staff"
Problem-solving,Students will develop problem-solving skills as they work on designing and implementing IoT systems.,"6.1820[J] Mobile and Sensor Computing
",1,Fall 2023,Problem-solving,"6.1820[J] Mobile and Sensor Computing
", ,0,"()
(Same subject as MAS.453[J])
Prereq: 6.1800 or permission of instructor
Units: 3-0-9

Focuses on ""Internet of Things"" (IoT) systems and technologies, sensing, computing, and communication. Explores fundamental design and implementation issues in the engineering of mobile and sensor computing systems. Topics include battery-free sensors, seeing through wall, robotic sensors, vital sign sensors (breathing, heartbeats, emotions), sensing in cars and autonomous vehicles, subsea IoT, sensor security, positioning technologies (including GPS and indoor WiFi), inertial sensing (accelerometers, gyroscopes, inertial measurement units, dead-reckoning), embedded and distributed system architectures, sensing with radio signals, sensing with microphones and cameras, wireless sensor networks, embedded and distributed system architectures, mobile libraries and APIs to sensors, and application case studies. Includes readings from research literature, as well as laboratory assignments and a significant term project.
Staff"
Ethical decision-making,Students will learn how to assess design decisions within an ethical framework and consider the impact of their decisions on non-users. This skill is important as it helps students make responsible choices in the field of computer systems.,"6.1850 Computer Systems and Society
",1,Fall 2023,,"6.1850 Computer Systems and Society
", ,0,"()
Prereq: 6.1800
Units: 3-0-9
Lecture: TR11-12.30 (34-301)

Explores the impact of computer systems on individual humans, society, and the environment. Examines large- and small-scale power structures that stem from low-level technical design decisions, the consequences of those structures on society, and how they can limit or provide access to certain technologies. Students learn to assess design decisions within an ethical framework and consider the impact of their decisions on non-users. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Possible topics include the implications of hierarchical designs (e.g., DNS) for scale; how layered models influence what parts of a network have the power to take certain actions; and the environmental impact of proof-of-work-based systems such as Bitcoin. Enrollment may be limited.
K. LacurtsNo textbook information available"
Case study analysis,Students will develop the skill of analyzing case studies of working systems and readings from the current literature. This skill allows them to compare and contrast different systems and understand their implications.,"6.1850 Computer Systems and Society
",1,Fall 2023,Case study analysis,"6.1850 Computer Systems and Society
", ,0,"()
Prereq: 6.1800
Units: 3-0-9
Lecture: TR11-12.30 (34-301)

Explores the impact of computer systems on individual humans, society, and the environment. Examines large- and small-scale power structures that stem from low-level technical design decisions, the consequences of those structures on society, and how they can limit or provide access to certain technologies. Students learn to assess design decisions within an ethical framework and consider the impact of their decisions on non-users. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Possible topics include the implications of hierarchical designs (e.g., DNS) for scale; how layered models influence what parts of a network have the power to take certain actions; and the environmental impact of proof-of-work-based systems such as Bitcoin. Enrollment may be limited.
K. LacurtsNo textbook information available"
Design assessment,Students will gain the skill of assessing design decisions in computer systems. This skill is crucial in evaluating the effectiveness and efficiency of different design choices.,"6.1850 Computer Systems and Society
",1,Fall 2023,Design assessment,"6.1850 Computer Systems and Society
", ,0,"()
Prereq: 6.1800
Units: 3-0-9
Lecture: TR11-12.30 (34-301)

Explores the impact of computer systems on individual humans, society, and the environment. Examines large- and small-scale power structures that stem from low-level technical design decisions, the consequences of those structures on society, and how they can limit or provide access to certain technologies. Students learn to assess design decisions within an ethical framework and consider the impact of their decisions on non-users. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Possible topics include the implications of hierarchical designs (e.g., DNS) for scale; how layered models influence what parts of a network have the power to take certain actions; and the environmental impact of proof-of-work-based systems such as Bitcoin. Enrollment may be limited.
K. LacurtsNo textbook information available"
Hierarchical design implications,"Students will learn about the implications of hierarchical designs, such as DNS, for scale. This skill enables them to understand the impact of design decisions on the scalability of computer systems.","6.1850 Computer Systems and Society
",1,Fall 2023,Hierarchical design implications,"6.1850 Computer Systems and Society
", ,0,"()
Prereq: 6.1800
Units: 3-0-9
Lecture: TR11-12.30 (34-301)

Explores the impact of computer systems on individual humans, society, and the environment. Examines large- and small-scale power structures that stem from low-level technical design decisions, the consequences of those structures on society, and how they can limit or provide access to certain technologies. Students learn to assess design decisions within an ethical framework and consider the impact of their decisions on non-users. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Possible topics include the implications of hierarchical designs (e.g., DNS) for scale; how layered models influence what parts of a network have the power to take certain actions; and the environmental impact of proof-of-work-based systems such as Bitcoin. Enrollment may be limited.
K. LacurtsNo textbook information available"
Layered models understanding,Students will develop the skill of understanding how layered models influence the actions that different parts of a network can take. This skill helps them comprehend the functioning of complex network systems.,"6.1850 Computer Systems and Society
",1,Fall 2023,Layered models understanding,"6.1850 Computer Systems and Society
", ,0,"()
Prereq: 6.1800
Units: 3-0-9
Lecture: TR11-12.30 (34-301)

Explores the impact of computer systems on individual humans, society, and the environment. Examines large- and small-scale power structures that stem from low-level technical design decisions, the consequences of those structures on society, and how they can limit or provide access to certain technologies. Students learn to assess design decisions within an ethical framework and consider the impact of their decisions on non-users. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Possible topics include the implications of hierarchical designs (e.g., DNS) for scale; how layered models influence what parts of a network have the power to take certain actions; and the environmental impact of proof-of-work-based systems such as Bitcoin. Enrollment may be limited.
K. LacurtsNo textbook information available"
C programming,"Students will gain proficiency in programming in the C language, which is a prerequisite for the course.","6.5810 Operating System Engineering
",1,Fall 2023,,"6.5810 Operating System Engineering
", ,0,"()
Prereq: 6.1020 and 6.1800
Units: 3-6-3
Lecture: MW1-2.30 (3-370) Recitation: TBA

Fundamental design and implementation issues in the engineering of operating systems. Lectures based on the study of a symmetric multiprocessor version of UNIX version 6 and research papers. Topics include virtual memory; file system; threads; context switches; kernels; interrupts; system calls; interprocess communication; coordination, and interaction between software and hardware. Individual laboratory assignments accumulate in the construction of a minimal operating system (for an x86-based personal computer) that implements the basic operating system abstractions and a shell. Knowledge of programming in the C language is a prerequisite.
M. KaashoekNo textbook information available"
Operating system design,Students will learn how to design an operating system through the construction of a minimal operating system for an x86-based personal computer.,"6.5810 Operating System Engineering
",1,Fall 2023,Operating Systems,"6.5810 Operating System Engineering
", ,0,"()
Prereq: 6.1020 and 6.1800
Units: 3-6-3
Lecture: MW1-2.30 (3-370) Recitation: TBA

Fundamental design and implementation issues in the engineering of operating systems. Lectures based on the study of a symmetric multiprocessor version of UNIX version 6 and research papers. Topics include virtual memory; file system; threads; context switches; kernels; interrupts; system calls; interprocess communication; coordination, and interaction between software and hardware. Individual laboratory assignments accumulate in the construction of a minimal operating system (for an x86-based personal computer) that implements the basic operating system abstractions and a shell. Knowledge of programming in the C language is a prerequisite.
M. KaashoekNo textbook information available"
Shell scripting,Students will develop skills in shell scripting as they implement a shell in their operating system project.,"6.5810 Operating System Engineering
",1,Fall 2023,Shell scripting,"6.5810 Operating System Engineering
", ,0,"()
Prereq: 6.1020 and 6.1800
Units: 3-6-3
Lecture: MW1-2.30 (3-370) Recitation: TBA

Fundamental design and implementation issues in the engineering of operating systems. Lectures based on the study of a symmetric multiprocessor version of UNIX version 6 and research papers. Topics include virtual memory; file system; threads; context switches; kernels; interrupts; system calls; interprocess communication; coordination, and interaction between software and hardware. Individual laboratory assignments accumulate in the construction of a minimal operating system (for an x86-based personal computer) that implements the basic operating system abstractions and a shell. Knowledge of programming in the C language is a prerequisite.
M. KaashoekNo textbook information available"
System call implementation,"Students will learn how to implement system calls, which are essential for interacting with the operating system.","6.5810 Operating System Engineering
",1,Fall 2023,System call implementation,"6.5810 Operating System Engineering
", ,0,"()
Prereq: 6.1020 and 6.1800
Units: 3-6-3
Lecture: MW1-2.30 (3-370) Recitation: TBA

Fundamental design and implementation issues in the engineering of operating systems. Lectures based on the study of a symmetric multiprocessor version of UNIX version 6 and research papers. Topics include virtual memory; file system; threads; context switches; kernels; interrupts; system calls; interprocess communication; coordination, and interaction between software and hardware. Individual laboratory assignments accumulate in the construction of a minimal operating system (for an x86-based personal computer) that implements the basic operating system abstractions and a shell. Knowledge of programming in the C language is a prerequisite.
M. KaashoekNo textbook information available"
Interprocess communication,"Students will gain skills in interprocess communication, which is crucial for coordination and interaction between different processes in an operating system.","6.5810 Operating System Engineering
",1,Fall 2023,Interprocess communication,"6.5810 Operating System Engineering
", ,0,"()
Prereq: 6.1020 and 6.1800
Units: 3-6-3
Lecture: MW1-2.30 (3-370) Recitation: TBA

Fundamental design and implementation issues in the engineering of operating systems. Lectures based on the study of a symmetric multiprocessor version of UNIX version 6 and research papers. Topics include virtual memory; file system; threads; context switches; kernels; interrupts; system calls; interprocess communication; coordination, and interaction between software and hardware. Individual laboratory assignments accumulate in the construction of a minimal operating system (for an x86-based personal computer) that implements the basic operating system abstractions and a shell. Knowledge of programming in the C language is a prerequisite.
M. KaashoekNo textbook information available"
Network protocol design,Students will learn how to design network protocols to ensure efficient and reliable communication between devices.,"6.5820 Computer Networks
",1,Fall 2023,Network protocol design,"6.5820 Computer Networks
", ,0,"()
Prereq: 6.1800 or permission of instructor
Units: 4-0-8
Lecture: TR1-2.30 (32-124)

Topics on the engineering and analysis of network protocols and architecture, including architectural principles for designing heterogeneous networks; transport protocols; Internet routing; router design; congestion control and network resource management; wireless networks; network security; naming; overlay and peer-to-peer networks. Readings from original research papers. Semester-long project and paper.
M. Alizadeh AttarNo textbook information available"
Router design,"Students will gain proficiency in designing routers, which are essential components of computer networks.","6.5820 Computer Networks
",1,Fall 2023,Router design,"6.5820 Computer Networks
", ,0,"()
Prereq: 6.1800 or permission of instructor
Units: 4-0-8
Lecture: TR1-2.30 (32-124)

Topics on the engineering and analysis of network protocols and architecture, including architectural principles for designing heterogeneous networks; transport protocols; Internet routing; router design; congestion control and network resource management; wireless networks; network security; naming; overlay and peer-to-peer networks. Readings from original research papers. Semester-long project and paper.
M. Alizadeh AttarNo textbook information available"
Congestion control,Students will learn techniques for managing network congestion to ensure smooth data flow.,"6.5820 Computer Networks
",1,Fall 2023,Congestion control,"6.5820 Computer Networks
", ,0,"()
Prereq: 6.1800 or permission of instructor
Units: 4-0-8
Lecture: TR1-2.30 (32-124)

Topics on the engineering and analysis of network protocols and architecture, including architectural principles for designing heterogeneous networks; transport protocols; Internet routing; router design; congestion control and network resource management; wireless networks; network security; naming; overlay and peer-to-peer networks. Readings from original research papers. Semester-long project and paper.
M. Alizadeh AttarNo textbook information available"
Network security,Students will develop skills in implementing security measures to protect computer networks from unauthorized access and attacks.,"6.5820 Computer Networks
",1,Fall 2023,Network Management and Security,"6.5820 Computer Networks
", ,0,"()
Prereq: 6.1800 or permission of instructor
Units: 4-0-8
Lecture: TR1-2.30 (32-124)

Topics on the engineering and analysis of network protocols and architecture, including architectural principles for designing heterogeneous networks; transport protocols; Internet routing; router design; congestion control and network resource management; wireless networks; network security; naming; overlay and peer-to-peer networks. Readings from original research papers. Semester-long project and paper.
M. Alizadeh AttarNo textbook information available"
Wireless network configuration,"Students will learn how to configure and manage wireless networks, including setting up access points and ensuring secure connections.","6.5820 Computer Networks
",1,Fall 2023,Wireless network configuration,"6.5820 Computer Networks
", ,0,"()
Prereq: 6.1800 or permission of instructor
Units: 4-0-8
Lecture: TR1-2.30 (32-124)

Topics on the engineering and analysis of network protocols and architecture, including architectural principles for designing heterogeneous networks; transport protocols; Internet routing; router design; congestion control and network resource management; wireless networks; network security; naming; overlay and peer-to-peer networks. Readings from original research papers. Semester-long project and paper.
M. Alizadeh AttarNo textbook information available"
SQL,"Students will gain proficiency in SQL as they learn about query processing, query optimization, and data manipulation in database systems.","6.5830 Database Systems
",1,Fall 2023,SQL,"6.5830 Database Systems
", ,0,"()
(Subject meets with 6.5831)
Prereq: (6.1800 and (6.1210 or 6.1220)) or permission of instructor
Units: 3-0-9
Lecture: MW2.30-4 (32-155)

Topics related to the engineering and design of database systems, including data models; database and schema design; schema normalization and integrity constraints; query processing; query optimization and cost estimation; transactions; recovery; concurrency control; isolation and consistency; distributed, parallel and heterogeneous databases; adaptive databases; trigger systems; pub-sub systems; semi structured data and XML querying. Lecture and readings from original research papers. Semester-long project and paper. Students taking graduate version complete different assignments. Enrollment may be limited.
S. R. MaddenNo textbook information available"
XML,"Students will learn about XML (eXtensible Markup Language) and its use in databases, which will enable them to work with semi-structured data and XML querying.","6.5830 Database Systems
",1,Fall 2023,XML,"6.5830 Database Systems
", ,0,"()
(Subject meets with 6.5831)
Prereq: (6.1800 and (6.1210 or 6.1220)) or permission of instructor
Units: 3-0-9
Lecture: MW2.30-4 (32-155)

Topics related to the engineering and design of database systems, including data models; database and schema design; schema normalization and integrity constraints; query processing; query optimization and cost estimation; transactions; recovery; concurrency control; isolation and consistency; distributed, parallel and heterogeneous databases; adaptive databases; trigger systems; pub-sub systems; semi structured data and XML querying. Lecture and readings from original research papers. Semester-long project and paper. Students taking graduate version complete different assignments. Enrollment may be limited.
S. R. MaddenNo textbook information available"
SQL,"Students will gain proficiency in SQL as they learn about query processing, query optimization, and data manipulation in database systems.","6.5831 Database Systems
",1,Fall 2023,SQL,"6.5831 Database Systems
", ,0,"()
(Subject meets with 6.5830)
Prereq: (6.1800 and (6.1210 or 6.1220)) or permission of instructor
Units: 3-0-9
Lecture: MW2.30-4 (32-155)

Topics related to the engineering and design of database systems, including data models; database and schema design; schema normalization and integrity constraints; query processing; query optimization and cost estimation; transactions; recovery; concurrency control; isolation and consistency; distributed, parallel and heterogeneous databases; adaptive databases; trigger systems; pub-sub systems; semi structured data and XML querying. Lecture and readings from original research papers. Semester-long project and paper. Students taking graduate version complete different assignments. Enrollment may be limited.
S. MaddenNo textbook information available"
XML,"Students will learn about XML (eXtensible Markup Language) and its use in databases, which will enable them to work with semi-structured data and XML querying.","6.5831 Database Systems
",1,Fall 2023,XML,"6.5831 Database Systems
", ,0,"()
(Subject meets with 6.5830)
Prereq: (6.1800 and (6.1210 or 6.1220)) or permission of instructor
Units: 3-0-9
Lecture: MW2.30-4 (32-155)

Topics related to the engineering and design of database systems, including data models; database and schema design; schema normalization and integrity constraints; query processing; query optimization and cost estimation; transactions; recovery; concurrency control; isolation and consistency; distributed, parallel and heterogeneous databases; adaptive databases; trigger systems; pub-sub systems; semi structured data and XML querying. Lecture and readings from original research papers. Semester-long project and paper. Students taking graduate version complete different assignments. Enrollment may be limited.
S. MaddenNo textbook information available"
Remote procedure call (RPC),Students will learn how to implement and use remote procedure call in distributed systems.,"6.5840 Distributed Computer Systems Engineering
",1,Fall 2023,Remote procedure call (RPC),"6.5840 Distributed Computer Systems Engineering
", ,0,"()
Prereq: 6.1800 and permission of instructor
Units: 3-0-9

Abstractions and implementation techniques for engineering distributed systems: remote procedure call, threads and locking, client/server, peer-to-peer, consistency, fault tolerance, and security. Readings from current literature. Individual laboratory assignments culminate in the construction of a fault-tolerant and scalable network file system. Programming experience with C/C++ required. Enrollment limited.
Staff"
Thread and locking,Students will gain proficiency in handling threads and implementing locking mechanisms in distributed systems.,"6.5840 Distributed Computer Systems Engineering
",1,Fall 2023,Thread and locking,"6.5840 Distributed Computer Systems Engineering
", ,0,"()
Prereq: 6.1800 and permission of instructor
Units: 3-0-9

Abstractions and implementation techniques for engineering distributed systems: remote procedure call, threads and locking, client/server, peer-to-peer, consistency, fault tolerance, and security. Readings from current literature. Individual laboratory assignments culminate in the construction of a fault-tolerant and scalable network file system. Programming experience with C/C++ required. Enrollment limited.
Staff"
Client/server architecture,Students will learn about the client/server model and how to design and implement distributed systems using this architecture.,"6.5840 Distributed Computer Systems Engineering
",1,Fall 2023,Network Architecture,"6.5840 Distributed Computer Systems Engineering
", ,0,"()
Prereq: 6.1800 and permission of instructor
Units: 3-0-9

Abstractions and implementation techniques for engineering distributed systems: remote procedure call, threads and locking, client/server, peer-to-peer, consistency, fault tolerance, and security. Readings from current literature. Individual laboratory assignments culminate in the construction of a fault-tolerant and scalable network file system. Programming experience with C/C++ required. Enrollment limited.
Staff"
Peer-to-peer (P2P) systems,Students will learn about P2P systems and how to design and build distributed systems using this decentralized approach.,"6.5840 Distributed Computer Systems Engineering
",1,Fall 2023,Peer-to-peer (P2P) systems,"6.5840 Distributed Computer Systems Engineering
", ,0,"()
Prereq: 6.1800 and permission of instructor
Units: 3-0-9

Abstractions and implementation techniques for engineering distributed systems: remote procedure call, threads and locking, client/server, peer-to-peer, consistency, fault tolerance, and security. Readings from current literature. Individual laboratory assignments culminate in the construction of a fault-tolerant and scalable network file system. Programming experience with C/C++ required. Enrollment limited.
Staff"
Fault tolerance,Students will develop skills in designing and implementing fault-tolerant distributed systems to ensure system reliability and availability.,"6.5840 Distributed Computer Systems Engineering
",1,Fall 2023,Fault tolerance,"6.5840 Distributed Computer Systems Engineering
", ,0,"()
Prereq: 6.1800 and permission of instructor
Units: 3-0-9

Abstractions and implementation techniques for engineering distributed systems: remote procedure call, threads and locking, client/server, peer-to-peer, consistency, fault tolerance, and security. Readings from current literature. Individual laboratory assignments culminate in the construction of a fault-tolerant and scalable network file system. Programming experience with C/C++ required. Enrollment limited.
Staff"
Specification and verification,"Students will learn how to specify and verify the correctness of computer systems, which involves quantifiable techniques for ensuring the accuracy and reliability of software and hardware components.","6.5850 Principles of Computer Systems
",1,Fall 2023,Specification and verification,"6.5850 Principles of Computer Systems
", ,0,"()Not offered regularly; consult department
Prereq: Permission of instructor
Units: 3-0-9
 Subject Cancelled 

Introduction to the basic principles of computer systems with emphasis on the use of rigorous techniques as an aid to understanding and building modern computing systems. Particular attention paid to concurrent and distributed systems. Topics include: specification and verification, concurrent algorithms, synchronization, naming, Networking, replication techniques (including distributed cache management), and principles and algorithms for achieving reliability.
M. F. Kaashoek, B. Lampson, N. B. Zeldovich

Computer Architecture"
Concurrent algorithms,"Students will gain proficiency in designing and implementing algorithms that can run concurrently, allowing for efficient and parallel execution of tasks.","6.5850 Principles of Computer Systems
",1,Fall 2023,Concurrent and Parallel Programming,"6.5850 Principles of Computer Systems
", ,0,"()Not offered regularly; consult department
Prereq: Permission of instructor
Units: 3-0-9
 Subject Cancelled 

Introduction to the basic principles of computer systems with emphasis on the use of rigorous techniques as an aid to understanding and building modern computing systems. Particular attention paid to concurrent and distributed systems. Topics include: specification and verification, concurrent algorithms, synchronization, naming, Networking, replication techniques (including distributed cache management), and principles and algorithms for achieving reliability.
M. F. Kaashoek, B. Lampson, N. B. Zeldovich

Computer Architecture"
Synchronization,"Students will learn how to synchronize multiple processes or threads in a computer system, ensuring proper coordination and avoiding conflicts.","6.5850 Principles of Computer Systems
",1,Fall 2023,Synchronization algorithms,"6.5850 Principles of Computer Systems
", ,0,"()Not offered regularly; consult department
Prereq: Permission of instructor
Units: 3-0-9
 Subject Cancelled 

Introduction to the basic principles of computer systems with emphasis on the use of rigorous techniques as an aid to understanding and building modern computing systems. Particular attention paid to concurrent and distributed systems. Topics include: specification and verification, concurrent algorithms, synchronization, naming, Networking, replication techniques (including distributed cache management), and principles and algorithms for achieving reliability.
M. F. Kaashoek, B. Lampson, N. B. Zeldovich

Computer Architecture"
Networking,"Students will develop skills in understanding and working with computer networks, including protocols, communication models, and network architectures.","6.5850 Principles of Computer Systems
",1,Fall 2023,Networking,"6.5850 Principles of Computer Systems
", ,0,"()Not offered regularly; consult department
Prereq: Permission of instructor
Units: 3-0-9
 Subject Cancelled 

Introduction to the basic principles of computer systems with emphasis on the use of rigorous techniques as an aid to understanding and building modern computing systems. Particular attention paid to concurrent and distributed systems. Topics include: specification and verification, concurrent algorithms, synchronization, naming, Networking, replication techniques (including distributed cache management), and principles and algorithms for achieving reliability.
M. F. Kaashoek, B. Lampson, N. B. Zeldovich

Computer Architecture"
Replication techniques,"Students will learn about techniques for replicating data and resources in distributed systems, ensuring fault tolerance and high availability.","6.5850 Principles of Computer Systems
",1,Fall 2023,Replication techniques,"6.5850 Principles of Computer Systems
", ,0,"()Not offered regularly; consult department
Prereq: Permission of instructor
Units: 3-0-9
 Subject Cancelled 

Introduction to the basic principles of computer systems with emphasis on the use of rigorous techniques as an aid to understanding and building modern computing systems. Particular attention paid to concurrent and distributed systems. Topics include: specification and verification, concurrent algorithms, synchronization, naming, Networking, replication techniques (including distributed cache management), and principles and algorithms for achieving reliability.
M. F. Kaashoek, B. Lampson, N. B. Zeldovich

Computer Architecture"
Proficiency in C,"Students will gain proficiency in the C programming language, which is essential for low-level programming.","6.1903 Introduction to Low-level Programming in C and Assembly
(6.1900)
",1,Fall 2023,C Programming Skills,"6.1903 Introduction to Low-level Programming in C and Assembly
(6.1900)
", ,0,"(); second half of term
Prereq: 6.100A
Units: 2-2-2
Credit cannot also be received for 6.1904

Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, and how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.
J. D. Steinmeyer, S. Hanono Wachman"
Assembly language,"Students will learn assembly language, which will help them understand how high-level languages are translated to machine-level instructions.","6.1903 Introduction to Low-level Programming in C and Assembly
(6.1900)
",1,Fall 2023,Assembly language,"6.1903 Introduction to Low-level Programming in C and Assembly
(6.1900)
", ,0,"(); second half of term
Prereq: 6.100A
Units: 2-2-2
Credit cannot also be received for 6.1904

Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, and how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.
J. D. Steinmeyer, S. Hanono Wachman"
Memory management,"Students will learn about memory management, including how different data structures are stored in memory, the stack, and the heap.","6.1903 Introduction to Low-level Programming in C and Assembly
(6.1900)
",1,Fall 2023,Memory management,"6.1903 Introduction to Low-level Programming in C and Assembly
(6.1900)
", ,0,"(); second half of term
Prereq: 6.100A
Units: 2-2-2
Credit cannot also be received for 6.1904

Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, and how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.
J. D. Steinmeyer, S. Hanono Wachman"
Data structure manipulation,Students will develop skills in manipulating complex data structures in modern computational systems.,"6.1903 Introduction to Low-level Programming in C and Assembly
(6.1900)
",1,Fall 2023,Data Structures and Manipulation,"6.1903 Introduction to Low-level Programming in C and Assembly
(6.1900)
", ,0,"(); second half of term
Prereq: 6.100A
Units: 2-2-2
Credit cannot also be received for 6.1904

Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, and how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.
J. D. Steinmeyer, S. Hanono Wachman"
Problem-solving,"Through programming projects, students will enhance their problem-solving skills in the context of low-level programming.","6.1903 Introduction to Low-level Programming in C and Assembly
(6.1900)
",1,Fall 2023,Problem-solving,"6.1903 Introduction to Low-level Programming in C and Assembly
(6.1900)
", ,0,"(); second half of term
Prereq: 6.100A
Units: 2-2-2
Credit cannot also be received for 6.1904

Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, and how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.
J. D. Steinmeyer, S. Hanono Wachman"
C programming,"Students will gain proficiency in the C programming language, which is essential for low-level programming.","6.1904 Introduction to Low-level Programming in C and Assembly
(New)
",1,Fall 2023,C Programming Skills,"6.1904 Introduction to Low-level Programming in C and Assembly
(New)
", ,0,"(); second half of term
Prereq: 6.100A
Units: 2-2-2
Credit cannot also be received for 6.1903

Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, and how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.
J. D. Steinmeyer, S. Hanono Wachman"
Assembly language,"Students will learn assembly language, which is used to understand how high-level languages are translated to machine-level instructions.","6.1904 Introduction to Low-level Programming in C and Assembly
(New)
",1,Fall 2023,Assembly language,"6.1904 Introduction to Low-level Programming in C and Assembly
(New)
", ,0,"(); second half of term
Prereq: 6.100A
Units: 2-2-2
Credit cannot also be received for 6.1903

Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, and how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.
J. D. Steinmeyer, S. Hanono Wachman"
Memory management,"Students will develop skills in understanding how different data structures are stored in memory, including the stack and the heap.","6.1904 Introduction to Low-level Programming in C and Assembly
(New)
",1,Fall 2023,Memory management,"6.1904 Introduction to Low-level Programming in C and Assembly
(New)
", ,0,"(); second half of term
Prereq: 6.100A
Units: 2-2-2
Credit cannot also be received for 6.1903

Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, and how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.
J. D. Steinmeyer, S. Hanono Wachman"
Data structure manipulation,Students will learn how to manipulate complex data structures in modern computational systems.,"6.1904 Introduction to Low-level Programming in C and Assembly
(New)
",1,Fall 2023,Data Structures and Manipulation,"6.1904 Introduction to Low-level Programming in C and Assembly
(New)
", ,0,"(); second half of term
Prereq: 6.100A
Units: 2-2-2
Credit cannot also be received for 6.1903

Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, and how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.
J. D. Steinmeyer, S. Hanono Wachman"
Problem-solving,Students will enhance their problem-solving skills as they work on programming projects involving low-level programming.,"6.1904 Introduction to Low-level Programming in C and Assembly
(New)
",1,Fall 2023,Problem-solving,"6.1904 Introduction to Low-level Programming in C and Assembly
(New)
", ,0,"(); second half of term
Prereq: 6.100A
Units: 2-2-2
Credit cannot also be received for 6.1903

Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, and how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.
J. D. Steinmeyer, S. Hanono Wachman"
Hardware design,Students will learn how to design digital systems and computer architecture using a high-level hardware language.,"6.1910 Computation Structures
",1,Fall 2023,,"6.1910 Computation Structures
", ,0,"(, ) 
Prereq: Physics II (GIR), 6.100A, and (6.1900 or 6.9010)
Units: 4-0-8
Lecture: TR1 (32-123) Recitation: WF10 (34-301) or WF2 (34-304, 34-303) or WF3 (34-303) or WF10 (34-302) or WF11 (34-301, 36-112) or WF12 (35-310, 36-155) or WF1 (35-308, 36-155, 34-303)

Provides an introduction to the design of digital systems and computer architecture. Emphasizes expressing all hardware designs in a high-level hardware language and synthesizing the designs. Topics include combinational and sequential circuits, instruction set abstraction for programmable hardware, single-cycle and pipelined processor implementations, multi-level memory hierarchies, virtual memory, exceptions and I/O, and parallel systems.
S. Hanono WachmanNo textbook information available"
Synthesis,Students will gain proficiency in synthesizing hardware designs.,"6.1910 Computation Structures
",1,Fall 2023,Synthesis,"6.1910 Computation Structures
", ,0,"(, ) 
Prereq: Physics II (GIR), 6.100A, and (6.1900 or 6.9010)
Units: 4-0-8
Lecture: TR1 (32-123) Recitation: WF10 (34-301) or WF2 (34-304, 34-303) or WF3 (34-303) or WF10 (34-302) or WF11 (34-301, 36-112) or WF12 (35-310, 36-155) or WF1 (35-308, 36-155, 34-303)

Provides an introduction to the design of digital systems and computer architecture. Emphasizes expressing all hardware designs in a high-level hardware language and synthesizing the designs. Topics include combinational and sequential circuits, instruction set abstraction for programmable hardware, single-cycle and pipelined processor implementations, multi-level memory hierarchies, virtual memory, exceptions and I/O, and parallel systems.
S. Hanono WachmanNo textbook information available"
Combinational and sequential circuits,Students will learn how to design and manipulate combinational and sequential circuits.,"6.1910 Computation Structures
",1,Fall 2023,Combinational and sequential circuits,"6.1910 Computation Structures
", ,0,"(, ) 
Prereq: Physics II (GIR), 6.100A, and (6.1900 or 6.9010)
Units: 4-0-8
Lecture: TR1 (32-123) Recitation: WF10 (34-301) or WF2 (34-304, 34-303) or WF3 (34-303) or WF10 (34-302) or WF11 (34-301, 36-112) or WF12 (35-310, 36-155) or WF1 (35-308, 36-155, 34-303)

Provides an introduction to the design of digital systems and computer architecture. Emphasizes expressing all hardware designs in a high-level hardware language and synthesizing the designs. Topics include combinational and sequential circuits, instruction set abstraction for programmable hardware, single-cycle and pipelined processor implementations, multi-level memory hierarchies, virtual memory, exceptions and I/O, and parallel systems.
S. Hanono WachmanNo textbook information available"
Instruction set abstraction,Students will understand the concept of instruction set abstraction for programmable hardware.,"6.1910 Computation Structures
",1,Fall 2023,Instruction set abstraction,"6.1910 Computation Structures
", ,0,"(, ) 
Prereq: Physics II (GIR), 6.100A, and (6.1900 or 6.9010)
Units: 4-0-8
Lecture: TR1 (32-123) Recitation: WF10 (34-301) or WF2 (34-304, 34-303) or WF3 (34-303) or WF10 (34-302) or WF11 (34-301, 36-112) or WF12 (35-310, 36-155) or WF1 (35-308, 36-155, 34-303)

Provides an introduction to the design of digital systems and computer architecture. Emphasizes expressing all hardware designs in a high-level hardware language and synthesizing the designs. Topics include combinational and sequential circuits, instruction set abstraction for programmable hardware, single-cycle and pipelined processor implementations, multi-level memory hierarchies, virtual memory, exceptions and I/O, and parallel systems.
S. Hanono WachmanNo textbook information available"
Processor implementations,Students will learn about single-cycle and pipelined processor implementations.,"6.1910 Computation Structures
",1,Fall 2023,Processor implementations,"6.1910 Computation Structures
", ,0,"(, ) 
Prereq: Physics II (GIR), 6.100A, and (6.1900 or 6.9010)
Units: 4-0-8
Lecture: TR1 (32-123) Recitation: WF10 (34-301) or WF2 (34-304, 34-303) or WF3 (34-303) or WF10 (34-302) or WF11 (34-301, 36-112) or WF12 (35-310, 36-155) or WF1 (35-308, 36-155, 34-303)

Provides an introduction to the design of digital systems and computer architecture. Emphasizes expressing all hardware designs in a high-level hardware language and synthesizing the designs. Topics include combinational and sequential circuits, instruction set abstraction for programmable hardware, single-cycle and pipelined processor implementations, multi-level memory hierarchies, virtual memory, exceptions and I/O, and parallel systems.
S. Hanono WachmanNo textbook information available"
Hardware Design Language (HDL),Students will gain proficiency in using a modern HDL to design microprocessors.,"6.1920 Constructive Computer Architecture
",1,Fall 2023,Hardware Design Language (HDL),"6.1920 Constructive Computer Architecture
", ,0,"()
Prereq: 6.1910
Units: 3-8-1

Illustrates a constructive (as opposed to a descriptive) approach to computer architecture. Topics include combinational and pipelined arithmetic-logic units (ALU), in-order pipelined microarchitectures, branch prediction, blocking and unblocking caches, interrupts, virtual memory support, cache coherence and multicore architectures. Labs in a modern Hardware Design Language (HDL) illustrate various aspects of microprocessor design, culminating in a term project in which students present a multicore design running on an FPGA board.
Staff"
Microprocessor Design,Students will learn how to design and implement microprocessors.,"6.1920 Constructive Computer Architecture
",1,Fall 2023,Microprocessor Design,"6.1920 Constructive Computer Architecture
", ,0,"()
Prereq: 6.1910
Units: 3-8-1

Illustrates a constructive (as opposed to a descriptive) approach to computer architecture. Topics include combinational and pipelined arithmetic-logic units (ALU), in-order pipelined microarchitectures, branch prediction, blocking and unblocking caches, interrupts, virtual memory support, cache coherence and multicore architectures. Labs in a modern Hardware Design Language (HDL) illustrate various aspects of microprocessor design, culminating in a term project in which students present a multicore design running on an FPGA board.
Staff"
Combinational and Pipelined Arithmetic-Logic Units (ALU),Students will learn how to design and implement combinational and pipelined ALUs.,"6.1920 Constructive Computer Architecture
",1,Fall 2023,Combinational and Pipelined Arithmetic-Logic Units (ALU),"6.1920 Constructive Computer Architecture
", ,0,"()
Prereq: 6.1910
Units: 3-8-1

Illustrates a constructive (as opposed to a descriptive) approach to computer architecture. Topics include combinational and pipelined arithmetic-logic units (ALU), in-order pipelined microarchitectures, branch prediction, blocking and unblocking caches, interrupts, virtual memory support, cache coherence and multicore architectures. Labs in a modern Hardware Design Language (HDL) illustrate various aspects of microprocessor design, culminating in a term project in which students present a multicore design running on an FPGA board.
Staff"
Branch Prediction,Students will learn about branch prediction techniques used in computer architecture.,"6.1920 Constructive Computer Architecture
",1,Fall 2023,Branch Prediction,"6.1920 Constructive Computer Architecture
", ,0,"()
Prereq: 6.1910
Units: 3-8-1

Illustrates a constructive (as opposed to a descriptive) approach to computer architecture. Topics include combinational and pipelined arithmetic-logic units (ALU), in-order pipelined microarchitectures, branch prediction, blocking and unblocking caches, interrupts, virtual memory support, cache coherence and multicore architectures. Labs in a modern Hardware Design Language (HDL) illustrate various aspects of microprocessor design, culminating in a term project in which students present a multicore design running on an FPGA board.
Staff"
Cache Design,Students will learn about blocking and unblocking caches and their impact on performance.,"6.1920 Constructive Computer Architecture
",1,Fall 2023,Cache Design,"6.1920 Constructive Computer Architecture
", ,0,"()
Prereq: 6.1910
Units: 3-8-1

Illustrates a constructive (as opposed to a descriptive) approach to computer architecture. Topics include combinational and pipelined arithmetic-logic units (ALU), in-order pipelined microarchitectures, branch prediction, blocking and unblocking caches, interrupts, virtual memory support, cache coherence and multicore architectures. Labs in a modern Hardware Design Language (HDL) illustrate various aspects of microprocessor design, culminating in a term project in which students present a multicore design running on an FPGA board.
Staff"
Programming,Students will gain proficiency in programming languages and develop the ability to write code to accomplish specific tasks.,"6.5900 Computer System Architecture
",1,Fall 2023,Programming and Coding,"6.5900 Computer System Architecture
", ,0,"()
Prereq: 6.1910
Units: 4-0-8
Lecture: MW1-2.30 (32-141) Recitation: F1-2.30 (32-141)

Introduction to the principles underlying modern computer architecture. Emphasizes the relationship among technology, hardware organization, and programming systems in the evolution of computer architecture. Topics include pipelined, out-of-order, and speculative execution; caches, virtual memory and exception handling, superscalar, very long instruction word (VLIW), vector, and multithreaded processors; on-chip networks, memory models, synchronization, and cache coherence protocols for multiprocessors.
D. Sanchez MartinNo textbook information available"
Computer architecture,"Students will learn about the principles and concepts underlying modern computer architecture, including pipelined execution, caches, and memory models.","6.5900 Computer System Architecture
",1,Fall 2023,,"6.5900 Computer System Architecture
", ,0,"()
Prereq: 6.1910
Units: 4-0-8
Lecture: MW1-2.30 (32-141) Recitation: F1-2.30 (32-141)

Introduction to the principles underlying modern computer architecture. Emphasizes the relationship among technology, hardware organization, and programming systems in the evolution of computer architecture. Topics include pipelined, out-of-order, and speculative execution; caches, virtual memory and exception handling, superscalar, very long instruction word (VLIW), vector, and multithreaded processors; on-chip networks, memory models, synchronization, and cache coherence protocols for multiprocessors.
D. Sanchez MartinNo textbook information available"
Problem-solving,Students will develop the ability to analyze and solve complex problems related to computer architecture.,"6.5900 Computer System Architecture
",1,Fall 2023,Problem-solving,"6.5900 Computer System Architecture
", ,0,"()
Prereq: 6.1910
Units: 4-0-8
Lecture: MW1-2.30 (32-141) Recitation: F1-2.30 (32-141)

Introduction to the principles underlying modern computer architecture. Emphasizes the relationship among technology, hardware organization, and programming systems in the evolution of computer architecture. Topics include pipelined, out-of-order, and speculative execution; caches, virtual memory and exception handling, superscalar, very long instruction word (VLIW), vector, and multithreaded processors; on-chip networks, memory models, synchronization, and cache coherence protocols for multiprocessors.
D. Sanchez MartinNo textbook information available"
Data analysis,Students will learn how to analyze and interpret data related to computer architecture.,"6.5900 Computer System Architecture
",1,Fall 2023,Data Analysis and Research,"6.5900 Computer System Architecture
", ,0,"()
Prereq: 6.1910
Units: 4-0-8
Lecture: MW1-2.30 (32-141) Recitation: F1-2.30 (32-141)

Introduction to the principles underlying modern computer architecture. Emphasizes the relationship among technology, hardware organization, and programming systems in the evolution of computer architecture. Topics include pipelined, out-of-order, and speculative execution; caches, virtual memory and exception handling, superscalar, very long instruction word (VLIW), vector, and multithreaded processors; on-chip networks, memory models, synchronization, and cache coherence protocols for multiprocessors.
D. Sanchez MartinNo textbook information available"
Technical writing,Students will enhance their ability to effectively communicate technical concepts and ideas in written form.,"6.5900 Computer System Architecture
",1,Fall 2023,Technical writing,"6.5900 Computer System Architecture
", ,0,"()
Prereq: 6.1910
Units: 4-0-8
Lecture: MW1-2.30 (32-141) Recitation: F1-2.30 (32-141)

Introduction to the principles underlying modern computer architecture. Emphasizes the relationship among technology, hardware organization, and programming systems in the evolution of computer architecture. Topics include pipelined, out-of-order, and speculative execution; caches, virtual memory and exception handling, superscalar, very long instruction word (VLIW), vector, and multithreaded processors; on-chip networks, memory models, synchronization, and cache coherence protocols for multiprocessors.
D. Sanchez MartinNo textbook information available"
Hardware description languages,Students will learn how to use hardware description languages to design and implement large-scale digital systems.,"6.5910 Complex Digital Systems Design
",1,Fall 2023,Hardware description languages,"6.5910 Complex Digital Systems Design
", ,0,"()Not offered regularly; consult department
Prereq: 6.1910
Units: 5-5-2

Introduction to the design and implementation of large-scale digital systems using hardware description languages and high-level synthesis tools in conjunction with standard commercial electronic design automation (EDA) tools. Emphasizes modular and robust designs, reusable modules, correctness by construction, architectural exploration, meeting area and timing constraints, and developing functional field-programmable gate array (FPGA) prototypes. Extensive use of CAD tools in weekly labs serve as preparation for a multi-person design project on multi-million gate FPGAs. Enrollment may be limited.
Staff"
High-level synthesis tools,Students will gain proficiency in using high-level synthesis tools to optimize the design of digital systems.,"6.5910 Complex Digital Systems Design
",1,Fall 2023,High-level synthesis tools,"6.5910 Complex Digital Systems Design
", ,0,"()Not offered regularly; consult department
Prereq: 6.1910
Units: 5-5-2

Introduction to the design and implementation of large-scale digital systems using hardware description languages and high-level synthesis tools in conjunction with standard commercial electronic design automation (EDA) tools. Emphasizes modular and robust designs, reusable modules, correctness by construction, architectural exploration, meeting area and timing constraints, and developing functional field-programmable gate array (FPGA) prototypes. Extensive use of CAD tools in weekly labs serve as preparation for a multi-person design project on multi-million gate FPGAs. Enrollment may be limited.
Staff"
CAD tools,Students will develop proficiency in using CAD tools for designing and testing digital systems.,"6.5910 Complex Digital Systems Design
",1,Fall 2023,CAD tools,"6.5910 Complex Digital Systems Design
", ,0,"()Not offered regularly; consult department
Prereq: 6.1910
Units: 5-5-2

Introduction to the design and implementation of large-scale digital systems using hardware description languages and high-level synthesis tools in conjunction with standard commercial electronic design automation (EDA) tools. Emphasizes modular and robust designs, reusable modules, correctness by construction, architectural exploration, meeting area and timing constraints, and developing functional field-programmable gate array (FPGA) prototypes. Extensive use of CAD tools in weekly labs serve as preparation for a multi-person design project on multi-million gate FPGAs. Enrollment may be limited.
Staff"
FPGA prototypes,Students will learn how to develop functional field-programmable gate array (FPGA) prototypes.,"6.5910 Complex Digital Systems Design
",1,Fall 2023,FPGA prototypes,"6.5910 Complex Digital Systems Design
", ,0,"()Not offered regularly; consult department
Prereq: 6.1910
Units: 5-5-2

Introduction to the design and implementation of large-scale digital systems using hardware description languages and high-level synthesis tools in conjunction with standard commercial electronic design automation (EDA) tools. Emphasizes modular and robust designs, reusable modules, correctness by construction, architectural exploration, meeting area and timing constraints, and developing functional field-programmable gate array (FPGA) prototypes. Extensive use of CAD tools in weekly labs serve as preparation for a multi-person design project on multi-million gate FPGAs. Enrollment may be limited.
Staff"
Multi-person design project,"Students will gain experience in working on a multi-person design project, which will enhance their teamwork and collaboration skills.","6.5910 Complex Digital Systems Design
",1,Fall 2023,Multi-person design project,"6.5910 Complex Digital Systems Design
", ,0,"()Not offered regularly; consult department
Prereq: 6.1910
Units: 5-5-2

Introduction to the design and implementation of large-scale digital systems using hardware description languages and high-level synthesis tools in conjunction with standard commercial electronic design automation (EDA) tools. Emphasizes modular and robust designs, reusable modules, correctness by construction, architectural exploration, meeting area and timing constraints, and developing functional field-programmable gate array (FPGA) prototypes. Extensive use of CAD tools in weekly labs serve as preparation for a multi-person design project on multi-million gate FPGAs. Enrollment may be limited.
Staff"
Parallel programming,Students will learn how to write code that can be executed in parallel on multicore processors.,"6.5920 Parallel Computing
",1,Fall 2023,Parallel Computing,"6.5920 Parallel Computing
", ,0,"()Not offered regularly; consult department
Prereq: 6.1910 or permission of instructor
Units: 3-0-9

Introduction to parallel and multicore computer architecture and programming. Topics include the design and implementation of multicore processors; networking, video, continuum, particle and graph applications for multicores; communication and synchronization algorithms and mechanisms; locality in parallel computations; computational models, including shared memory, streams, message passing, and data parallel; multicore mechanisms for synchronization, cache coherence, and multithreading. Performance evaluation of multicores; compilation and runtime systems for parallel computing. Substantial project required.
Staff"
Performance evaluation,Students will gain the ability to evaluate the performance of multicore processors and parallel computing systems.,"6.5920 Parallel Computing
",1,Fall 2023,Performance Analysis and Optimization,"6.5920 Parallel Computing
", ,0,"()Not offered regularly; consult department
Prereq: 6.1910 or permission of instructor
Units: 3-0-9

Introduction to parallel and multicore computer architecture and programming. Topics include the design and implementation of multicore processors; networking, video, continuum, particle and graph applications for multicores; communication and synchronization algorithms and mechanisms; locality in parallel computations; computational models, including shared memory, streams, message passing, and data parallel; multicore mechanisms for synchronization, cache coherence, and multithreading. Performance evaluation of multicores; compilation and runtime systems for parallel computing. Substantial project required.
Staff"
Compilation,Students will develop the skill of compiling code for parallel computing.,"6.5920 Parallel Computing
",1,Fall 2023,Compilation,"6.5920 Parallel Computing
", ,0,"()Not offered regularly; consult department
Prereq: 6.1910 or permission of instructor
Units: 3-0-9

Introduction to parallel and multicore computer architecture and programming. Topics include the design and implementation of multicore processors; networking, video, continuum, particle and graph applications for multicores; communication and synchronization algorithms and mechanisms; locality in parallel computations; computational models, including shared memory, streams, message passing, and data parallel; multicore mechanisms for synchronization, cache coherence, and multithreading. Performance evaluation of multicores; compilation and runtime systems for parallel computing. Substantial project required.
Staff"
Synchronization algorithms,Students will learn various algorithms and techniques for synchronizing parallel computations.,"6.5920 Parallel Computing
",1,Fall 2023,,"6.5920 Parallel Computing
", ,0,"()Not offered regularly; consult department
Prereq: 6.1910 or permission of instructor
Units: 3-0-9

Introduction to parallel and multicore computer architecture and programming. Topics include the design and implementation of multicore processors; networking, video, continuum, particle and graph applications for multicores; communication and synchronization algorithms and mechanisms; locality in parallel computations; computational models, including shared memory, streams, message passing, and data parallel; multicore mechanisms for synchronization, cache coherence, and multithreading. Performance evaluation of multicores; compilation and runtime systems for parallel computing. Substantial project required.
Staff"
Cache coherence,Students will gain knowledge and skills related to maintaining cache coherence in multicore processors.,"6.5920 Parallel Computing
",1,Fall 2023,Cache coherence,"6.5920 Parallel Computing
", ,0,"()Not offered regularly; consult department
Prereq: 6.1910 or permission of instructor
Units: 3-0-9

Introduction to parallel and multicore computer architecture and programming. Topics include the design and implementation of multicore processors; networking, video, continuum, particle and graph applications for multicores; communication and synchronization algorithms and mechanisms; locality in parallel computations; computational models, including shared memory, streams, message passing, and data parallel; multicore mechanisms for synchronization, cache coherence, and multithreading. Performance evaluation of multicores; compilation and runtime systems for parallel computing. Substantial project required.
Staff"
Hardware architecture design,Students will learn how to design efficient hardware architectures for deep learning algorithms and tensor algebra in AI systems.,"6.5930 Hardware Architecture for Deep Learning
",1,Fall 2023,Computer and Hardware Architecture,"6.5930 Hardware Architecture for Deep Learning
", ,0,"()
(Subject meets with 6.5931)
Prereq: 6.1910 and (6.3000 or 6.3900)
Units: 3-3-6

Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.
V. Sze, J. Emer"
Modeling and analysis,Students will gain proficiency in modeling and analyzing hardware architectures.,"6.5930 Hardware Architecture for Deep Learning
",1,Fall 2023,Modeling,"6.5930 Hardware Architecture for Deep Learning
", ,0,"()
(Subject meets with 6.5931)
Prereq: 6.1910 and (6.3000 or 6.3900)
Units: 3-3-6

Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.
V. Sze, J. Emer"
Programming,Students will develop programming skills to optimize deep learning algorithms for programmable platforms.,"6.5930 Hardware Architecture for Deep Learning
",1,Fall 2023,Programming and Coding,"6.5930 Hardware Architecture for Deep Learning
", ,0,"()
(Subject meets with 6.5931)
Prereq: 6.1910 and (6.3000 or 6.3900)
Units: 3-3-6

Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.
V. Sze, J. Emer"
Co-optimization,"Students will learn how to co-optimize algorithms and hardware, including sparsity, to improve the efficiency of deep learning systems.","6.5930 Hardware Architecture for Deep Learning
",1,Fall 2023,Co-optimization,"6.5930 Hardware Architecture for Deep Learning
", ,0,"()
(Subject meets with 6.5931)
Prereq: 6.1910 and (6.3000 or 6.3900)
Units: 3-3-6

Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.
V. Sze, J. Emer"
Use of advanced technologies,Students will learn about the use of advanced technologies such as memristors and optical computing in hardware architectures for deep learning.,"6.5930 Hardware Architecture for Deep Learning
",1,Fall 2023,Use of advanced technologies,"6.5930 Hardware Architecture for Deep Learning
", ,0,"()
(Subject meets with 6.5931)
Prereq: 6.1910 and (6.3000 or 6.3900)
Units: 3-3-6

Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.
V. Sze, J. Emer"
Hardware architecture design,Students will learn how to design hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems.,"6.5931 Hardware Architecture for Deep Learning
",1,Fall 2023,Computer and Hardware Architecture,"6.5931 Hardware Architecture for Deep Learning
", ,0,"()
(Subject meets with 6.5930)
Prereq: 6.1910 and (6.3000 or 6.3900)
Units: 3-3-6

Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.
V. Sze, J. Emer"
Algorithm and hardware co-optimization,Students will gain the skill of optimizing algorithms and hardware to achieve efficient processing in deep learning systems.,"6.5931 Hardware Architecture for Deep Learning
",1,Fall 2023,Algorithm and hardware co-optimization,"6.5931 Hardware Architecture for Deep Learning
", ,0,"()
(Subject meets with 6.5930)
Prereq: 6.1910 and (6.3000 or 6.3900)
Units: 3-3-6

Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.
V. Sze, J. Emer"
Modeling and analysis,Students will develop the skill of modeling and analyzing hardware architectures for deep learning systems.,"6.5931 Hardware Architecture for Deep Learning
",1,Fall 2023,Modeling,"6.5931 Hardware Architecture for Deep Learning
", ,0,"()
(Subject meets with 6.5930)
Prereq: 6.1910 and (6.3000 or 6.3900)
Units: 3-3-6

Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.
V. Sze, J. Emer"
Deep learning inference system architecture,Students will learn how to architect deep learning inference systems.,"6.5931 Hardware Architecture for Deep Learning
",1,Fall 2023,Deep learning inference system architecture,"6.5931 Hardware Architecture for Deep Learning
", ,0,"()
(Subject meets with 6.5930)
Prereq: 6.1910 and (6.3000 or 6.3900)
Units: 3-3-6

Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.
V. Sze, J. Emer"
Open-ended design project,Students will have the opportunity to apply their skills and knowledge in a real-world design project.,"6.5931 Hardware Architecture for Deep Learning
",1,Fall 2023,Open-ended design project,"6.5931 Hardware Architecture for Deep Learning
", ,0,"()
(Subject meets with 6.5930)
Prereq: 6.1910 and (6.3000 or 6.3900)
Units: 3-3-6

Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.
V. Sze, J. Emer"
Deep learning computing techniques,"Students will gain proficiency in efficient deep learning computing techniques, such as model compression, pruning, quantization, and neural architecture search.","6.5940 TinyML and Efficient Deep Learning Computing
(New)
",1,Fall 2023,Computational Techniques and Methods,"6.5940 TinyML and Efficient Deep Learning Computing
(New)
", ,0,"()
Prereq: 6.1910 and 6.3900
Units: 3-0-9
Lecture: TR3.30-5 (36-156)

Introduces efficient deep learning computing techniques that enable powerful deep learning applications on resource-constrained devices. Topics include model compression, pruning, quantization, neural architecture search, distributed training, data/model parallellism, gradient compression, on-device fine-tuning. It also introduces application-specific acceleration techniques for video recognition, point cloud, and generative AI (diffusion model, LLM). Students will get hands-on experience accelerating deep learning applications with an open-ended design project.
S. HanNo textbook information available

Artificial Intelligence"
Data/model parallelism,Students will learn how to parallelize data and models in deep learning applications to improve efficiency and performance.,"6.5940 TinyML and Efficient Deep Learning Computing
(New)
",1,Fall 2023,Data/model parallelism,"6.5940 TinyML and Efficient Deep Learning Computing
(New)
", ,0,"()
Prereq: 6.1910 and 6.3900
Units: 3-0-9
Lecture: TR3.30-5 (36-156)

Introduces efficient deep learning computing techniques that enable powerful deep learning applications on resource-constrained devices. Topics include model compression, pruning, quantization, neural architecture search, distributed training, data/model parallellism, gradient compression, on-device fine-tuning. It also introduces application-specific acceleration techniques for video recognition, point cloud, and generative AI (diffusion model, LLM). Students will get hands-on experience accelerating deep learning applications with an open-ended design project.
S. HanNo textbook information available

Artificial Intelligence"
Gradient compression,Students will develop the skill of compressing gradients in deep learning models to reduce memory usage and communication overhead.,"6.5940 TinyML and Efficient Deep Learning Computing
(New)
",1,Fall 2023,Gradient compression,"6.5940 TinyML and Efficient Deep Learning Computing
(New)
", ,0,"()
Prereq: 6.1910 and 6.3900
Units: 3-0-9
Lecture: TR3.30-5 (36-156)

Introduces efficient deep learning computing techniques that enable powerful deep learning applications on resource-constrained devices. Topics include model compression, pruning, quantization, neural architecture search, distributed training, data/model parallellism, gradient compression, on-device fine-tuning. It also introduces application-specific acceleration techniques for video recognition, point cloud, and generative AI (diffusion model, LLM). Students will get hands-on experience accelerating deep learning applications with an open-ended design project.
S. HanNo textbook information available

Artificial Intelligence"
On-device fine-tuning,"Students will learn how to fine-tune deep learning models on resource-constrained devices, enhancing their ability to optimize models for specific applications.","6.5940 TinyML and Efficient Deep Learning Computing
(New)
",1,Fall 2023,On-device fine-tuning,"6.5940 TinyML and Efficient Deep Learning Computing
(New)
", ,0,"()
Prereq: 6.1910 and 6.3900
Units: 3-0-9
Lecture: TR3.30-5 (36-156)

Introduces efficient deep learning computing techniques that enable powerful deep learning applications on resource-constrained devices. Topics include model compression, pruning, quantization, neural architecture search, distributed training, data/model parallellism, gradient compression, on-device fine-tuning. It also introduces application-specific acceleration techniques for video recognition, point cloud, and generative AI (diffusion model, LLM). Students will get hands-on experience accelerating deep learning applications with an open-ended design project.
S. HanNo textbook information available

Artificial Intelligence"
Application-specific acceleration techniques,"Students will acquire knowledge and skills in accelerating deep learning applications for video recognition, point cloud processing, and generative AI using techniques such as diffusion models and LLM.","6.5940 TinyML and Efficient Deep Learning Computing
(New)
",1,Fall 2023,Application-specific acceleration techniques,"6.5940 TinyML and Efficient Deep Learning Computing
(New)
", ,0,"()
Prereq: 6.1910 and 6.3900
Units: 3-0-9
Lecture: TR3.30-5 (36-156)

Introduces efficient deep learning computing techniques that enable powerful deep learning applications on resource-constrained devices. Topics include model compression, pruning, quantization, neural architecture search, distributed training, data/model parallellism, gradient compression, on-device fine-tuning. It also introduces application-specific acceleration techniques for video recognition, point cloud, and generative AI (diffusion model, LLM). Students will get hands-on experience accelerating deep learning applications with an open-ended design project.
S. HanNo textbook information available

Artificial Intelligence"
Rule chaining,Students will learn how to apply rule chaining to solve problems in computational applications.,"6.4100 Artificial Intelligence
",1,Fall 2023,Rule chaining,"6.4100 Artificial Intelligence
", ,0,"()Not offered regularly; consult department
Prereq: 6.100A
Units: 4-3-5

Introduces representations, methods, and architectures used to build applications and to account for human intelligence from a computational point of view. Covers applications of rule chaining, constraint propagation, constrained search, inheritance, statistical inference, and other problem-solving paradigms. Also addresses applications of identification trees, neural nets, genetic algorithms, support-vector machines, boosting, and other learning paradigms. Considers what separates human intelligence from that of other animals.
Consult Department"
Constraint propagation,Students will gain proficiency in using constraint propagation to solve complex computational problems.,"6.4100 Artificial Intelligence
",1,Fall 2023,Constraint propagation,"6.4100 Artificial Intelligence
", ,0,"()Not offered regularly; consult department
Prereq: 6.100A
Units: 4-3-5

Introduces representations, methods, and architectures used to build applications and to account for human intelligence from a computational point of view. Covers applications of rule chaining, constraint propagation, constrained search, inheritance, statistical inference, and other problem-solving paradigms. Also addresses applications of identification trees, neural nets, genetic algorithms, support-vector machines, boosting, and other learning paradigms. Considers what separates human intelligence from that of other animals.
Consult Department"
Statistical inference,Students will develop the skill of statistical inference and its application in problem-solving paradigms.,"6.4100 Artificial Intelligence
",1,Fall 2023,,"6.4100 Artificial Intelligence
", ,0,"()Not offered regularly; consult department
Prereq: 6.100A
Units: 4-3-5

Introduces representations, methods, and architectures used to build applications and to account for human intelligence from a computational point of view. Covers applications of rule chaining, constraint propagation, constrained search, inheritance, statistical inference, and other problem-solving paradigms. Also addresses applications of identification trees, neural nets, genetic algorithms, support-vector machines, boosting, and other learning paradigms. Considers what separates human intelligence from that of other animals.
Consult Department"
Neural nets,Students will learn about neural nets and how to use them in building applications and solving computational problems.,"6.4100 Artificial Intelligence
",1,Fall 2023,,"6.4100 Artificial Intelligence
", ,0,"()Not offered regularly; consult department
Prereq: 6.100A
Units: 4-3-5

Introduces representations, methods, and architectures used to build applications and to account for human intelligence from a computational point of view. Covers applications of rule chaining, constraint propagation, constrained search, inheritance, statistical inference, and other problem-solving paradigms. Also addresses applications of identification trees, neural nets, genetic algorithms, support-vector machines, boosting, and other learning paradigms. Considers what separates human intelligence from that of other animals.
Consult Department"
Genetic algorithms,Students will acquire the skill of using genetic algorithms to solve optimization problems in computational applications.,"6.4100 Artificial Intelligence
",1,Fall 2023,Genetic algorithms,"6.4100 Artificial Intelligence
", ,0,"()Not offered regularly; consult department
Prereq: 6.100A
Units: 4-3-5

Introduces representations, methods, and architectures used to build applications and to account for human intelligence from a computational point of view. Covers applications of rule chaining, constraint propagation, constrained search, inheritance, statistical inference, and other problem-solving paradigms. Also addresses applications of identification trees, neural nets, genetic algorithms, support-vector machines, boosting, and other learning paradigms. Considers what separates human intelligence from that of other animals.
Consult Department"
Statistical inference,Students will learn how to analyze and interpret data using statistical inference techniques.,"6.4102 Artificial Intelligence
",1,Fall 2023,Statistical Concepts,"6.4102 Artificial Intelligence
", ,0,"()Not offered regularly; consult department
Prereq: 6.100A
Units: 4-3-5

Introduces representations, methods, and architectures used to build applications and to account for human intelligence from a computational point of view. Covers applications of rule chaining, constraint propagation, constrained search, inheritance, statistical inference, and other problem-solving paradigms. Also addresses applications of identification trees, neural nets, genetic algorithms, support-vector machines, boosting, and other learning paradigms. Considers what separates human intelligence from that of other animals. Students taking  graduate version complete additional assignments.
Consult Department"
Problem-solving paradigms,Students will develop the ability to apply problem-solving paradigms in various scenarios.,"6.4102 Artificial Intelligence
",1,Fall 2023,,"6.4102 Artificial Intelligence
", ,0,"()Not offered regularly; consult department
Prereq: 6.100A
Units: 4-3-5

Introduces representations, methods, and architectures used to build applications and to account for human intelligence from a computational point of view. Covers applications of rule chaining, constraint propagation, constrained search, inheritance, statistical inference, and other problem-solving paradigms. Also addresses applications of identification trees, neural nets, genetic algorithms, support-vector machines, boosting, and other learning paradigms. Considers what separates human intelligence from that of other animals. Students taking  graduate version complete additional assignments.
Consult Department"
Rule chaining,Students will gain proficiency in using rule chaining techniques to solve complex problems.,"6.4102 Artificial Intelligence
",1,Fall 2023,Rule chaining,"6.4102 Artificial Intelligence
", ,0,"()Not offered regularly; consult department
Prereq: 6.100A
Units: 4-3-5

Introduces representations, methods, and architectures used to build applications and to account for human intelligence from a computational point of view. Covers applications of rule chaining, constraint propagation, constrained search, inheritance, statistical inference, and other problem-solving paradigms. Also addresses applications of identification trees, neural nets, genetic algorithms, support-vector machines, boosting, and other learning paradigms. Considers what separates human intelligence from that of other animals. Students taking  graduate version complete additional assignments.
Consult Department"
Neural nets,Students will learn about neural networks and their application in solving computational problems.,"6.4102 Artificial Intelligence
",1,Fall 2023,Artificial Intelligence,"6.4102 Artificial Intelligence
", ,0,"()Not offered regularly; consult department
Prereq: 6.100A
Units: 4-3-5

Introduces representations, methods, and architectures used to build applications and to account for human intelligence from a computational point of view. Covers applications of rule chaining, constraint propagation, constrained search, inheritance, statistical inference, and other problem-solving paradigms. Also addresses applications of identification trees, neural nets, genetic algorithms, support-vector machines, boosting, and other learning paradigms. Considers what separates human intelligence from that of other animals. Students taking  graduate version complete additional assignments.
Consult Department"
Genetic algorithms,Students will gain knowledge and skills in using genetic algorithms for optimization and problem-solving.,"6.4102 Artificial Intelligence
",1,Fall 2023,Genetic algorithms,"6.4102 Artificial Intelligence
", ,0,"()Not offered regularly; consult department
Prereq: 6.100A
Units: 4-3-5

Introduces representations, methods, and architectures used to build applications and to account for human intelligence from a computational point of view. Covers applications of rule chaining, constraint propagation, constrained search, inheritance, statistical inference, and other problem-solving paradigms. Also addresses applications of identification trees, neural nets, genetic algorithms, support-vector machines, boosting, and other learning paradigms. Considers what separates human intelligence from that of other animals. Students taking  graduate version complete additional assignments.
Consult Department"
Constraint satisfaction,Students will learn how to handle and manipulate constraints in order to solve discrete and continuous problems in artificial intelligence.,"6.4110 Representation, Inference, and Reasoning in AI
",1,Fall 2023,Constraint satisfaction,"6.4110 Representation, Inference, and Reasoning in AI
", ,0,"()
(Subject meets with 16.420)
Prereq: (16.09 and 16.410) or (6.1010, 6.1210, and (6.3700 or 6.3800))
Units: 3-0-9
Lecture: MW9.30-11 (4-370) +final

An introduction to representations and algorithms for artificial intelligence. Topics covered include: constraint satisfaction in discrete and continuous problems, logical representation and inference, Monte Carlo tree search, probabilistic graphical models and inference, planning in discrete and continuous deterministic and probabilistic models including MDPs and POMDPs.
L. KaelblingTextbooks (Fall 2023)"
Logical representation and inference,Students will develop the ability to manipulate logical representations and perform logical inference to reason in AI.,"6.4110 Representation, Inference, and Reasoning in AI
",1,Fall 2023,Logical representation and inference,"6.4110 Representation, Inference, and Reasoning in AI
", ,0,"()
(Subject meets with 16.420)
Prereq: (16.09 and 16.410) or (6.1010, 6.1210, and (6.3700 or 6.3800))
Units: 3-0-9
Lecture: MW9.30-11 (4-370) +final

An introduction to representations and algorithms for artificial intelligence. Topics covered include: constraint satisfaction in discrete and continuous problems, logical representation and inference, Monte Carlo tree search, probabilistic graphical models and inference, planning in discrete and continuous deterministic and probabilistic models including MDPs and POMDPs.
L. KaelblingTextbooks (Fall 2023)"
Monte Carlo tree search,Students will gain proficiency in using Monte Carlo tree search algorithms for decision-making in AI.,"6.4110 Representation, Inference, and Reasoning in AI
",1,Fall 2023,Monte Carlo tree search,"6.4110 Representation, Inference, and Reasoning in AI
", ,0,"()
(Subject meets with 16.420)
Prereq: (16.09 and 16.410) or (6.1010, 6.1210, and (6.3700 or 6.3800))
Units: 3-0-9
Lecture: MW9.30-11 (4-370) +final

An introduction to representations and algorithms for artificial intelligence. Topics covered include: constraint satisfaction in discrete and continuous problems, logical representation and inference, Monte Carlo tree search, probabilistic graphical models and inference, planning in discrete and continuous deterministic and probabilistic models including MDPs and POMDPs.
L. KaelblingTextbooks (Fall 2023)"
Probabilistic graphical models and inference,Students will learn how to handle and manipulate probabilistic graphical models and perform inference to reason under uncertainty in AI.,"6.4110 Representation, Inference, and Reasoning in AI
",1,Fall 2023,,"6.4110 Representation, Inference, and Reasoning in AI
", ,0,"()
(Subject meets with 16.420)
Prereq: (16.09 and 16.410) or (6.1010, 6.1210, and (6.3700 or 6.3800))
Units: 3-0-9
Lecture: MW9.30-11 (4-370) +final

An introduction to representations and algorithms for artificial intelligence. Topics covered include: constraint satisfaction in discrete and continuous problems, logical representation and inference, Monte Carlo tree search, probabilistic graphical models and inference, planning in discrete and continuous deterministic and probabilistic models including MDPs and POMDPs.
L. KaelblingTextbooks (Fall 2023)"
Planning,"Students will develop the ability to plan and make decisions in discrete and continuous deterministic and probabilistic models, including Markov Decision Processes (MDPs) and Partially Observable Markov Decision Processes (POMDPs).","6.4110 Representation, Inference, and Reasoning in AI
",1,Fall 2023,Planning,"6.4110 Representation, Inference, and Reasoning in AI
", ,0,"()
(Subject meets with 16.420)
Prereq: (16.09 and 16.410) or (6.1010, 6.1210, and (6.3700 or 6.3800))
Units: 3-0-9
Lecture: MW9.30-11 (4-370) +final

An introduction to representations and algorithms for artificial intelligence. Topics covered include: constraint satisfaction in discrete and continuous problems, logical representation and inference, Monte Carlo tree search, probabilistic graphical models and inference, planning in discrete and continuous deterministic and probabilistic models including MDPs and POMDPs.
L. KaelblingTextbooks (Fall 2023)"
Probabilistic graphical models,"Students will gain proficiency in understanding and working with probabilistic graphical models, which are used to represent and reason about uncertainty in complex systems.","6.4120[J] Computational Cognitive Science
",1,Fall 2023,Statistical Modeling,"6.4120[J] Computational Cognitive Science
", ,0,"()
(Same subject as 9.66[J])(Subject meets with 9.660)
Prereq: 6.3700, 6.3800, 9.40, 18.05, 6.3900, or permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (46-3002)

Introduction to computational theories of human cognition. Focus on principles of inductive learning and inference, and the representation of knowledge. Computational frameworks covered include Bayesian and hierarchical Bayesian models; probabilistic graphical models; nonparametric statistical models and the Bayesian Occam's razor; sampling algorithms for approximate learning and inference; and probabilistic models defined over structured representations such as first-order logic, grammars, or relational schemas. Applications to understanding core aspects of cognition, such as concept learning and categorization, causal reasoning, theory formation, language acquisition, and social inference. Graduate students complete a final project.
J. TenenbaumNo textbook information available"
Sampling algorithms,Students will learn about sampling algorithms used for approximate learning and inference in probabilistic models.,"6.4120[J] Computational Cognitive Science
",1,Fall 2023,Sampling algorithms,"6.4120[J] Computational Cognitive Science
", ,0,"()
(Same subject as 9.66[J])(Subject meets with 9.660)
Prereq: 6.3700, 6.3800, 9.40, 18.05, 6.3900, or permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (46-3002)

Introduction to computational theories of human cognition. Focus on principles of inductive learning and inference, and the representation of knowledge. Computational frameworks covered include Bayesian and hierarchical Bayesian models; probabilistic graphical models; nonparametric statistical models and the Bayesian Occam's razor; sampling algorithms for approximate learning and inference; and probabilistic models defined over structured representations such as first-order logic, grammars, or relational schemas. Applications to understanding core aspects of cognition, such as concept learning and categorization, causal reasoning, theory formation, language acquisition, and social inference. Graduate students complete a final project.
J. TenenbaumNo textbook information available"
Nonparametric statistical models,"Students will develop skills in working with nonparametric statistical models, which allow for flexible and adaptive modeling of data.","6.4120[J] Computational Cognitive Science
",1,Fall 2023,Nonparametric statistical models,"6.4120[J] Computational Cognitive Science
", ,0,"()
(Same subject as 9.66[J])(Subject meets with 9.660)
Prereq: 6.3700, 6.3800, 9.40, 18.05, 6.3900, or permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (46-3002)

Introduction to computational theories of human cognition. Focus on principles of inductive learning and inference, and the representation of knowledge. Computational frameworks covered include Bayesian and hierarchical Bayesian models; probabilistic graphical models; nonparametric statistical models and the Bayesian Occam's razor; sampling algorithms for approximate learning and inference; and probabilistic models defined over structured representations such as first-order logic, grammars, or relational schemas. Applications to understanding core aspects of cognition, such as concept learning and categorization, causal reasoning, theory formation, language acquisition, and social inference. Graduate students complete a final project.
J. TenenbaumNo textbook information available"
First-order logic,Students will learn about first-order logic and its use in representing structured knowledge.,"6.4120[J] Computational Cognitive Science
",1,Fall 2023,First-order logic,"6.4120[J] Computational Cognitive Science
", ,0,"()
(Same subject as 9.66[J])(Subject meets with 9.660)
Prereq: 6.3700, 6.3800, 9.40, 18.05, 6.3900, or permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (46-3002)

Introduction to computational theories of human cognition. Focus on principles of inductive learning and inference, and the representation of knowledge. Computational frameworks covered include Bayesian and hierarchical Bayesian models; probabilistic graphical models; nonparametric statistical models and the Bayesian Occam's razor; sampling algorithms for approximate learning and inference; and probabilistic models defined over structured representations such as first-order logic, grammars, or relational schemas. Applications to understanding core aspects of cognition, such as concept learning and categorization, causal reasoning, theory formation, language acquisition, and social inference. Graduate students complete a final project.
J. TenenbaumNo textbook information available"
Programming,Students will develop programming skills as they work on computational projects and implement the concepts learned in the course.,"6.4120[J] Computational Cognitive Science
",1,Fall 2023,Programming and Coding,"6.4120[J] Computational Cognitive Science
", ,0,"()
(Same subject as 9.66[J])(Subject meets with 9.660)
Prereq: 6.3700, 6.3800, 9.40, 18.05, 6.3900, or permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (46-3002)

Introduction to computational theories of human cognition. Focus on principles of inductive learning and inference, and the representation of knowledge. Computational frameworks covered include Bayesian and hierarchical Bayesian models; probabilistic graphical models; nonparametric statistical models and the Bayesian Occam's razor; sampling algorithms for approximate learning and inference; and probabilistic models defined over structured representations such as first-order logic, grammars, or relational schemas. Applications to understanding core aspects of cognition, such as concept learning and categorization, causal reasoning, theory formation, language acquisition, and social inference. Graduate students complete a final project.
J. TenenbaumNo textbook information available"
Programming,"Students will gain proficiency in programming, specifically in the areas of logical, temporal, and finite domain constraints, graphical models, linear and integer programs, search, inference, and conflict-learning.","6.4130[J] Principles of Autonomy and Decision Making
",1,Fall 2023,Programming and Coding,"6.4130[J] Principles of Autonomy and Decision Making
", ,0,"()
(Same subject as 16.410[J])(Subject meets with 6.4132[J], 16.413[J])
Prereq: 6.100B or 6.9080
Units: 4-0-8
Lecture: MW9.30-11 (32-141) Recitation: F10 (33-319) or F3 (33-319) +final

Surveys decision making methods used to create highly autonomous systems and decision aids. Applies models, principles and algorithms taken from artificial intelligence and operations research. Focuses on planning as state-space search, including uninformed, informed and stochastic search, activity and motion planning, probabilistic and adversarial planning, Markov models and decision processes, and Bayesian filtering. Also emphasizes planning with real-world constraints using constraint programming. Includes methods for satisfiability and optimization of logical, temporal and finite domain constraints, graphical models, and linear and integer programs, as well as methods for search, inference, and conflict-learning. Students taking graduate version complete additional assignments.
B.C. WilliamsNo textbook information available"
SQL,Students will learn and apply SQL (Structured Query Language) for database manipulation and querying.,"6.4130[J] Principles of Autonomy and Decision Making
",1,Fall 2023,SQL,"6.4130[J] Principles of Autonomy and Decision Making
", ,0,"()
(Same subject as 16.410[J])(Subject meets with 6.4132[J], 16.413[J])
Prereq: 6.100B or 6.9080
Units: 4-0-8
Lecture: MW9.30-11 (32-141) Recitation: F10 (33-319) or F3 (33-319) +final

Surveys decision making methods used to create highly autonomous systems and decision aids. Applies models, principles and algorithms taken from artificial intelligence and operations research. Focuses on planning as state-space search, including uninformed, informed and stochastic search, activity and motion planning, probabilistic and adversarial planning, Markov models and decision processes, and Bayesian filtering. Also emphasizes planning with real-world constraints using constraint programming. Includes methods for satisfiability and optimization of logical, temporal and finite domain constraints, graphical models, and linear and integer programs, as well as methods for search, inference, and conflict-learning. Students taking graduate version complete additional assignments.
B.C. WilliamsNo textbook information available"
XML,Students will learn about XML (eXtensible Markup Language) and its use in databases and decision-making processes.,"6.4130[J] Principles of Autonomy and Decision Making
",1,Fall 2023,XML,"6.4130[J] Principles of Autonomy and Decision Making
", ,0,"()
(Same subject as 16.410[J])(Subject meets with 6.4132[J], 16.413[J])
Prereq: 6.100B or 6.9080
Units: 4-0-8
Lecture: MW9.30-11 (32-141) Recitation: F10 (33-319) or F3 (33-319) +final

Surveys decision making methods used to create highly autonomous systems and decision aids. Applies models, principles and algorithms taken from artificial intelligence and operations research. Focuses on planning as state-space search, including uninformed, informed and stochastic search, activity and motion planning, probabilistic and adversarial planning, Markov models and decision processes, and Bayesian filtering. Also emphasizes planning with real-world constraints using constraint programming. Includes methods for satisfiability and optimization of logical, temporal and finite domain constraints, graphical models, and linear and integer programs, as well as methods for search, inference, and conflict-learning. Students taking graduate version complete additional assignments.
B.C. WilliamsNo textbook information available"
Programming,"Students will gain proficiency in programming, specifically in the areas of logical, temporal, and finite domain constraints, graphical models, linear and integer programs, search, inference, and conflict-learning.","6.4132[J] Principles of Autonomy and Decision Making
",1,Fall 2023,Programming and Coding,"6.4132[J] Principles of Autonomy and Decision Making
", ,0,"()
(Same subject as 16.413[J])(Subject meets with 6.4130[J], 16.410[J])
Prereq: 6.100B, 6.9080, or permission of instructor
Units: 3-0-9
Lecture: MW9.30-11 (32-141) +final

Surveys decision making methods used to create highly autonomous systems and decision aids. Applies models, principles and algorithms taken from artificial intelligence and operations research. Focuses on planning as state-space search, including uninformed, informed and stochastic search, activity and motion planning, probabilistic and adversarial planning, Markov models and decision processes, and Bayesian filtering. Also emphasizes planning with real-world constraints using constraint programming. Includes methods for satisfiability and optimization of logical, temporal and finite domain constraints, graphical models, and linear and integer programs, as well as methods for search, inference, and conflict-learning. Students taking graduate version complete additional assignments.
B.C. WilliamsNo textbook information available"
SQL,Students will learn and apply SQL (Structured Query Language) for database manipulation and querying.,"6.4132[J] Principles of Autonomy and Decision Making
",1,Fall 2023,SQL,"6.4132[J] Principles of Autonomy and Decision Making
", ,0,"()
(Same subject as 16.413[J])(Subject meets with 6.4130[J], 16.410[J])
Prereq: 6.100B, 6.9080, or permission of instructor
Units: 3-0-9
Lecture: MW9.30-11 (32-141) +final

Surveys decision making methods used to create highly autonomous systems and decision aids. Applies models, principles and algorithms taken from artificial intelligence and operations research. Focuses on planning as state-space search, including uninformed, informed and stochastic search, activity and motion planning, probabilistic and adversarial planning, Markov models and decision processes, and Bayesian filtering. Also emphasizes planning with real-world constraints using constraint programming. Includes methods for satisfiability and optimization of logical, temporal and finite domain constraints, graphical models, and linear and integer programs, as well as methods for search, inference, and conflict-learning. Students taking graduate version complete additional assignments.
B.C. WilliamsNo textbook information available"
Algorithm design,Students will learn how to design algorithms for creating intelligent and robust human-robot systems.,"6.8110[J] Cognitive Robotics
",1,Fall 2023,Algorithm Design and Analysis,"6.8110[J] Cognitive Robotics
", ,0,"()
(Same subject as 16.412[J])
Prereq: (6.4100 or 16.413) and (6.1200, 6.3700, or 16.09)
Units: 3-0-9

Highlights algorithms and paradigms for creating human-robot systems that act intelligently and robustly, by reasoning from models of themselves, their counterparts and their world. Examples include space and undersea explorers, cooperative vehicles, manufacturing robot teams and everyday embedded devices. Themes include architectures for goal-directed systems; decision-theoretic programming and robust execution; state-space programming, activity and path planning; risk-bounded programming and risk-bounded planners; self-monitoring and self-diagnosing systems, and human-robot collaboration. Student teams explore recent advances in cognitive robots through delivery of advanced lectures and final projects, in support of a class-wide grand challenge. Enrollment may be limited.
B. C. Williams

Robotics"
Programming,Students will develop programming skills to implement algorithms and paradigms for cognitive robotics.,"6.8110[J] Cognitive Robotics
",1,Fall 2023,Programming and Coding,"6.8110[J] Cognitive Robotics
", ,0,"()
(Same subject as 16.412[J])
Prereq: (6.4100 or 16.413) and (6.1200, 6.3700, or 16.09)
Units: 3-0-9

Highlights algorithms and paradigms for creating human-robot systems that act intelligently and robustly, by reasoning from models of themselves, their counterparts and their world. Examples include space and undersea explorers, cooperative vehicles, manufacturing robot teams and everyday embedded devices. Themes include architectures for goal-directed systems; decision-theoretic programming and robust execution; state-space programming, activity and path planning; risk-bounded programming and risk-bounded planners; self-monitoring and self-diagnosing systems, and human-robot collaboration. Student teams explore recent advances in cognitive robots through delivery of advanced lectures and final projects, in support of a class-wide grand challenge. Enrollment may be limited.
B. C. Williams

Robotics"
Decision-making,"Students will gain the skill of making decisions based on models of themselves, their counterparts, and their world.","6.8110[J] Cognitive Robotics
",1,Fall 2023,Ethical decision-making,"6.8110[J] Cognitive Robotics
", ,0,"()
(Same subject as 16.412[J])
Prereq: (6.4100 or 16.413) and (6.1200, 6.3700, or 16.09)
Units: 3-0-9

Highlights algorithms and paradigms for creating human-robot systems that act intelligently and robustly, by reasoning from models of themselves, their counterparts and their world. Examples include space and undersea explorers, cooperative vehicles, manufacturing robot teams and everyday embedded devices. Themes include architectures for goal-directed systems; decision-theoretic programming and robust execution; state-space programming, activity and path planning; risk-bounded programming and risk-bounded planners; self-monitoring and self-diagnosing systems, and human-robot collaboration. Student teams explore recent advances in cognitive robots through delivery of advanced lectures and final projects, in support of a class-wide grand challenge. Enrollment may be limited.
B. C. Williams

Robotics"
Planning,Students will learn how to plan activities and paths for robots in various scenarios.,"6.8110[J] Cognitive Robotics
",1,Fall 2023,Planning,"6.8110[J] Cognitive Robotics
", ,0,"()
(Same subject as 16.412[J])
Prereq: (6.4100 or 16.413) and (6.1200, 6.3700, or 16.09)
Units: 3-0-9

Highlights algorithms and paradigms for creating human-robot systems that act intelligently and robustly, by reasoning from models of themselves, their counterparts and their world. Examples include space and undersea explorers, cooperative vehicles, manufacturing robot teams and everyday embedded devices. Themes include architectures for goal-directed systems; decision-theoretic programming and robust execution; state-space programming, activity and path planning; risk-bounded programming and risk-bounded planners; self-monitoring and self-diagnosing systems, and human-robot collaboration. Student teams explore recent advances in cognitive robots through delivery of advanced lectures and final projects, in support of a class-wide grand challenge. Enrollment may be limited.
B. C. Williams

Robotics"
Collaboration,Students will develop the skill of collaborating with humans in the context of human-robot systems.,"6.8110[J] Cognitive Robotics
",1,Fall 2023,Collaboration and Teamwork,"6.8110[J] Cognitive Robotics
", ,0,"()
(Same subject as 16.412[J])
Prereq: (6.4100 or 16.413) and (6.1200, 6.3700, or 16.09)
Units: 3-0-9

Highlights algorithms and paradigms for creating human-robot systems that act intelligently and robustly, by reasoning from models of themselves, their counterparts and their world. Examples include space and undersea explorers, cooperative vehicles, manufacturing robot teams and everyday embedded devices. Themes include architectures for goal-directed systems; decision-theoretic programming and robust execution; state-space programming, activity and path planning; risk-bounded programming and risk-bounded planners; self-monitoring and self-diagnosing systems, and human-robot collaboration. Student teams explore recent advances in cognitive robots through delivery of advanced lectures and final projects, in support of a class-wide grand challenge. Enrollment may be limited.
B. C. Williams

Robotics"
Algorithm design,Students will learn how to design algorithms for robots and autonomous vehicles to operate in the physical world.,"6.4200[J] Robotics: Science and Systems
",1,Fall 2023,Algorithm Design and Analysis,"6.4200[J] Robotics: Science and Systems
", ,0,"() 
(Same subject as 2.124[J], 16.405[J])
Prereq: ((1.00 or 6.100A) and (2.003, 6.1010, 6.1210, or 16.06)) or permission of instructor
Units: 2-6-4

Presents concepts, principles, and algorithmic foundations for robots and autonomous vehicles operating in the physical world. Topics include sensing, kinematics and dynamics, state estimation, computer vision, perception, learning, control, motion planning, and embedded system development. Students design and implement advanced algorithms on complex robotic platforms capable of agile autonomous navigation and real-time interaction with the physical word. Students engage in extensive written and oral communication exercises. Enrollment limited.
Staff"
Motion planning,Students will develop the skill of planning the motion of robots and autonomous vehicles in order to navigate autonomously.,"6.4200[J] Robotics: Science and Systems
",1,Fall 2023,Motion planning,"6.4200[J] Robotics: Science and Systems
", ,0,"() 
(Same subject as 2.124[J], 16.405[J])
Prereq: ((1.00 or 6.100A) and (2.003, 6.1010, 6.1210, or 16.06)) or permission of instructor
Units: 2-6-4

Presents concepts, principles, and algorithmic foundations for robots and autonomous vehicles operating in the physical world. Topics include sensing, kinematics and dynamics, state estimation, computer vision, perception, learning, control, motion planning, and embedded system development. Students design and implement advanced algorithms on complex robotic platforms capable of agile autonomous navigation and real-time interaction with the physical word. Students engage in extensive written and oral communication exercises. Enrollment limited.
Staff"
Embedded system development,Students will gain proficiency in developing embedded systems for controlling robots and autonomous vehicles.,"6.4200[J] Robotics: Science and Systems
",1,Fall 2023,Embedded System Design and Development,"6.4200[J] Robotics: Science and Systems
", ,0,"() 
(Same subject as 2.124[J], 16.405[J])
Prereq: ((1.00 or 6.100A) and (2.003, 6.1010, 6.1210, or 16.06)) or permission of instructor
Units: 2-6-4

Presents concepts, principles, and algorithmic foundations for robots and autonomous vehicles operating in the physical world. Topics include sensing, kinematics and dynamics, state estimation, computer vision, perception, learning, control, motion planning, and embedded system development. Students design and implement advanced algorithms on complex robotic platforms capable of agile autonomous navigation and real-time interaction with the physical word. Students engage in extensive written and oral communication exercises. Enrollment limited.
Staff"
Computer vision,Students will learn how to use computer vision techniques to perceive and understand the physical world.,"6.4200[J] Robotics: Science and Systems
",1,Fall 2023,Computer vision,"6.4200[J] Robotics: Science and Systems
", ,0,"() 
(Same subject as 2.124[J], 16.405[J])
Prereq: ((1.00 or 6.100A) and (2.003, 6.1010, 6.1210, or 16.06)) or permission of instructor
Units: 2-6-4

Presents concepts, principles, and algorithmic foundations for robots and autonomous vehicles operating in the physical world. Topics include sensing, kinematics and dynamics, state estimation, computer vision, perception, learning, control, motion planning, and embedded system development. Students design and implement advanced algorithms on complex robotic platforms capable of agile autonomous navigation and real-time interaction with the physical word. Students engage in extensive written and oral communication exercises. Enrollment limited.
Staff"
Programming,Students will develop programming skills to implement advanced algorithms on complex robotic platforms.,"6.4200[J] Robotics: Science and Systems
",1,Fall 2023,Programming and Coding,"6.4200[J] Robotics: Science and Systems
", ,0,"() 
(Same subject as 2.124[J], 16.405[J])
Prereq: ((1.00 or 6.100A) and (2.003, 6.1010, 6.1210, or 16.06)) or permission of instructor
Units: 2-6-4

Presents concepts, principles, and algorithmic foundations for robots and autonomous vehicles operating in the physical world. Topics include sensing, kinematics and dynamics, state estimation, computer vision, perception, learning, control, motion planning, and embedded system development. Students design and implement advanced algorithms on complex robotic platforms capable of agile autonomous navigation and real-time interaction with the physical word. Students engage in extensive written and oral communication exercises. Enrollment limited.
Staff"
Perception,"Students will learn about different approaches to perception in robotics, including deep learning and 3D geometry-based methods. This skill is selected because it involves the ability to handle and manipulate data (sensor inputs) to understand the environment.","6.4210 Robotic Manipulation
",1,Fall 2023,Perception,"6.4210 Robotic Manipulation
", ,0,"()
(Subject meets with 6.4212)
Prereq: (6.100A and 6.3900) or permission of instructor
Units: 4-2-9
http://manipulation.mit.edu
Lecture: TR2.30-4 (E25-111) Lab: F1 (4-159) or F2 (4-159) or F1 (4-153)

Introduces the fundamental algorithmic approaches for creating robot systems that can autonomously manipulate physical objects in unstructured environments such as homes and restaurants. Topics include perception (including approaches based on deep learning and approaches based on 3D geometry), planning (robot kinematics and trajectory generation, collision-free motion planning, task-and-motion planning, and planning under uncertainty), as well as dynamics and control (both model-based and learning-based). Students taking graduate version complete additional assignments. Students engage in extensive written and oral communication exercises.
R. TedrakeNo textbook information available"
Planning,"Students will gain proficiency in robot kinematics, trajectory generation, collision-free motion planning, task-and-motion planning, and planning under uncertainty. This skill is selected because it involves the ability to manipulate data (environment and robot state) to generate plans for robot manipulation tasks.","6.4210 Robotic Manipulation
",1,Fall 2023,Planning,"6.4210 Robotic Manipulation
", ,0,"()
(Subject meets with 6.4212)
Prereq: (6.100A and 6.3900) or permission of instructor
Units: 4-2-9
http://manipulation.mit.edu
Lecture: TR2.30-4 (E25-111) Lab: F1 (4-159) or F2 (4-159) or F1 (4-153)

Introduces the fundamental algorithmic approaches for creating robot systems that can autonomously manipulate physical objects in unstructured environments such as homes and restaurants. Topics include perception (including approaches based on deep learning and approaches based on 3D geometry), planning (robot kinematics and trajectory generation, collision-free motion planning, task-and-motion planning, and planning under uncertainty), as well as dynamics and control (both model-based and learning-based). Students taking graduate version complete additional assignments. Students engage in extensive written and oral communication exercises.
R. TedrakeNo textbook information available"
Perception,"Students will learn about different approaches to perception in robotics, including deep learning and 3D geometry-based methods.","6.4212 Robotic Manipulation
",1,Fall 2023,Perception,"6.4212 Robotic Manipulation
", ,0,"()
(Subject meets with 6.4210)
Prereq: (6.100A and 6.3900) or permission of instructor
Units: 3-0-9
http://manipulation.mit.edu
Lecture: TR2.30-4 (E25-111)

Introduces the fundamental algorithmic approaches for creating robot systems that can autonomously manipulate physical objects in unstructured environments such as homes and restaurants. Topics include perception (including approaches based on deep learning and approaches based on 3D geometry), planning (robot kinematics and trajectory generation, collision-free motion planning, task-and-motion planning, and planning under uncertainty), as well as dynamics and control (both model-based and learning-based. Students taking graduate version complete additional assignments.
R. L. TedrakeNo textbook information available"
Planning,"Students will gain proficiency in robot kinematics, trajectory generation, collision-free motion planning, task-and-motion planning, and planning under uncertainty.","6.4212 Robotic Manipulation
",1,Fall 2023,Planning,"6.4212 Robotic Manipulation
", ,0,"()
(Subject meets with 6.4210)
Prereq: (6.100A and 6.3900) or permission of instructor
Units: 3-0-9
http://manipulation.mit.edu
Lecture: TR2.30-4 (E25-111)

Introduces the fundamental algorithmic approaches for creating robot systems that can autonomously manipulate physical objects in unstructured environments such as homes and restaurants. Topics include perception (including approaches based on deep learning and approaches based on 3D geometry), planning (robot kinematics and trajectory generation, collision-free motion planning, task-and-motion planning, and planning under uncertainty), as well as dynamics and control (both model-based and learning-based. Students taking graduate version complete additional assignments.
R. L. TedrakeNo textbook information available"
Dynamics and control,Students will develop skills in both model-based and learning-based approaches to dynamics and control in robotics.,"6.4212 Robotic Manipulation
",1,Fall 2023,Dynamics and control,"6.4212 Robotic Manipulation
", ,0,"()
(Subject meets with 6.4210)
Prereq: (6.100A and 6.3900) or permission of instructor
Units: 3-0-9
http://manipulation.mit.edu
Lecture: TR2.30-4 (E25-111)

Introduces the fundamental algorithmic approaches for creating robot systems that can autonomously manipulate physical objects in unstructured environments such as homes and restaurants. Topics include perception (including approaches based on deep learning and approaches based on 3D geometry), planning (robot kinematics and trajectory generation, collision-free motion planning, task-and-motion planning, and planning under uncertainty), as well as dynamics and control (both model-based and learning-based. Students taking graduate version complete additional assignments.
R. L. TedrakeNo textbook information available"
Algorithm design,"Students will learn how to design algorithms for various applications in robotics, logistics, recommendation systems, playing games, and control domains.","6.8200 Sensorimotor Learning
",1,Fall 2023,Algorithm Design and Analysis,"6.8200 Sensorimotor Learning
", ,0,"()
Prereq: 6.3900 or 6.7900
Units: 3-0-9

Provides an in-depth view of the state-of-the-art learning methods for control and the know-how of applying these techniques. Topics span reinforcement learning, self-supervised learning, imitation learning, model-based learning, and advanced deep learning architectures, and specific machine learning challenges unique to building sensorimotor systems. Discusses how to identify if learning-based control can help solve a particular problem, how to formulate the problem in the learning framework, and what algorithm to use. Applications of algorithms in robotics, logistics, recommendation systems, playing games, and other control domains covered. Instruction involves two lectures a week, practical experience through exercises, discussion of current research directions, and a group project.
Staff"
Programming,Students will develop proficiency in programming languages to implement and execute algorithms.,"6.8200 Sensorimotor Learning
",1,Fall 2023,Programming and Coding,"6.8200 Sensorimotor Learning
", ,0,"()
Prereq: 6.3900 or 6.7900
Units: 3-0-9

Provides an in-depth view of the state-of-the-art learning methods for control and the know-how of applying these techniques. Topics span reinforcement learning, self-supervised learning, imitation learning, model-based learning, and advanced deep learning architectures, and specific machine learning challenges unique to building sensorimotor systems. Discusses how to identify if learning-based control can help solve a particular problem, how to formulate the problem in the learning framework, and what algorithm to use. Applications of algorithms in robotics, logistics, recommendation systems, playing games, and other control domains covered. Instruction involves two lectures a week, practical experience through exercises, discussion of current research directions, and a group project.
Staff"
Data analysis,Students will gain the ability to analyze and interpret data to make informed decisions in the context of sensorimotor learning.,"6.8200 Sensorimotor Learning
",1,Fall 2023,Data Analysis and Research,"6.8200 Sensorimotor Learning
", ,0,"()
Prereq: 6.3900 or 6.7900
Units: 3-0-9

Provides an in-depth view of the state-of-the-art learning methods for control and the know-how of applying these techniques. Topics span reinforcement learning, self-supervised learning, imitation learning, model-based learning, and advanced deep learning architectures, and specific machine learning challenges unique to building sensorimotor systems. Discusses how to identify if learning-based control can help solve a particular problem, how to formulate the problem in the learning framework, and what algorithm to use. Applications of algorithms in robotics, logistics, recommendation systems, playing games, and other control domains covered. Instruction involves two lectures a week, practical experience through exercises, discussion of current research directions, and a group project.
Staff"
Problem-solving,Students will enhance their problem-solving skills through practical exercises and a group project.,"6.8200 Sensorimotor Learning
",1,Fall 2023,Problem-solving,"6.8200 Sensorimotor Learning
", ,0,"()
Prereq: 6.3900 or 6.7900
Units: 3-0-9

Provides an in-depth view of the state-of-the-art learning methods for control and the know-how of applying these techniques. Topics span reinforcement learning, self-supervised learning, imitation learning, model-based learning, and advanced deep learning architectures, and specific machine learning challenges unique to building sensorimotor systems. Discusses how to identify if learning-based control can help solve a particular problem, how to formulate the problem in the learning framework, and what algorithm to use. Applications of algorithms in robotics, logistics, recommendation systems, playing games, and other control domains covered. Instruction involves two lectures a week, practical experience through exercises, discussion of current research directions, and a group project.
Staff"
Research skills,Students will learn how to discuss and analyze current research directions in the field of sensorimotor learning.,"6.8200 Sensorimotor Learning
",1,Fall 2023,Research Skills and Analysis,"6.8200 Sensorimotor Learning
", ,0,"()
Prereq: 6.3900 or 6.7900
Units: 3-0-9

Provides an in-depth view of the state-of-the-art learning methods for control and the know-how of applying these techniques. Topics span reinforcement learning, self-supervised learning, imitation learning, model-based learning, and advanced deep learning architectures, and specific machine learning challenges unique to building sensorimotor systems. Discusses how to identify if learning-based control can help solve a particular problem, how to formulate the problem in the learning framework, and what algorithm to use. Applications of algorithms in robotics, logistics, recommendation systems, playing games, and other control domains covered. Instruction involves two lectures a week, practical experience through exercises, discussion of current research directions, and a group project.
Staff"
Computational methods,Students will learn and apply computational methods to analyze and control underactuated mechanical systems.,"6.8210 Underactuated Robotics
",1,Fall 2023,Computational Techniques and Methods,"6.8210 Underactuated Robotics
", ,0,"()
Prereq: 18.03 and 18.06
Units: 3-0-9

Covers nonlinear dynamics and control of underactuated mechanical systems, with an emphasis on computational methods. Topics include the nonlinear dynamics of robotic manipulators, applied optimal and robust control and motion planning. Discussions include examples from biology and applications to legged locomotion, compliant manipulation, underwater robots, and flying machines.
R. Tedrake

Graphics"
Nonlinear dynamics,Students will gain an understanding of the nonlinear dynamics of robotic manipulators and how they affect the control of underactuated systems.,"6.8210 Underactuated Robotics
",1,Fall 2023,Nonlinear dynamics,"6.8210 Underactuated Robotics
", ,0,"()
Prereq: 18.03 and 18.06
Units: 3-0-9

Covers nonlinear dynamics and control of underactuated mechanical systems, with an emphasis on computational methods. Topics include the nonlinear dynamics of robotic manipulators, applied optimal and robust control and motion planning. Discussions include examples from biology and applications to legged locomotion, compliant manipulation, underwater robots, and flying machines.
R. Tedrake

Graphics"
Optimal control,Students will learn about applied optimal control techniques and how to apply them to underactuated robotics.,"6.8210 Underactuated Robotics
",1,Fall 2023,Optimal control,"6.8210 Underactuated Robotics
", ,0,"()
Prereq: 18.03 and 18.06
Units: 3-0-9

Covers nonlinear dynamics and control of underactuated mechanical systems, with an emphasis on computational methods. Topics include the nonlinear dynamics of robotic manipulators, applied optimal and robust control and motion planning. Discussions include examples from biology and applications to legged locomotion, compliant manipulation, underwater robots, and flying machines.
R. Tedrake

Graphics"
Robust control,Students will learn about robust control methods and how to design controllers that can handle uncertainties and disturbances in underactuated systems.,"6.8210 Underactuated Robotics
",1,Fall 2023,,"6.8210 Underactuated Robotics
", ,0,"()
Prereq: 18.03 and 18.06
Units: 3-0-9

Covers nonlinear dynamics and control of underactuated mechanical systems, with an emphasis on computational methods. Topics include the nonlinear dynamics of robotic manipulators, applied optimal and robust control and motion planning. Discussions include examples from biology and applications to legged locomotion, compliant manipulation, underwater robots, and flying machines.
R. Tedrake

Graphics"
Motion planning,"Students will develop skills in motion planning for underactuated mechanical systems, including legged locomotion, compliant manipulation, underwater robots, and flying machines.","6.8210 Underactuated Robotics
",1,Fall 2023,Motion planning,"6.8210 Underactuated Robotics
", ,0,"()
Prereq: 18.03 and 18.06
Units: 3-0-9

Covers nonlinear dynamics and control of underactuated mechanical systems, with an emphasis on computational methods. Topics include the nonlinear dynamics of robotic manipulators, applied optimal and robust control and motion planning. Discussions include examples from biology and applications to legged locomotion, compliant manipulation, underwater robots, and flying machines.
R. Tedrake

Graphics"
Ray tracing,"Students will learn and develop proficiency in the technique of ray tracing, which is a fundamental algorithm used in computer graphics to generate realistic images.","6.4400 Computer Graphics
",1,Fall 2023,Ray tracing,"6.4400 Computer Graphics
", ,0,"()
Prereq: 6.1010 and (18.06 or 18.C06)
Units: 3-0-9
Lecture: TR2.30-4 (4-370)

Introduction to computer graphics algorithms, software and hardware. Topics include ray tracing, the graphics pipeline, transformations, texture mapping, shadows, sampling, global illumination, splines, animation and color.
M. Konakovic LukovicNo textbook information available"
Graphics pipeline,"Students will gain knowledge and practical experience in understanding and manipulating the graphics pipeline, which is the sequence of stages involved in rendering graphics on a computer screen.","6.4400 Computer Graphics
",1,Fall 2023,Graphics pipeline,"6.4400 Computer Graphics
", ,0,"()
Prereq: 6.1010 and (18.06 or 18.C06)
Units: 3-0-9
Lecture: TR2.30-4 (4-370)

Introduction to computer graphics algorithms, software and hardware. Topics include ray tracing, the graphics pipeline, transformations, texture mapping, shadows, sampling, global illumination, splines, animation and color.
M. Konakovic LukovicNo textbook information available"
Texture mapping,"Students will learn how to apply textures to 3D models, allowing for more realistic and detailed rendering of surfaces.","6.4400 Computer Graphics
",1,Fall 2023,Texture mapping,"6.4400 Computer Graphics
", ,0,"()
Prereq: 6.1010 and (18.06 or 18.C06)
Units: 3-0-9
Lecture: TR2.30-4 (4-370)

Introduction to computer graphics algorithms, software and hardware. Topics include ray tracing, the graphics pipeline, transformations, texture mapping, shadows, sampling, global illumination, splines, animation and color.
M. Konakovic LukovicNo textbook information available"
Splines,"Students will acquire the skill of working with splines, which are mathematical curves used in computer graphics to create smooth and flexible shapes.","6.4400 Computer Graphics
",1,Fall 2023,Splines,"6.4400 Computer Graphics
", ,0,"()
Prereq: 6.1010 and (18.06 or 18.C06)
Units: 3-0-9
Lecture: TR2.30-4 (4-370)

Introduction to computer graphics algorithms, software and hardware. Topics include ray tracing, the graphics pipeline, transformations, texture mapping, shadows, sampling, global illumination, splines, animation and color.
M. Konakovic LukovicNo textbook information available"
Animation,"Students will develop the ability to create and control animations, enabling them to bring static images to life through movement and motion.","6.4400 Computer Graphics
",1,Fall 2023,Animation,"6.4400 Computer Graphics
", ,0,"()
Prereq: 6.1010 and (18.06 or 18.C06)
Units: 3-0-9
Lecture: TR2.30-4 (4-370)

Introduction to computer graphics algorithms, software and hardware. Topics include ray tracing, the graphics pipeline, transformations, texture mapping, shadows, sampling, global illumination, splines, animation and color.
M. Konakovic LukovicNo textbook information available"
3D modeling,Students will gain proficiency in creating and manipulating 3D models using computer-aided design software.,"6.4420[J] Computational Design and Fabrication
",1,Fall 2023,,"6.4420[J] Computational Design and Fabrication
", ,0,"()
(Same subject as 2.0911[J])(Subject meets with 6.8420)
Prereq: Calculus II (GIR) and (6.1010 or permission of instructor)
Units: 3-0-9

Introduces computational aspects of computer-aided design and manufacturing. Explores relevant methods in the context of additive manufacturing (e.g., 3D printing). Topics include computer graphics (geometry modeling, solid modeling, procedural modeling), physically-based simulation (kinematics, finite element method), 3D scanning/geometry processing, and an overview of 3D fabrication methods. Exposes students to the latest research in computational fabrication. Students taking the graduate version complete additional assignments.
W. Matusik"
Finite element method,Students will learn how to apply the finite element method to simulate and analyze the behavior of physical systems.,"6.4420[J] Computational Design and Fabrication
",1,Fall 2023,,"6.4420[J] Computational Design and Fabrication
", ,0,"()
(Same subject as 2.0911[J])(Subject meets with 6.8420)
Prereq: Calculus II (GIR) and (6.1010 or permission of instructor)
Units: 3-0-9

Introduces computational aspects of computer-aided design and manufacturing. Explores relevant methods in the context of additive manufacturing (e.g., 3D printing). Topics include computer graphics (geometry modeling, solid modeling, procedural modeling), physically-based simulation (kinematics, finite element method), 3D scanning/geometry processing, and an overview of 3D fabrication methods. Exposes students to the latest research in computational fabrication. Students taking the graduate version complete additional assignments.
W. Matusik"
3D scanning,Students will acquire the skill of using 3D scanning techniques to capture real-world objects and convert them into digital models.,"6.4420[J] Computational Design and Fabrication
",1,Fall 2023,,"6.4420[J] Computational Design and Fabrication
", ,0,"()
(Same subject as 2.0911[J])(Subject meets with 6.8420)
Prereq: Calculus II (GIR) and (6.1010 or permission of instructor)
Units: 3-0-9

Introduces computational aspects of computer-aided design and manufacturing. Explores relevant methods in the context of additive manufacturing (e.g., 3D printing). Topics include computer graphics (geometry modeling, solid modeling, procedural modeling), physically-based simulation (kinematics, finite element method), 3D scanning/geometry processing, and an overview of 3D fabrication methods. Exposes students to the latest research in computational fabrication. Students taking the graduate version complete additional assignments.
W. Matusik"
Additive manufacturing,"Students will learn about additive manufacturing techniques, such as 3D printing, and how to utilize them in the fabrication process.","6.4420[J] Computational Design and Fabrication
",1,Fall 2023,Additive manufacturing,"6.4420[J] Computational Design and Fabrication
", ,0,"()
(Same subject as 2.0911[J])(Subject meets with 6.8420)
Prereq: Calculus II (GIR) and (6.1010 or permission of instructor)
Units: 3-0-9

Introduces computational aspects of computer-aided design and manufacturing. Explores relevant methods in the context of additive manufacturing (e.g., 3D printing). Topics include computer graphics (geometry modeling, solid modeling, procedural modeling), physically-based simulation (kinematics, finite element method), 3D scanning/geometry processing, and an overview of 3D fabrication methods. Exposes students to the latest research in computational fabrication. Students taking the graduate version complete additional assignments.
W. Matusik"
Procedural modeling,"Students will develop the skill of creating procedural models, which are generated algorithmically based on predefined rules or parameters.","6.4420[J] Computational Design and Fabrication
",1,Fall 2023,Modeling,"6.4420[J] Computational Design and Fabrication
", ,0,"()
(Same subject as 2.0911[J])(Subject meets with 6.8420)
Prereq: Calculus II (GIR) and (6.1010 or permission of instructor)
Units: 3-0-9

Introduces computational aspects of computer-aided design and manufacturing. Explores relevant methods in the context of additive manufacturing (e.g., 3D printing). Topics include computer graphics (geometry modeling, solid modeling, procedural modeling), physically-based simulation (kinematics, finite element method), 3D scanning/geometry processing, and an overview of 3D fabrication methods. Exposes students to the latest research in computational fabrication. Students taking the graduate version complete additional assignments.
W. Matusik"
Differential geometry,"Students will gain proficiency in applied differential geometry, including concepts such as curvature and metric embedding.","6.8410 Shape Analysis
",1,Fall 2023,Differential geometry,"6.8410 Shape Analysis
", ,0,"()
Prereq: Calculus II (GIR), 18.06, and (6.8300 or 6.4400)
Units: 3-0-9

Introduces mathematical, algorithmic, and statistical tools needed to analyze geometric data and to apply geometric techniques to data analysis, with applications to fields such as computer graphics, machine learning, computer vision, medical imaging, and architecture. Potential topics include applied introduction to differential geometry, discrete notions of curvature, metric embedding, geometric PDE via the finite element method (FEM) and discrete exterior calculus (DEC),; computational spectral geometry and relationship to graph-based learning, correspondence and mapping, level set method, descriptor, shape collections, optimal transport, and vector field design.
Staff"
Finite element method (FEM),Students will learn how to apply the finite element method to solve geometric partial differential equations (PDEs).,"6.8410 Shape Analysis
",1,Fall 2023,Finite Element Method (FEM),"6.8410 Shape Analysis
", ,0,"()
Prereq: Calculus II (GIR), 18.06, and (6.8300 or 6.4400)
Units: 3-0-9

Introduces mathematical, algorithmic, and statistical tools needed to analyze geometric data and to apply geometric techniques to data analysis, with applications to fields such as computer graphics, machine learning, computer vision, medical imaging, and architecture. Potential topics include applied introduction to differential geometry, discrete notions of curvature, metric embedding, geometric PDE via the finite element method (FEM) and discrete exterior calculus (DEC),; computational spectral geometry and relationship to graph-based learning, correspondence and mapping, level set method, descriptor, shape collections, optimal transport, and vector field design.
Staff"
Discrete exterior calculus (DEC),Students will develop skills in using discrete exterior calculus to analyze geometric data.,"6.8410 Shape Analysis
",1,Fall 2023,Discrete exterior calculus (DEC),"6.8410 Shape Analysis
", ,0,"()
Prereq: Calculus II (GIR), 18.06, and (6.8300 or 6.4400)
Units: 3-0-9

Introduces mathematical, algorithmic, and statistical tools needed to analyze geometric data and to apply geometric techniques to data analysis, with applications to fields such as computer graphics, machine learning, computer vision, medical imaging, and architecture. Potential topics include applied introduction to differential geometry, discrete notions of curvature, metric embedding, geometric PDE via the finite element method (FEM) and discrete exterior calculus (DEC),; computational spectral geometry and relationship to graph-based learning, correspondence and mapping, level set method, descriptor, shape collections, optimal transport, and vector field design.
Staff"
Computational spectral geometry,Students will learn about computational techniques used in spectral geometry and their relationship to graph-based learning.,"6.8410 Shape Analysis
",1,Fall 2023,Computational Geometry and Modeling,"6.8410 Shape Analysis
", ,0,"()
Prereq: Calculus II (GIR), 18.06, and (6.8300 or 6.4400)
Units: 3-0-9

Introduces mathematical, algorithmic, and statistical tools needed to analyze geometric data and to apply geometric techniques to data analysis, with applications to fields such as computer graphics, machine learning, computer vision, medical imaging, and architecture. Potential topics include applied introduction to differential geometry, discrete notions of curvature, metric embedding, geometric PDE via the finite element method (FEM) and discrete exterior calculus (DEC),; computational spectral geometry and relationship to graph-based learning, correspondence and mapping, level set method, descriptor, shape collections, optimal transport, and vector field design.
Staff"
Optimal transport,Students will gain proficiency in the concept of optimal transport and its application in shape analysis.,"6.8410 Shape Analysis
",1,Fall 2023,Optimal transport,"6.8410 Shape Analysis
", ,0,"()
Prereq: Calculus II (GIR), 18.06, and (6.8300 or 6.4400)
Units: 3-0-9

Introduces mathematical, algorithmic, and statistical tools needed to analyze geometric data and to apply geometric techniques to data analysis, with applications to fields such as computer graphics, machine learning, computer vision, medical imaging, and architecture. Potential topics include applied introduction to differential geometry, discrete notions of curvature, metric embedding, geometric PDE via the finite element method (FEM) and discrete exterior calculus (DEC),; computational spectral geometry and relationship to graph-based learning, correspondence and mapping, level set method, descriptor, shape collections, optimal transport, and vector field design.
Staff"
Computer-aided design (CAD),Students will develop proficiency in using CAD software to create and manipulate 3D models.,"6.8420 Computational Design and Fabrication
",1,Fall 2023,Computer-aided design (CAD),"6.8420 Computational Design and Fabrication
", ,0,"()
(Subject meets with 2.0911[J], 6.4420[J])
Prereq: Calculus II (GIR) and (6.1010 or permission of instructor)
Units: 3-0-9

Introduces computational aspects of computer-aided design and manufacturing. Explores relevant methods in the context of additive manufacturing (e.g., 3D printing). Topics include computer graphics (geometry modeling, solid modeling, procedural modeling), physically-based simulation (kinematics, finite element method), 3D scanning/geometry processing, and an overview of 3D fabrication methods. Exposes students to the latest research in computational fabrication. Students taking graduate version complete additional assignments.
W. Matusik

Human-Computer Interaction & Society"
Additive manufacturing,Students will learn about the process of 3D printing and gain hands-on experience in using 3D printers.,"6.8420 Computational Design and Fabrication
",1,Fall 2023,Additive manufacturing,"6.8420 Computational Design and Fabrication
", ,0,"()
(Subject meets with 2.0911[J], 6.4420[J])
Prereq: Calculus II (GIR) and (6.1010 or permission of instructor)
Units: 3-0-9

Introduces computational aspects of computer-aided design and manufacturing. Explores relevant methods in the context of additive manufacturing (e.g., 3D printing). Topics include computer graphics (geometry modeling, solid modeling, procedural modeling), physically-based simulation (kinematics, finite element method), 3D scanning/geometry processing, and an overview of 3D fabrication methods. Exposes students to the latest research in computational fabrication. Students taking graduate version complete additional assignments.
W. Matusik

Human-Computer Interaction & Society"
Geometry modeling,Students will learn how to create and manipulate geometric shapes and models using computer graphics techniques.,"6.8420 Computational Design and Fabrication
",1,Fall 2023,Computational Geometry and Modeling,"6.8420 Computational Design and Fabrication
", ,0,"()
(Subject meets with 2.0911[J], 6.4420[J])
Prereq: Calculus II (GIR) and (6.1010 or permission of instructor)
Units: 3-0-9

Introduces computational aspects of computer-aided design and manufacturing. Explores relevant methods in the context of additive manufacturing (e.g., 3D printing). Topics include computer graphics (geometry modeling, solid modeling, procedural modeling), physically-based simulation (kinematics, finite element method), 3D scanning/geometry processing, and an overview of 3D fabrication methods. Exposes students to the latest research in computational fabrication. Students taking graduate version complete additional assignments.
W. Matusik

Human-Computer Interaction & Society"
Procedural modeling,Students will learn how to generate complex 3D models using algorithms and procedural techniques.,"6.8420 Computational Design and Fabrication
",1,Fall 2023,Modeling,"6.8420 Computational Design and Fabrication
", ,0,"()
(Subject meets with 2.0911[J], 6.4420[J])
Prereq: Calculus II (GIR) and (6.1010 or permission of instructor)
Units: 3-0-9

Introduces computational aspects of computer-aided design and manufacturing. Explores relevant methods in the context of additive manufacturing (e.g., 3D printing). Topics include computer graphics (geometry modeling, solid modeling, procedural modeling), physically-based simulation (kinematics, finite element method), 3D scanning/geometry processing, and an overview of 3D fabrication methods. Exposes students to the latest research in computational fabrication. Students taking graduate version complete additional assignments.
W. Matusik

Human-Computer Interaction & Society"
Finite element method,Students will gain proficiency in using the finite element method for simulating and analyzing the behavior of physical systems.,"6.8420 Computational Design and Fabrication
",1,Fall 2023,Finite Element Method (FEM),"6.8420 Computational Design and Fabrication
", ,0,"()
(Subject meets with 2.0911[J], 6.4420[J])
Prereq: Calculus II (GIR) and (6.1010 or permission of instructor)
Units: 3-0-9

Introduces computational aspects of computer-aided design and manufacturing. Explores relevant methods in the context of additive manufacturing (e.g., 3D printing). Topics include computer graphics (geometry modeling, solid modeling, procedural modeling), physically-based simulation (kinematics, finite element method), 3D scanning/geometry processing, and an overview of 3D fabrication methods. Exposes students to the latest research in computational fabrication. Students taking graduate version complete additional assignments.
W. Matusik

Human-Computer Interaction & Society"
Prototyping,Students will develop the skill of prototyping by constructing software and hardware prototypes using interactive technologies.,"6.4510 Engineering Interactive Technologies
",1,Fall 2023,Prototyping,"6.4510 Engineering Interactive Technologies
", ,0,"()Not offered regularly; consult department
Prereq: 6.1020, 6.2050, 6.2060, 6.9010, or permission of instructor
Units: 1-5-6

Provides instruction in building cutting-edge interactive technologies, explains the underlying engineering concepts, and shows how those technologies evolved over time. Students use a studio format (i.e., extended periods of time) for constructing software and hardware prototypes. Topics include interactive technologies, such as multi-touch, augmented reality, haptics, wearables, and shape-changing interfaces. In a group project, students build their own interactive hardware/software prototypes and present them in a live demo at the end of term. Enrollment may be limited.
Staff"
Programming,Students will gain proficiency in programming as they work on building interactive hardware/software prototypes.,"6.4510 Engineering Interactive Technologies
",1,Fall 2023,Programming and Coding,"6.4510 Engineering Interactive Technologies
", ,0,"()Not offered regularly; consult department
Prereq: 6.1020, 6.2050, 6.2060, 6.9010, or permission of instructor
Units: 1-5-6

Provides instruction in building cutting-edge interactive technologies, explains the underlying engineering concepts, and shows how those technologies evolved over time. Students use a studio format (i.e., extended periods of time) for constructing software and hardware prototypes. Topics include interactive technologies, such as multi-touch, augmented reality, haptics, wearables, and shape-changing interfaces. In a group project, students build their own interactive hardware/software prototypes and present them in a live demo at the end of term. Enrollment may be limited.
Staff"
User Interface Design,Students will learn how to design user interfaces for interactive technologies.,"6.4510 Engineering Interactive Technologies
",1,Fall 2023,User Interface Design,"6.4510 Engineering Interactive Technologies
", ,0,"()Not offered regularly; consult department
Prereq: 6.1020, 6.2050, 6.2060, 6.9010, or permission of instructor
Units: 1-5-6

Provides instruction in building cutting-edge interactive technologies, explains the underlying engineering concepts, and shows how those technologies evolved over time. Students use a studio format (i.e., extended periods of time) for constructing software and hardware prototypes. Topics include interactive technologies, such as multi-touch, augmented reality, haptics, wearables, and shape-changing interfaces. In a group project, students build their own interactive hardware/software prototypes and present them in a live demo at the end of term. Enrollment may be limited.
Staff"
Teamwork,Students will develop the skill of working in a group project to build interactive prototypes.,"6.4510 Engineering Interactive Technologies
",1,Fall 2023,Collaboration and Teamwork,"6.4510 Engineering Interactive Technologies
", ,0,"()Not offered regularly; consult department
Prereq: 6.1020, 6.2050, 6.2060, 6.9010, or permission of instructor
Units: 1-5-6

Provides instruction in building cutting-edge interactive technologies, explains the underlying engineering concepts, and shows how those technologies evolved over time. Students use a studio format (i.e., extended periods of time) for constructing software and hardware prototypes. Topics include interactive technologies, such as multi-touch, augmented reality, haptics, wearables, and shape-changing interfaces. In a group project, students build their own interactive hardware/software prototypes and present them in a live demo at the end of term. Enrollment may be limited.
Staff"
Presentation,Students will enhance their presentation skills by presenting their interactive prototypes in a live demo at the end of the term.,"6.4510 Engineering Interactive Technologies
",1,Fall 2023,Presentation,"6.4510 Engineering Interactive Technologies
", ,0,"()Not offered regularly; consult department
Prereq: 6.1020, 6.2050, 6.2060, 6.9010, or permission of instructor
Units: 1-5-6

Provides instruction in building cutting-edge interactive technologies, explains the underlying engineering concepts, and shows how those technologies evolved over time. Students use a studio format (i.e., extended periods of time) for constructing software and hardware prototypes. Topics include interactive technologies, such as multi-touch, augmented reality, haptics, wearables, and shape-changing interfaces. In a group project, students build their own interactive hardware/software prototypes and present them in a live demo at the end of term. Enrollment may be limited.
Staff"
Design methods,Students will learn and apply various design methods to develop assistive and adaptive technologies for people with disabilities.,"6.4530[J] Principles and Practice of Assistive Technology
",1,Fall 2023,,"6.4530[J] Principles and Practice of Assistive Technology
", ,0,"()Not offered regularly; consult department
(Same subject as 2.78[J], HST.420[J])
Prereq: Permission of instructor
Units: 2-4-6

Students work closely with people with disabilities to develop assistive and adaptive technologies that help them live more independently. Covers design methods and problem-solving strategies; human factors; human-machine interfaces; community perspectives; social and ethical aspects; and assistive technology for motor, cognitive, perceptual, and age-related impairments. Prior knowledge of one or more of the following areas useful: software; electronics; human-computer interaction; cognitive science; mechanical engineering; control; or MIT hobby shop, MIT PSC, or other relevant independent project experience. Enrollment may be limited.
Staff"
Problem-solving strategies,Students will develop problem-solving skills to address challenges in creating assistive and adaptive technologies.,"6.4530[J] Principles and Practice of Assistive Technology
",1,Fall 2023,Problem-solving,"6.4530[J] Principles and Practice of Assistive Technology
", ,0,"()Not offered regularly; consult department
(Same subject as 2.78[J], HST.420[J])
Prereq: Permission of instructor
Units: 2-4-6

Students work closely with people with disabilities to develop assistive and adaptive technologies that help them live more independently. Covers design methods and problem-solving strategies; human factors; human-machine interfaces; community perspectives; social and ethical aspects; and assistive technology for motor, cognitive, perceptual, and age-related impairments. Prior knowledge of one or more of the following areas useful: software; electronics; human-computer interaction; cognitive science; mechanical engineering; control; or MIT hobby shop, MIT PSC, or other relevant independent project experience. Enrollment may be limited.
Staff"
Human-machine interfaces,Students will gain proficiency in designing and implementing effective human-machine interfaces for assistive technologies.,"6.4530[J] Principles and Practice of Assistive Technology
",1,Fall 2023,Human-Computer Interaction (HCI) and Human-Machine Interfaces,"6.4530[J] Principles and Practice of Assistive Technology
", ,0,"()Not offered regularly; consult department
(Same subject as 2.78[J], HST.420[J])
Prereq: Permission of instructor
Units: 2-4-6

Students work closely with people with disabilities to develop assistive and adaptive technologies that help them live more independently. Covers design methods and problem-solving strategies; human factors; human-machine interfaces; community perspectives; social and ethical aspects; and assistive technology for motor, cognitive, perceptual, and age-related impairments. Prior knowledge of one or more of the following areas useful: software; electronics; human-computer interaction; cognitive science; mechanical engineering; control; or MIT hobby shop, MIT PSC, or other relevant independent project experience. Enrollment may be limited.
Staff"
Programming,Students will acquire programming skills to develop software-based assistive technologies.,"6.4530[J] Principles and Practice of Assistive Technology
",1,Fall 2023,Programming and Coding,"6.4530[J] Principles and Practice of Assistive Technology
", ,0,"()Not offered regularly; consult department
(Same subject as 2.78[J], HST.420[J])
Prereq: Permission of instructor
Units: 2-4-6

Students work closely with people with disabilities to develop assistive and adaptive technologies that help them live more independently. Covers design methods and problem-solving strategies; human factors; human-machine interfaces; community perspectives; social and ethical aspects; and assistive technology for motor, cognitive, perceptual, and age-related impairments. Prior knowledge of one or more of the following areas useful: software; electronics; human-computer interaction; cognitive science; mechanical engineering; control; or MIT hobby shop, MIT PSC, or other relevant independent project experience. Enrollment may be limited.
Staff"
Electronics,Students will learn about electronics and how to apply it in the development of assistive technologies.,"6.4530[J] Principles and Practice of Assistive Technology
",1,Fall 2023,Electronics,"6.4530[J] Principles and Practice of Assistive Technology
", ,0,"()Not offered regularly; consult department
(Same subject as 2.78[J], HST.420[J])
Prereq: Permission of instructor
Units: 2-4-6

Students work closely with people with disabilities to develop assistive and adaptive technologies that help them live more independently. Covers design methods and problem-solving strategies; human factors; human-machine interfaces; community perspectives; social and ethical aspects; and assistive technology for motor, cognitive, perceptual, and age-related impairments. Prior knowledge of one or more of the following areas useful: software; electronics; human-computer interaction; cognitive science; mechanical engineering; control; or MIT hobby shop, MIT PSC, or other relevant independent project experience. Enrollment may be limited.
Staff"
Python programming,"Students will gain proficiency in programming in Python, as they complete weekly programming assignments.","6.4550[J] Interactive Music Systems
",1,Fall 2023,Python programming,"6.4550[J] Interactive Music Systems
", ,0,"(, ) 
(Same subject as 21M.385[J])(Subject meets with 21M.585)
Prereq: (6.1010 and 21M.301) or permission of instructor
Units: 3-0-9
http://mta.mit.edu/music/class-schedule
Lecture: MW11-12.30 (4-270)

Explores audio synthesis, musical structure, human computer interaction (HCI), and visual presentation for the creation of interactive musical experiences. Topics include audio synthesis; mixing and looping; MIDI sequencing; generative composition; motion sensors; music games; and graphics for UI, visualization, and aesthetics. Includes weekly programming assignments in python. Teams build an original, dynamic, and engaging interactive music system for their final project. Students taking graduate version complete different assignments. Limited to 36.
Fall: E. Egozy, L. KaelblingSpring: E. Egozy, L. KaelblingNo required or recommended textbooks"
Audio synthesis,Students will learn how to synthesize audio for the creation of interactive musical experiences.,"6.4550[J] Interactive Music Systems
",1,Fall 2023,Audio synthesis,"6.4550[J] Interactive Music Systems
", ,0,"(, ) 
(Same subject as 21M.385[J])(Subject meets with 21M.585)
Prereq: (6.1010 and 21M.301) or permission of instructor
Units: 3-0-9
http://mta.mit.edu/music/class-schedule
Lecture: MW11-12.30 (4-270)

Explores audio synthesis, musical structure, human computer interaction (HCI), and visual presentation for the creation of interactive musical experiences. Topics include audio synthesis; mixing and looping; MIDI sequencing; generative composition; motion sensors; music games; and graphics for UI, visualization, and aesthetics. Includes weekly programming assignments in python. Teams build an original, dynamic, and engaging interactive music system for their final project. Students taking graduate version complete different assignments. Limited to 36.
Fall: E. Egozy, L. KaelblingSpring: E. Egozy, L. KaelblingNo required or recommended textbooks"
MIDI sequencing,Students will learn how to sequence MIDI (Musical Instrument Digital Interface) data for creating music.,"6.4550[J] Interactive Music Systems
",1,Fall 2023,MIDI sequencing,"6.4550[J] Interactive Music Systems
", ,0,"(, ) 
(Same subject as 21M.385[J])(Subject meets with 21M.585)
Prereq: (6.1010 and 21M.301) or permission of instructor
Units: 3-0-9
http://mta.mit.edu/music/class-schedule
Lecture: MW11-12.30 (4-270)

Explores audio synthesis, musical structure, human computer interaction (HCI), and visual presentation for the creation of interactive musical experiences. Topics include audio synthesis; mixing and looping; MIDI sequencing; generative composition; motion sensors; music games; and graphics for UI, visualization, and aesthetics. Includes weekly programming assignments in python. Teams build an original, dynamic, and engaging interactive music system for their final project. Students taking graduate version complete different assignments. Limited to 36.
Fall: E. Egozy, L. KaelblingSpring: E. Egozy, L. KaelblingNo required or recommended textbooks"
Generative composition,Students will learn how to compose music using generative algorithms.,"6.4550[J] Interactive Music Systems
",1,Fall 2023,Generative composition,"6.4550[J] Interactive Music Systems
", ,0,"(, ) 
(Same subject as 21M.385[J])(Subject meets with 21M.585)
Prereq: (6.1010 and 21M.301) or permission of instructor
Units: 3-0-9
http://mta.mit.edu/music/class-schedule
Lecture: MW11-12.30 (4-270)

Explores audio synthesis, musical structure, human computer interaction (HCI), and visual presentation for the creation of interactive musical experiences. Topics include audio synthesis; mixing and looping; MIDI sequencing; generative composition; motion sensors; music games; and graphics for UI, visualization, and aesthetics. Includes weekly programming assignments in python. Teams build an original, dynamic, and engaging interactive music system for their final project. Students taking graduate version complete different assignments. Limited to 36.
Fall: E. Egozy, L. KaelblingSpring: E. Egozy, L. KaelblingNo required or recommended textbooks"
Motion sensor programming,Students will develop the skill of programming motion sensors for interactive music systems.,"6.4550[J] Interactive Music Systems
",1,Fall 2023,Motion sensor programming,"6.4550[J] Interactive Music Systems
", ,0,"(, ) 
(Same subject as 21M.385[J])(Subject meets with 21M.585)
Prereq: (6.1010 and 21M.301) or permission of instructor
Units: 3-0-9
http://mta.mit.edu/music/class-schedule
Lecture: MW11-12.30 (4-270)

Explores audio synthesis, musical structure, human computer interaction (HCI), and visual presentation for the creation of interactive musical experiences. Topics include audio synthesis; mixing and looping; MIDI sequencing; generative composition; motion sensors; music games; and graphics for UI, visualization, and aesthetics. Includes weekly programming assignments in python. Teams build an original, dynamic, and engaging interactive music system for their final project. Students taking graduate version complete different assignments. Limited to 36.
Fall: E. Egozy, L. KaelblingSpring: E. Egozy, L. KaelblingNo required or recommended textbooks"
Game design,"Students will learn how to design video games, including creating game mechanics, levels, and characters.","6.4570[J] Creating Video Games
",1,Fall 2023,Game design,"6.4570[J] Creating Video Games
", ,0,"() 
(Same subject as CMS.611[J])
Prereq: 6.100A or CMS.301
Units: 3-3-6
Lecture: TR2-5 (24-115)

Introduces students to the complexities of working in small, multidisciplinary teams to develop video games. Covers creative design and production methods, stressing design iteration and regular testing across all aspects of game development (design, visual arts, music, fiction, and programming). Assumes a familiarity with current video games, and the ability to discuss games critically. Previous experience in audio design, visual arts, or project management recommended. Limited to 36.
P. Tan, S. Verrilli, R. Eberhardt, A. GrantNo textbook information available"
Programming,"Students will develop programming skills, specifically in the context of game development, using languages such as C++ or Unity.","6.4570[J] Creating Video Games
",1,Fall 2023,Programming and Coding,"6.4570[J] Creating Video Games
", ,0,"() 
(Same subject as CMS.611[J])
Prereq: 6.100A or CMS.301
Units: 3-3-6
Lecture: TR2-5 (24-115)

Introduces students to the complexities of working in small, multidisciplinary teams to develop video games. Covers creative design and production methods, stressing design iteration and regular testing across all aspects of game development (design, visual arts, music, fiction, and programming). Assumes a familiarity with current video games, and the ability to discuss games critically. Previous experience in audio design, visual arts, or project management recommended. Limited to 36.
P. Tan, S. Verrilli, R. Eberhardt, A. GrantNo textbook information available"
Testing and iteration,"Students will gain skills in testing and iterating game designs, ensuring that the game is functional and enjoyable.","6.4570[J] Creating Video Games
",1,Fall 2023,Software Testing and Debugging,"6.4570[J] Creating Video Games
", ,0,"() 
(Same subject as CMS.611[J])
Prereq: 6.100A or CMS.301
Units: 3-3-6
Lecture: TR2-5 (24-115)

Introduces students to the complexities of working in small, multidisciplinary teams to develop video games. Covers creative design and production methods, stressing design iteration and regular testing across all aspects of game development (design, visual arts, music, fiction, and programming). Assumes a familiarity with current video games, and the ability to discuss games critically. Previous experience in audio design, visual arts, or project management recommended. Limited to 36.
P. Tan, S. Verrilli, R. Eberhardt, A. GrantNo textbook information available"
Collaboration,"Students will learn how to work effectively in small, multidisciplinary teams, collaborating with others to develop video games.","6.4570[J] Creating Video Games
",1,Fall 2023,Collaboration and Teamwork,"6.4570[J] Creating Video Games
", ,0,"() 
(Same subject as CMS.611[J])
Prereq: 6.100A or CMS.301
Units: 3-3-6
Lecture: TR2-5 (24-115)

Introduces students to the complexities of working in small, multidisciplinary teams to develop video games. Covers creative design and production methods, stressing design iteration and regular testing across all aspects of game development (design, visual arts, music, fiction, and programming). Assumes a familiarity with current video games, and the ability to discuss games critically. Previous experience in audio design, visual arts, or project management recommended. Limited to 36.
P. Tan, S. Verrilli, R. Eberhardt, A. GrantNo textbook information available"
Critical thinking,"Students will develop critical thinking skills, particularly in analyzing and discussing video games from a design perspective.","6.4570[J] Creating Video Games
",1,Fall 2023,Cognitive Thinking,"6.4570[J] Creating Video Games
", ,0,"() 
(Same subject as CMS.611[J])
Prereq: 6.100A or CMS.301
Units: 3-3-6
Lecture: TR2-5 (24-115)

Introduces students to the complexities of working in small, multidisciplinary teams to develop video games. Covers creative design and production methods, stressing design iteration and regular testing across all aspects of game development (design, visual arts, music, fiction, and programming). Assumes a familiarity with current video games, and the ability to discuss games critically. Previous experience in audio design, visual arts, or project management recommended. Limited to 36.
P. Tan, S. Verrilli, R. Eberhardt, A. GrantNo textbook information available"
Oral communication,"Students will develop their ability to effectively communicate their ideas and questions during discussions with technologists, activists, law enforcement agents, journalists, and legal experts.","6.4590[J] Foundations of Information Policy
",1,Fall 2023,,"6.4590[J] Foundations of Information Policy
", ,0,"() 
(Same subject as STS.085[J])(Subject meets with STS.487)
Prereq: Permission of instructor
Units: 3-0-9

Studies the growth of computer and communications technology and the new legal and ethical challenges that reflect tensions between individual rights and societal needs. Topics include computer crime; intellectual property restrictions on software; encryption, privacy, and national security; academic freedom and free speech. Students meet and question technologists, activists, law enforcement agents, journalists, and legal experts. Instruction and practice in oral and written communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
H. Abelson, M. Fischer, D. Weitzner"
Written communication,"Students will enhance their ability to express their thoughts and arguments in written form, as they will be required to complete assignments that involve written communication.","6.4590[J] Foundations of Information Policy
",1,Fall 2023,,"6.4590[J] Foundations of Information Policy
", ,0,"() 
(Same subject as STS.085[J])(Subject meets with STS.487)
Prereq: Permission of instructor
Units: 3-0-9

Studies the growth of computer and communications technology and the new legal and ethical challenges that reflect tensions between individual rights and societal needs. Topics include computer crime; intellectual property restrictions on software; encryption, privacy, and national security; academic freedom and free speech. Students meet and question technologists, activists, law enforcement agents, journalists, and legal experts. Instruction and practice in oral and written communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
H. Abelson, M. Fischer, D. Weitzner"
Research,"Students will learn how to conduct research on various topics related to computer and communications technology, legal and ethical challenges, and information policy.","6.4590[J] Foundations of Information Policy
",1,Fall 2023,Research,"6.4590[J] Foundations of Information Policy
", ,0,"() 
(Same subject as STS.085[J])(Subject meets with STS.487)
Prereq: Permission of instructor
Units: 3-0-9

Studies the growth of computer and communications technology and the new legal and ethical challenges that reflect tensions between individual rights and societal needs. Topics include computer crime; intellectual property restrictions on software; encryption, privacy, and national security; academic freedom and free speech. Students meet and question technologists, activists, law enforcement agents, journalists, and legal experts. Instruction and practice in oral and written communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
H. Abelson, M. Fischer, D. Weitzner"
Critical thinking,"Students will develop their critical thinking skills as they analyze and evaluate the different perspectives and arguments presented by technologists, activists, law enforcement agents, journalists, and legal experts.","6.4590[J] Foundations of Information Policy
",1,Fall 2023,Cognitive Thinking,"6.4590[J] Foundations of Information Policy
", ,0,"() 
(Same subject as STS.085[J])(Subject meets with STS.487)
Prereq: Permission of instructor
Units: 3-0-9

Studies the growth of computer and communications technology and the new legal and ethical challenges that reflect tensions between individual rights and societal needs. Topics include computer crime; intellectual property restrictions on software; encryption, privacy, and national security; academic freedom and free speech. Students meet and question technologists, activists, law enforcement agents, journalists, and legal experts. Instruction and practice in oral and written communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
H. Abelson, M. Fischer, D. Weitzner"
Problem-solving,"Although not explicitly mentioned in the course description, problem-solving is an essential skill that students are likely to develop as they navigate the complex legal and ethical challenges in the field of information policy.","6.4590[J] Foundations of Information Policy
",1,Fall 2023,Problem-solving,"6.4590[J] Foundations of Information Policy
", ,0,"() 
(Same subject as STS.085[J])(Subject meets with STS.487)
Prereq: Permission of instructor
Units: 3-0-9

Studies the growth of computer and communications technology and the new legal and ethical challenges that reflect tensions between individual rights and societal needs. Topics include computer crime; intellectual property restrictions on software; encryption, privacy, and national security; academic freedom and free speech. Students meet and question technologists, activists, law enforcement agents, journalists, and legal experts. Instruction and practice in oral and written communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
H. Abelson, M. Fischer, D. Weitzner"
Speech recognition,Students will learn how to implement and evaluate speech recognition technologies for intelligent multimodal user interfaces.,"6.8510 Intelligent Multimodal User Interfaces
",1,Fall 2023,Speech recognition,"6.8510 Intelligent Multimodal User Interfaces
", ,0,"()
Prereq: (6.1020 and 6.4100) or permission of instructor
Units: 3-0-9

Implementation and evaluation of intelligent multi-modal user interfaces, taught from a combination of hands-on exercises and papers from the original literature. Topics include basic technologies for handling speech, vision, pen-based interaction, and other modalities, as well as various techniques for combining modalities. Substantial readings and a term project, where students build a program that illustrates one or more of the themes of the course.
Staff"
Computer vision,Students will gain proficiency in handling computer vision technologies for intelligent multimodal user interfaces.,"6.8510 Intelligent Multimodal User Interfaces
",1,Fall 2023,Computer vision,"6.8510 Intelligent Multimodal User Interfaces
", ,0,"()
Prereq: (6.1020 and 6.4100) or permission of instructor
Units: 3-0-9

Implementation and evaluation of intelligent multi-modal user interfaces, taught from a combination of hands-on exercises and papers from the original literature. Topics include basic technologies for handling speech, vision, pen-based interaction, and other modalities, as well as various techniques for combining modalities. Substantial readings and a term project, where students build a program that illustrates one or more of the themes of the course.
Staff"
Pen-based interaction,Students will develop the ability to manipulate and utilize pen-based interaction techniques in the design of multimodal user interfaces.,"6.8510 Intelligent Multimodal User Interfaces
",1,Fall 2023,Pen-based interaction,"6.8510 Intelligent Multimodal User Interfaces
", ,0,"()
Prereq: (6.1020 and 6.4100) or permission of instructor
Units: 3-0-9

Implementation and evaluation of intelligent multi-modal user interfaces, taught from a combination of hands-on exercises and papers from the original literature. Topics include basic technologies for handling speech, vision, pen-based interaction, and other modalities, as well as various techniques for combining modalities. Substantial readings and a term project, where students build a program that illustrates one or more of the themes of the course.
Staff"
Modality integration,"Students will learn various techniques for combining different modalities, such as speech, vision, and pen-based interaction, to create intelligent multimodal user interfaces.","6.8510 Intelligent Multimodal User Interfaces
",1,Fall 2023,Modality integration,"6.8510 Intelligent Multimodal User Interfaces
", ,0,"()
Prereq: (6.1020 and 6.4100) or permission of instructor
Units: 3-0-9

Implementation and evaluation of intelligent multi-modal user interfaces, taught from a combination of hands-on exercises and papers from the original literature. Topics include basic technologies for handling speech, vision, pen-based interaction, and other modalities, as well as various techniques for combining modalities. Substantial readings and a term project, where students build a program that illustrates one or more of the themes of the course.
Staff"
Programming,Students will enhance their programming skills through hands-on exercises and the development of a term project.,"6.8510 Intelligent Multimodal User Interfaces
",1,Fall 2023,Programming and Coding,"6.8510 Intelligent Multimodal User Interfaces
", ,0,"()
Prereq: (6.1020 and 6.4100) or permission of instructor
Units: 3-0-9

Implementation and evaluation of intelligent multi-modal user interfaces, taught from a combination of hands-on exercises and papers from the original literature. Topics include basic technologies for handling speech, vision, pen-based interaction, and other modalities, as well as various techniques for combining modalities. Substantial readings and a term project, where students build a program that illustrates one or more of the themes of the course.
Staff"
Data analysis,Students will develop the skill of analyzing data to extract meaningful insights and patterns.,"6.8530 Interactive Data Visualization
",1,Fall 2023,Data Analysis and Research,"6.8530 Interactive Data Visualization
", ,0,"()
Prereq: 6.1020
Units: 3-0-9
Credit cannot also be received for 6.C35, 6.C85, 11.154, 11.454, 11.C35, 11.C85

Interactive visualization provides a means of making sense of a world awash in data. Covers the techniques and algorithms for creating effective visualizations, using principles from graphic design, perceptual psychology, and cognitive science. Short assignments build familiarity with the data analysis and visualization design process, and a final project provides experience designing, implementing, and deploying an explanatory narrative visualization or visual analysis tool to address a concrete challenge.
Staff

Computational Biology"
Visualization design,Students will learn how to design effective visualizations to present data in a clear and understandable manner.,"6.8530 Interactive Data Visualization
",1,Fall 2023,Visualization design,"6.8530 Interactive Data Visualization
", ,0,"()
Prereq: 6.1020
Units: 3-0-9
Credit cannot also be received for 6.C35, 6.C85, 11.154, 11.454, 11.C35, 11.C85

Interactive visualization provides a means of making sense of a world awash in data. Covers the techniques and algorithms for creating effective visualizations, using principles from graphic design, perceptual psychology, and cognitive science. Short assignments build familiarity with the data analysis and visualization design process, and a final project provides experience designing, implementing, and deploying an explanatory narrative visualization or visual analysis tool to address a concrete challenge.
Staff

Computational Biology"
Programming,Students will gain proficiency in programming languages and tools used for data analysis and visualization.,"6.8530 Interactive Data Visualization
",1,Fall 2023,Programming and Coding,"6.8530 Interactive Data Visualization
", ,0,"()
Prereq: 6.1020
Units: 3-0-9
Credit cannot also be received for 6.C35, 6.C85, 11.154, 11.454, 11.C35, 11.C85

Interactive visualization provides a means of making sense of a world awash in data. Covers the techniques and algorithms for creating effective visualizations, using principles from graphic design, perceptual psychology, and cognitive science. Short assignments build familiarity with the data analysis and visualization design process, and a final project provides experience designing, implementing, and deploying an explanatory narrative visualization or visual analysis tool to address a concrete challenge.
Staff

Computational Biology"
Explanatory narrative,Students will learn how to create an explanatory narrative using data visualization to communicate their findings.,"6.8530 Interactive Data Visualization
",1,Fall 2023,Explanatory narrative,"6.8530 Interactive Data Visualization
", ,0,"()
Prereq: 6.1020
Units: 3-0-9
Credit cannot also be received for 6.C35, 6.C85, 11.154, 11.454, 11.C35, 11.C85

Interactive visualization provides a means of making sense of a world awash in data. Covers the techniques and algorithms for creating effective visualizations, using principles from graphic design, perceptual psychology, and cognitive science. Short assignments build familiarity with the data analysis and visualization design process, and a final project provides experience designing, implementing, and deploying an explanatory narrative visualization or visual analysis tool to address a concrete challenge.
Staff

Computational Biology"
Deployment,Students will acquire the skill of deploying interactive visualizations or visual analysis tools for real-world applications.,"6.8530 Interactive Data Visualization
",1,Fall 2023,Deployment,"6.8530 Interactive Data Visualization
", ,0,"()
Prereq: 6.1020
Units: 3-0-9
Credit cannot also be received for 6.C35, 6.C85, 11.154, 11.454, 11.C35, 11.C85

Interactive visualization provides a means of making sense of a world awash in data. Covers the techniques and algorithms for creating effective visualizations, using principles from graphic design, perceptual psychology, and cognitive science. Short assignments build familiarity with the data analysis and visualization design process, and a final project provides experience designing, implementing, and deploying an explanatory narrative visualization or visual analysis tool to address a concrete challenge.
Staff

Computational Biology"
Computational modeling,Students will learn how to build computational models for analyzing evolutionary data. This skill is selected because it is a quantifiable skill that involves manipulating data to accomplish an objective.,"6.4710[J] Evolutionary Biology: Concepts, Models and Computation
",1,Fall 2023,Computational Science,"6.4710[J] Evolutionary Biology: Concepts, Models and Computation
", ,0,"()
(Same subject as 7.33[J])
Prereq: (6.100A and 7.03) or permission of instructor
Units: 3-0-9

Explores and illustrates how evolution explains biology, with an emphasis on computational model building for analyzing evolutionary data. Covers key concepts of biological evolution, including adaptive evolution, neutral evolution, evolution of sex, genomic conflict, speciation, phylogeny and comparative methods, life's history, coevolution, human evolution, and evolution of disease.
R. Berwick, D. Bartel"
Data analysis,Students will develop proficiency in analyzing evolutionary data. This skill is selected because it involves manipulating data to extract meaningful insights and is a key aspect of evolutionary biology.,"6.4710[J] Evolutionary Biology: Concepts, Models and Computation
",1,Fall 2023,Data Analysis and Research,"6.4710[J] Evolutionary Biology: Concepts, Models and Computation
", ,0,"()
(Same subject as 7.33[J])
Prereq: (6.100A and 7.03) or permission of instructor
Units: 3-0-9

Explores and illustrates how evolution explains biology, with an emphasis on computational model building for analyzing evolutionary data. Covers key concepts of biological evolution, including adaptive evolution, neutral evolution, evolution of sex, genomic conflict, speciation, phylogeny and comparative methods, life's history, coevolution, human evolution, and evolution of disease.
R. Berwick, D. Bartel"
Computational biology,Students will develop proficiency in computational biology techniques and tools.,"6.8700[J] Advanced Computational Biology: Genomes, Networks, Evolution
",1,Fall 2023,,"6.8700[J] Advanced Computational Biology: Genomes, Networks, Evolution
", ,0,"()
(Same subject as HST.507[J])(Subject meets with 6.8701)
Prereq: (Biology (GIR), 6.1210, and 6.3700) or permission of instructor
Units: 4-0-8
Lecture: TR1-2.30 (32-144) Recitation: F3 (32-144)

See description for 6.047. Additionally examines recent publications in the areas covered, with research-style assignments. A more substantial final project is expected, which can lead to a thesis and publication.
M. KellisNo textbook information available"
Genomic data analysis,Students will learn how to handle and manipulate genomic data to extract meaningful insights.,"6.8700[J] Advanced Computational Biology: Genomes, Networks, Evolution
",1,Fall 2023,Genomic data analysis,"6.8700[J] Advanced Computational Biology: Genomes, Networks, Evolution
", ,0,"()
(Same subject as HST.507[J])(Subject meets with 6.8701)
Prereq: (Biology (GIR), 6.1210, and 6.3700) or permission of instructor
Units: 4-0-8
Lecture: TR1-2.30 (32-144) Recitation: F3 (32-144)

See description for 6.047. Additionally examines recent publications in the areas covered, with research-style assignments. A more substantial final project is expected, which can lead to a thesis and publication.
M. KellisNo textbook information available"
Network analysis,Students will gain the ability to analyze biological networks and identify patterns and relationships.,"6.8700[J] Advanced Computational Biology: Genomes, Networks, Evolution
",1,Fall 2023,Network Management and Security,"6.8700[J] Advanced Computational Biology: Genomes, Networks, Evolution
", ,0,"()
(Same subject as HST.507[J])(Subject meets with 6.8701)
Prereq: (Biology (GIR), 6.1210, and 6.3700) or permission of instructor
Units: 4-0-8
Lecture: TR1-2.30 (32-144) Recitation: F3 (32-144)

See description for 6.047. Additionally examines recent publications in the areas covered, with research-style assignments. A more substantial final project is expected, which can lead to a thesis and publication.
M. KellisNo textbook information available"
Evolutionary modeling,Students will learn how to use computational methods to model and study evolutionary processes.,"6.8700[J] Advanced Computational Biology: Genomes, Networks, Evolution
",1,Fall 2023,Evolutionary modeling,"6.8700[J] Advanced Computational Biology: Genomes, Networks, Evolution
", ,0,"()
(Same subject as HST.507[J])(Subject meets with 6.8701)
Prereq: (Biology (GIR), 6.1210, and 6.3700) or permission of instructor
Units: 4-0-8
Lecture: TR1-2.30 (32-144) Recitation: F3 (32-144)

See description for 6.047. Additionally examines recent publications in the areas covered, with research-style assignments. A more substantial final project is expected, which can lead to a thesis and publication.
M. KellisNo textbook information available"
Programming,"Students will develop programming skills, particularly in languages commonly used in computational biology such as Python or R.","6.8700[J] Advanced Computational Biology: Genomes, Networks, Evolution
",1,Fall 2023,Programming and Coding,"6.8700[J] Advanced Computational Biology: Genomes, Networks, Evolution
", ,0,"()
(Same subject as HST.507[J])(Subject meets with 6.8701)
Prereq: (Biology (GIR), 6.1210, and 6.3700) or permission of instructor
Units: 4-0-8
Lecture: TR1-2.30 (32-144) Recitation: F3 (32-144)

See description for 6.047. Additionally examines recent publications in the areas covered, with research-style assignments. A more substantial final project is expected, which can lead to a thesis and publication.
M. KellisNo textbook information available"
Algorithm design,Students will learn the principles of algorithm design and how to apply them in computational biology.,"6.8701 Computational Biology: Genomes, Networks, Evolution
",1,Fall 2023,Algorithm Design and Analysis,"6.8701 Computational Biology: Genomes, Networks, Evolution
", ,0,"()
(Subject meets with 6.8700[J], HST.507[J])
Prereq: (Biology (GIR), 6.1210, and 6.3700) or permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (32-144) Recitation: F3 (32-144)

Covers the algorithmic and machine learning foundations of computational biology, combining theory with practice. Principles of algorithm design, influential problems and techniques, and analysis of large-scale biological datasets. Topics include (a) genomes: sequence analysis, gene finding, RNA folding, genome alignment and assembly, database search; (b) networks: gene expression analysis, regulatory motifs, biological network analysis; (c) evolution: comparative genomics, phylogenetics, genome duplication, genome rearrangements, evolutionary theory. These are coupled with fundamental algorithmic techniques including: dynamic programming, hashing, Gibbs sampling, expectation maximization, hidden Markov models, stochastic context-free grammars, graph clustering, dimensionality reduction, Bayesian networks.
M. KellisNo textbook information available"
Sequence analysis,"Students will gain proficiency in analyzing biological sequences, such as DNA and RNA, using computational methods.","6.8701 Computational Biology: Genomes, Networks, Evolution
",1,Fall 2023,Sequence analysis,"6.8701 Computational Biology: Genomes, Networks, Evolution
", ,0,"()
(Subject meets with 6.8700[J], HST.507[J])
Prereq: (Biology (GIR), 6.1210, and 6.3700) or permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (32-144) Recitation: F3 (32-144)

Covers the algorithmic and machine learning foundations of computational biology, combining theory with practice. Principles of algorithm design, influential problems and techniques, and analysis of large-scale biological datasets. Topics include (a) genomes: sequence analysis, gene finding, RNA folding, genome alignment and assembly, database search; (b) networks: gene expression analysis, regulatory motifs, biological network analysis; (c) evolution: comparative genomics, phylogenetics, genome duplication, genome rearrangements, evolutionary theory. These are coupled with fundamental algorithmic techniques including: dynamic programming, hashing, Gibbs sampling, expectation maximization, hidden Markov models, stochastic context-free grammars, graph clustering, dimensionality reduction, Bayesian networks.
M. KellisNo textbook information available"
Gene finding,Students will learn how to identify genes within a genome using computational techniques.,"6.8701 Computational Biology: Genomes, Networks, Evolution
",1,Fall 2023,Gene finding,"6.8701 Computational Biology: Genomes, Networks, Evolution
", ,0,"()
(Subject meets with 6.8700[J], HST.507[J])
Prereq: (Biology (GIR), 6.1210, and 6.3700) or permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (32-144) Recitation: F3 (32-144)

Covers the algorithmic and machine learning foundations of computational biology, combining theory with practice. Principles of algorithm design, influential problems and techniques, and analysis of large-scale biological datasets. Topics include (a) genomes: sequence analysis, gene finding, RNA folding, genome alignment and assembly, database search; (b) networks: gene expression analysis, regulatory motifs, biological network analysis; (c) evolution: comparative genomics, phylogenetics, genome duplication, genome rearrangements, evolutionary theory. These are coupled with fundamental algorithmic techniques including: dynamic programming, hashing, Gibbs sampling, expectation maximization, hidden Markov models, stochastic context-free grammars, graph clustering, dimensionality reduction, Bayesian networks.
M. KellisNo textbook information available"
Database search,Students will develop the skill of searching and retrieving information from biological databases.,"6.8701 Computational Biology: Genomes, Networks, Evolution
",1,Fall 2023,Database-related tasks,"6.8701 Computational Biology: Genomes, Networks, Evolution
", ,0,"()
(Subject meets with 6.8700[J], HST.507[J])
Prereq: (Biology (GIR), 6.1210, and 6.3700) or permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (32-144) Recitation: F3 (32-144)

Covers the algorithmic and machine learning foundations of computational biology, combining theory with practice. Principles of algorithm design, influential problems and techniques, and analysis of large-scale biological datasets. Topics include (a) genomes: sequence analysis, gene finding, RNA folding, genome alignment and assembly, database search; (b) networks: gene expression analysis, regulatory motifs, biological network analysis; (c) evolution: comparative genomics, phylogenetics, genome duplication, genome rearrangements, evolutionary theory. These are coupled with fundamental algorithmic techniques including: dynamic programming, hashing, Gibbs sampling, expectation maximization, hidden Markov models, stochastic context-free grammars, graph clustering, dimensionality reduction, Bayesian networks.
M. KellisNo textbook information available"
Genome alignment and assembly,Students will learn how to align and assemble genomic sequences to understand their structure and organization.,"6.8701 Computational Biology: Genomes, Networks, Evolution
",1,Fall 2023,Genome alignment and assembly,"6.8701 Computational Biology: Genomes, Networks, Evolution
", ,0,"()
(Subject meets with 6.8700[J], HST.507[J])
Prereq: (Biology (GIR), 6.1210, and 6.3700) or permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (32-144) Recitation: F3 (32-144)

Covers the algorithmic and machine learning foundations of computational biology, combining theory with practice. Principles of algorithm design, influential problems and techniques, and analysis of large-scale biological datasets. Topics include (a) genomes: sequence analysis, gene finding, RNA folding, genome alignment and assembly, database search; (b) networks: gene expression analysis, regulatory motifs, biological network analysis; (c) evolution: comparative genomics, phylogenetics, genome duplication, genome rearrangements, evolutionary theory. These are coupled with fundamental algorithmic techniques including: dynamic programming, hashing, Gibbs sampling, expectation maximization, hidden Markov models, stochastic context-free grammars, graph clustering, dimensionality reduction, Bayesian networks.
M. KellisNo textbook information available"
Machine learning model selection,Students will learn how to select the appropriate machine learning models for different life sciences problems.,"6.8710[J] Computational Systems Biology: Deep Learning in the Life Sciences
",1,Fall 2023,,"6.8710[J] Computational Systems Biology: Deep Learning in the Life Sciences
", ,0,"()
(Same subject as HST.506[J])(Subject meets with 6.8711[J], 20.390[J], 20.490)
Prereq: Biology (GIR) and (6.3700 or 18.600)
Units: 3-0-9

Presents innovative approaches to computational problems in the life sciences, focusing on deep learning-based approaches with comparisons to conventional methods. Topics include protein-DNA interaction, chromatin accessibility, regulatory variant interpretation, medical image understanding, medical record understanding, therapeutic design, and experiment design (the choice and interpretation of interventions). Focuses on machine learning model selection, robustness, and interpretation. Teams complete a multidisciplinary final research project using TensorFlow or other framework. Provides a comprehensive introduction to each life sciences problem, but relies upon students understanding probabilistic problem formulations. Students taking graduate version complete additional assignments.
Staff"
TensorFlow,"Students will gain proficiency in using TensorFlow, a popular deep learning framework.","6.8710[J] Computational Systems Biology: Deep Learning in the Life Sciences
",1,Fall 2023,TensorFlow,"6.8710[J] Computational Systems Biology: Deep Learning in the Life Sciences
", ,0,"()
(Same subject as HST.506[J])(Subject meets with 6.8711[J], 20.390[J], 20.490)
Prereq: Biology (GIR) and (6.3700 or 18.600)
Units: 3-0-9

Presents innovative approaches to computational problems in the life sciences, focusing on deep learning-based approaches with comparisons to conventional methods. Topics include protein-DNA interaction, chromatin accessibility, regulatory variant interpretation, medical image understanding, medical record understanding, therapeutic design, and experiment design (the choice and interpretation of interventions). Focuses on machine learning model selection, robustness, and interpretation. Teams complete a multidisciplinary final research project using TensorFlow or other framework. Provides a comprehensive introduction to each life sciences problem, but relies upon students understanding probabilistic problem formulations. Students taking graduate version complete additional assignments.
Staff"
Data interpretation,Students will develop the skill of interpreting data in the context of life sciences problems.,"6.8710[J] Computational Systems Biology: Deep Learning in the Life Sciences
",1,Fall 2023,Data Analysis and Research,"6.8710[J] Computational Systems Biology: Deep Learning in the Life Sciences
", ,0,"()
(Same subject as HST.506[J])(Subject meets with 6.8711[J], 20.390[J], 20.490)
Prereq: Biology (GIR) and (6.3700 or 18.600)
Units: 3-0-9

Presents innovative approaches to computational problems in the life sciences, focusing on deep learning-based approaches with comparisons to conventional methods. Topics include protein-DNA interaction, chromatin accessibility, regulatory variant interpretation, medical image understanding, medical record understanding, therapeutic design, and experiment design (the choice and interpretation of interventions). Focuses on machine learning model selection, robustness, and interpretation. Teams complete a multidisciplinary final research project using TensorFlow or other framework. Provides a comprehensive introduction to each life sciences problem, but relies upon students understanding probabilistic problem formulations. Students taking graduate version complete additional assignments.
Staff"
Experiment design,"Students will learn how to design experiments for life sciences research, including the choice and interpretation of interventions.","6.8710[J] Computational Systems Biology: Deep Learning in the Life Sciences
",1,Fall 2023,,"6.8710[J] Computational Systems Biology: Deep Learning in the Life Sciences
", ,0,"()
(Same subject as HST.506[J])(Subject meets with 6.8711[J], 20.390[J], 20.490)
Prereq: Biology (GIR) and (6.3700 or 18.600)
Units: 3-0-9

Presents innovative approaches to computational problems in the life sciences, focusing on deep learning-based approaches with comparisons to conventional methods. Topics include protein-DNA interaction, chromatin accessibility, regulatory variant interpretation, medical image understanding, medical record understanding, therapeutic design, and experiment design (the choice and interpretation of interventions). Focuses on machine learning model selection, robustness, and interpretation. Teams complete a multidisciplinary final research project using TensorFlow or other framework. Provides a comprehensive introduction to each life sciences problem, but relies upon students understanding probabilistic problem formulations. Students taking graduate version complete additional assignments.
Staff"
Robustness analysis,Students will learn how to assess the robustness of machine learning models in the context of life sciences applications.,"6.8710[J] Computational Systems Biology: Deep Learning in the Life Sciences
",1,Fall 2023,,"6.8710[J] Computational Systems Biology: Deep Learning in the Life Sciences
", ,0,"()
(Same subject as HST.506[J])(Subject meets with 6.8711[J], 20.390[J], 20.490)
Prereq: Biology (GIR) and (6.3700 or 18.600)
Units: 3-0-9

Presents innovative approaches to computational problems in the life sciences, focusing on deep learning-based approaches with comparisons to conventional methods. Topics include protein-DNA interaction, chromatin accessibility, regulatory variant interpretation, medical image understanding, medical record understanding, therapeutic design, and experiment design (the choice and interpretation of interventions). Focuses on machine learning model selection, robustness, and interpretation. Teams complete a multidisciplinary final research project using TensorFlow or other framework. Provides a comprehensive introduction to each life sciences problem, but relies upon students understanding probabilistic problem formulations. Students taking graduate version complete additional assignments.
Staff"
Machine learning model selection,Students will learn how to select the appropriate machine learning models for different life sciences problems.,"6.8711[J] Computational Systems Biology: Deep Learning in the Life Sciences
",1,Fall 2023,Machine Learning,"6.8711[J] Computational Systems Biology: Deep Learning in the Life Sciences
", ,0,"()
(Same subject as 20.390[J])(Subject meets with 6.8710[J], 20.490, HST.506[J])
Prereq: (7.05 and (6.100B or 6.9080)) or permission of instructor
Units: 3-0-9

Presents innovative approaches to computational problems in the life sciences, focusing on deep learning-based approaches with comparisons to conventional methods. Topics include protein-DNA interaction, chromatin accessibility, regulatory variant interpretation, medical image understanding, medical record understanding, therapeutic design, and experiment design (the choice and interpretation of interventions). Focuses on machine learning model selection, robustness, and interpretation. Teams complete a multidisciplinary final research project using TensorFlow or other framework. Provides a comprehensive introduction to each life sciences problem, but relies upon students understanding probabilistic problem formulations. Students taking graduate version complete additional assignments.
Staff"
TensorFlow,"Students will gain proficiency in using TensorFlow, a popular deep learning framework.","6.8711[J] Computational Systems Biology: Deep Learning in the Life Sciences
",1,Fall 2023,TensorFlow,"6.8711[J] Computational Systems Biology: Deep Learning in the Life Sciences
", ,0,"()
(Same subject as 20.390[J])(Subject meets with 6.8710[J], 20.490, HST.506[J])
Prereq: (7.05 and (6.100B or 6.9080)) or permission of instructor
Units: 3-0-9

Presents innovative approaches to computational problems in the life sciences, focusing on deep learning-based approaches with comparisons to conventional methods. Topics include protein-DNA interaction, chromatin accessibility, regulatory variant interpretation, medical image understanding, medical record understanding, therapeutic design, and experiment design (the choice and interpretation of interventions). Focuses on machine learning model selection, robustness, and interpretation. Teams complete a multidisciplinary final research project using TensorFlow or other framework. Provides a comprehensive introduction to each life sciences problem, but relies upon students understanding probabilistic problem formulations. Students taking graduate version complete additional assignments.
Staff"
Interpretation,Students will develop the skill of interpreting the results and outputs of machine learning models in the context of life sciences problems.,"6.8711[J] Computational Systems Biology: Deep Learning in the Life Sciences
",1,Fall 2023,Abstract Interpretation,"6.8711[J] Computational Systems Biology: Deep Learning in the Life Sciences
", ,0,"()
(Same subject as 20.390[J])(Subject meets with 6.8710[J], 20.490, HST.506[J])
Prereq: (7.05 and (6.100B or 6.9080)) or permission of instructor
Units: 3-0-9

Presents innovative approaches to computational problems in the life sciences, focusing on deep learning-based approaches with comparisons to conventional methods. Topics include protein-DNA interaction, chromatin accessibility, regulatory variant interpretation, medical image understanding, medical record understanding, therapeutic design, and experiment design (the choice and interpretation of interventions). Focuses on machine learning model selection, robustness, and interpretation. Teams complete a multidisciplinary final research project using TensorFlow or other framework. Provides a comprehensive introduction to each life sciences problem, but relies upon students understanding probabilistic problem formulations. Students taking graduate version complete additional assignments.
Staff"
Experiment design,Students will learn how to design experiments and interventions for life sciences research.,"6.8711[J] Computational Systems Biology: Deep Learning in the Life Sciences
",1,Fall 2023,Experimental Design and Methods,"6.8711[J] Computational Systems Biology: Deep Learning in the Life Sciences
", ,0,"()
(Same subject as 20.390[J])(Subject meets with 6.8710[J], 20.490, HST.506[J])
Prereq: (7.05 and (6.100B or 6.9080)) or permission of instructor
Units: 3-0-9

Presents innovative approaches to computational problems in the life sciences, focusing on deep learning-based approaches with comparisons to conventional methods. Topics include protein-DNA interaction, chromatin accessibility, regulatory variant interpretation, medical image understanding, medical record understanding, therapeutic design, and experiment design (the choice and interpretation of interventions). Focuses on machine learning model selection, robustness, and interpretation. Teams complete a multidisciplinary final research project using TensorFlow or other framework. Provides a comprehensive introduction to each life sciences problem, but relies upon students understanding probabilistic problem formulations. Students taking graduate version complete additional assignments.
Staff"
Robustness,Students will learn how to ensure the robustness and reliability of machine learning models in the life sciences field.,"6.8711[J] Computational Systems Biology: Deep Learning in the Life Sciences
",1,Fall 2023,Robustness Analysis,"6.8711[J] Computational Systems Biology: Deep Learning in the Life Sciences
", ,0,"()
(Same subject as 20.390[J])(Subject meets with 6.8710[J], 20.490, HST.506[J])
Prereq: (7.05 and (6.100B or 6.9080)) or permission of instructor
Units: 3-0-9

Presents innovative approaches to computational problems in the life sciences, focusing on deep learning-based approaches with comparisons to conventional methods. Topics include protein-DNA interaction, chromatin accessibility, regulatory variant interpretation, medical image understanding, medical record understanding, therapeutic design, and experiment design (the choice and interpretation of interventions). Focuses on machine learning model selection, robustness, and interpretation. Teams complete a multidisciplinary final research project using TensorFlow or other framework. Provides a comprehensive introduction to each life sciences problem, but relies upon students understanding probabilistic problem formulations. Students taking graduate version complete additional assignments.
Staff"
Quantitative analysis,Students will develop the skill of quantitative analysis as they learn to characterize and model cellular networks in synthetic biology.,"6.8720[J] Principles of Synthetic Biology
",1,Fall 2023,Data Analysis and Research,"6.8720[J] Principles of Synthetic Biology
", ,0,"()
(Same subject as 20.405[J])(Subject meets with 6.8721[J], 20.305[J])
Prereq: None
Units: 3-0-9
Lecture: TR2 (3-333)

Introduces the basics of synthetic biology, including quantitative cellular network characterization and modeling. Considers the discovery and genetic factoring of useful cellular activities into reusable functions for design. Emphasizes the principles of biomolecular system design and diagnosis of designed systems. Illustrates cutting-edge applications in synthetic biology and enhances skills in analysis and design of synthetic biological applications. Students taking graduate version complete additional assignments.
R. WeissNo textbook information available"
Biomolecular system design,Students will gain proficiency in the skill of designing biomolecular systems for synthetic biology applications.,"6.8720[J] Principles of Synthetic Biology
",1,Fall 2023,Biomolecular system design,"6.8720[J] Principles of Synthetic Biology
", ,0,"()
(Same subject as 20.405[J])(Subject meets with 6.8721[J], 20.305[J])
Prereq: None
Units: 3-0-9
Lecture: TR2 (3-333)

Introduces the basics of synthetic biology, including quantitative cellular network characterization and modeling. Considers the discovery and genetic factoring of useful cellular activities into reusable functions for design. Emphasizes the principles of biomolecular system design and diagnosis of designed systems. Illustrates cutting-edge applications in synthetic biology and enhances skills in analysis and design of synthetic biological applications. Students taking graduate version complete additional assignments.
R. WeissNo textbook information available"
Problem-solving,Students will enhance their problem-solving skills as they work on analysis and design projects in synthetic biology.,"6.8720[J] Principles of Synthetic Biology
",1,Fall 2023,Problem-solving,"6.8720[J] Principles of Synthetic Biology
", ,0,"()
(Same subject as 20.405[J])(Subject meets with 6.8721[J], 20.305[J])
Prereq: None
Units: 3-0-9
Lecture: TR2 (3-333)

Introduces the basics of synthetic biology, including quantitative cellular network characterization and modeling. Considers the discovery and genetic factoring of useful cellular activities into reusable functions for design. Emphasizes the principles of biomolecular system design and diagnosis of designed systems. Illustrates cutting-edge applications in synthetic biology and enhances skills in analysis and design of synthetic biological applications. Students taking graduate version complete additional assignments.
R. WeissNo textbook information available"
Data modeling,Students will learn how to manipulate and handle data in order to model and analyze synthetic biological systems.,"6.8720[J] Principles of Synthetic Biology
",1,Fall 2023,Computer Systems,"6.8720[J] Principles of Synthetic Biology
", ,0,"()
(Same subject as 20.405[J])(Subject meets with 6.8721[J], 20.305[J])
Prereq: None
Units: 3-0-9
Lecture: TR2 (3-333)

Introduces the basics of synthetic biology, including quantitative cellular network characterization and modeling. Considers the discovery and genetic factoring of useful cellular activities into reusable functions for design. Emphasizes the principles of biomolecular system design and diagnosis of designed systems. Illustrates cutting-edge applications in synthetic biology and enhances skills in analysis and design of synthetic biological applications. Students taking graduate version complete additional assignments.
R. WeissNo textbook information available"
Programming,Students will develop programming skills as they work on designing and diagnosing synthetic biological systems.,"6.8720[J] Principles of Synthetic Biology
",1,Fall 2023,Programming and Coding,"6.8720[J] Principles of Synthetic Biology
", ,0,"()
(Same subject as 20.405[J])(Subject meets with 6.8721[J], 20.305[J])
Prereq: None
Units: 3-0-9
Lecture: TR2 (3-333)

Introduces the basics of synthetic biology, including quantitative cellular network characterization and modeling. Considers the discovery and genetic factoring of useful cellular activities into reusable functions for design. Emphasizes the principles of biomolecular system design and diagnosis of designed systems. Illustrates cutting-edge applications in synthetic biology and enhances skills in analysis and design of synthetic biological applications. Students taking graduate version complete additional assignments.
R. WeissNo textbook information available"
Quantitative analysis,Students will develop the skill of quantitative analysis as they learn to characterize and model cellular networks in synthetic biology.,"6.8721[J] Principles of Synthetic Biology
",1,Fall 2023,Data Analysis and Research,"6.8721[J] Principles of Synthetic Biology
", ,0,"()
(Same subject as 20.305[J])(Subject meets with 6.8720[J], 20.405[J])
Prereq: None
Units: 3-0-9
Lecture: TR2 (3-333)

Introduces the basics of synthetic biology, including quantitative cellular network characterization and modeling. Considers the discovery and genetic factoring of useful cellular activities into reusable functions for design. Emphasizes the principles of biomolecular system design and diagnosis of designed systems. Illustrates cutting-edge applications in synthetic biology and enhances skills in analysis and design of synthetic biological applications. Students taking graduate version complete additional assignments.
R. WeissNo textbook information available

Biomedical & Health"
Biomolecular system design,Students will gain proficiency in designing biomolecular systems for synthetic biological applications.,"6.8721[J] Principles of Synthetic Biology
",1,Fall 2023,Biomolecular system design,"6.8721[J] Principles of Synthetic Biology
", ,0,"()
(Same subject as 20.305[J])(Subject meets with 6.8720[J], 20.405[J])
Prereq: None
Units: 3-0-9
Lecture: TR2 (3-333)

Introduces the basics of synthetic biology, including quantitative cellular network characterization and modeling. Considers the discovery and genetic factoring of useful cellular activities into reusable functions for design. Emphasizes the principles of biomolecular system design and diagnosis of designed systems. Illustrates cutting-edge applications in synthetic biology and enhances skills in analysis and design of synthetic biological applications. Students taking graduate version complete additional assignments.
R. WeissNo textbook information available

Biomedical & Health"
Problem-solving,Students will enhance their problem-solving skills as they work on analyzing and designing synthetic biological applications.,"6.8721[J] Principles of Synthetic Biology
",1,Fall 2023,Problem-solving,"6.8721[J] Principles of Synthetic Biology
", ,0,"()
(Same subject as 20.305[J])(Subject meets with 6.8720[J], 20.405[J])
Prereq: None
Units: 3-0-9
Lecture: TR2 (3-333)

Introduces the basics of synthetic biology, including quantitative cellular network characterization and modeling. Considers the discovery and genetic factoring of useful cellular activities into reusable functions for design. Emphasizes the principles of biomolecular system design and diagnosis of designed systems. Illustrates cutting-edge applications in synthetic biology and enhances skills in analysis and design of synthetic biological applications. Students taking graduate version complete additional assignments.
R. WeissNo textbook information available

Biomedical & Health"
Data analysis,Students will learn how to handle and manipulate data in order to analyze and design synthetic biological systems.,"6.8721[J] Principles of Synthetic Biology
",1,Fall 2023,Data Analysis and Research,"6.8721[J] Principles of Synthetic Biology
", ,0,"()
(Same subject as 20.305[J])(Subject meets with 6.8720[J], 20.405[J])
Prereq: None
Units: 3-0-9
Lecture: TR2 (3-333)

Introduces the basics of synthetic biology, including quantitative cellular network characterization and modeling. Considers the discovery and genetic factoring of useful cellular activities into reusable functions for design. Emphasizes the principles of biomolecular system design and diagnosis of designed systems. Illustrates cutting-edge applications in synthetic biology and enhances skills in analysis and design of synthetic biological applications. Students taking graduate version complete additional assignments.
R. WeissNo textbook information available

Biomedical & Health"
Research skills,Students will develop research skills as they explore cutting-edge applications in synthetic biology and engage in additional assignments in the graduate version of the course.,"6.8721[J] Principles of Synthetic Biology
",1,Fall 2023,Research Skills and Analysis,"6.8721[J] Principles of Synthetic Biology
", ,0,"()
(Same subject as 20.305[J])(Subject meets with 6.8720[J], 20.405[J])
Prereq: None
Units: 3-0-9
Lecture: TR2 (3-333)

Introduces the basics of synthetic biology, including quantitative cellular network characterization and modeling. Considers the discovery and genetic factoring of useful cellular activities into reusable functions for design. Emphasizes the principles of biomolecular system design and diagnosis of designed systems. Illustrates cutting-edge applications in synthetic biology and enhances skills in analysis and design of synthetic biological applications. Students taking graduate version complete additional assignments.
R. WeissNo textbook information available

Biomedical & Health"
Systems modeling,Students will learn how to create models of the human cardiovascular system and medical imaging using systems modeling techniques.,"6.4800[J] Biomedical Systems: Modeling and Inference
",1,Fall 2023,,"6.4800[J] Biomedical Systems: Modeling and Inference
", ,0,"()
(Same subject as 22.54[J])
Prereq: (6.3100 and (18.06 or 18.C06)) or permission of instructor
Units: 4-4-4

Medically motivated examples of problems in human health that engage students in systems modeling, signal analysis and inference, and design. Content draws on two domains, first by establishing a model of the human cardiovascular system with signal analysis and inference applications of electrocardiograms in health and disease. In a second topic, medical imaging by MRI is motivated by examples of common clinical decision making, followed by laboratory work with technology and instrumentation with the functionality of commercial diagnostic scanners. Students apply concepts from lectures in labs for data collection for image reconstruction, image analysis, and inference by their own design. Labs further include kits for interactive and portable low-cost devices that can be assembled by the students to demonstrate fundamental building blocks of an MRI system.
Staff"
Signal analysis,"Students will gain proficiency in analyzing signals, specifically electrocardiograms and medical imaging data, to extract meaningful information.","6.4800[J] Biomedical Systems: Modeling and Inference
",1,Fall 2023,Signal analysis,"6.4800[J] Biomedical Systems: Modeling and Inference
", ,0,"()
(Same subject as 22.54[J])
Prereq: (6.3100 and (18.06 or 18.C06)) or permission of instructor
Units: 4-4-4

Medically motivated examples of problems in human health that engage students in systems modeling, signal analysis and inference, and design. Content draws on two domains, first by establishing a model of the human cardiovascular system with signal analysis and inference applications of electrocardiograms in health and disease. In a second topic, medical imaging by MRI is motivated by examples of common clinical decision making, followed by laboratory work with technology and instrumentation with the functionality of commercial diagnostic scanners. Students apply concepts from lectures in labs for data collection for image reconstruction, image analysis, and inference by their own design. Labs further include kits for interactive and portable low-cost devices that can be assembled by the students to demonstrate fundamental building blocks of an MRI system.
Staff"
Design,"Students will develop the ability to design experiments and projects related to biomedical systems, including data collection, image reconstruction, and analysis.","6.4800[J] Biomedical Systems: Modeling and Inference
",1,Fall 2023,Design,"6.4800[J] Biomedical Systems: Modeling and Inference
", ,0,"()
(Same subject as 22.54[J])
Prereq: (6.3100 and (18.06 or 18.C06)) or permission of instructor
Units: 4-4-4

Medically motivated examples of problems in human health that engage students in systems modeling, signal analysis and inference, and design. Content draws on two domains, first by establishing a model of the human cardiovascular system with signal analysis and inference applications of electrocardiograms in health and disease. In a second topic, medical imaging by MRI is motivated by examples of common clinical decision making, followed by laboratory work with technology and instrumentation with the functionality of commercial diagnostic scanners. Students apply concepts from lectures in labs for data collection for image reconstruction, image analysis, and inference by their own design. Labs further include kits for interactive and portable low-cost devices that can be assembled by the students to demonstrate fundamental building blocks of an MRI system.
Staff"
Data collection,"Students will learn how to collect data for image reconstruction, image analysis, and inference in the context of biomedical systems.","6.4800[J] Biomedical Systems: Modeling and Inference
",1,Fall 2023,Data Analysis and Research,"6.4800[J] Biomedical Systems: Modeling and Inference
", ,0,"()
(Same subject as 22.54[J])
Prereq: (6.3100 and (18.06 or 18.C06)) or permission of instructor
Units: 4-4-4

Medically motivated examples of problems in human health that engage students in systems modeling, signal analysis and inference, and design. Content draws on two domains, first by establishing a model of the human cardiovascular system with signal analysis and inference applications of electrocardiograms in health and disease. In a second topic, medical imaging by MRI is motivated by examples of common clinical decision making, followed by laboratory work with technology and instrumentation with the functionality of commercial diagnostic scanners. Students apply concepts from lectures in labs for data collection for image reconstruction, image analysis, and inference by their own design. Labs further include kits for interactive and portable low-cost devices that can be assembled by the students to demonstrate fundamental building blocks of an MRI system.
Staff"
Assembly,"Students will acquire the skill of assembling interactive and portable low-cost devices, such as kits, to demonstrate the fundamental building blocks of an MRI system.","6.4800[J] Biomedical Systems: Modeling and Inference
",1,Fall 2023,Assembly,"6.4800[J] Biomedical Systems: Modeling and Inference
", ,0,"()
(Same subject as 22.54[J])
Prereq: (6.3100 and (18.06 or 18.C06)) or permission of instructor
Units: 4-4-4

Medically motivated examples of problems in human health that engage students in systems modeling, signal analysis and inference, and design. Content draws on two domains, first by establishing a model of the human cardiovascular system with signal analysis and inference applications of electrocardiograms in health and disease. In a second topic, medical imaging by MRI is motivated by examples of common clinical decision making, followed by laboratory work with technology and instrumentation with the functionality of commercial diagnostic scanners. Students apply concepts from lectures in labs for data collection for image reconstruction, image analysis, and inference by their own design. Labs further include kits for interactive and portable low-cost devices that can be assembled by the students to demonstrate fundamental building blocks of an MRI system.
Staff"
Biophysics,Students will gain proficiency in understanding the principles and concepts of biophysics as it relates to cellular neurophysiology and computing.,"6.4810[J] Cellular Neurophysiology and Computing
",1,Fall 2023,Biophysics,"6.4810[J] Cellular Neurophysiology and Computing
", ,0,"()
(Same subject as 2.791[J], 9.21[J], 20.370[J])(Subject meets with 2.794[J], 6.4812[J], 9.021[J], 20.470[J], HST.541[J])
Prereq: (Physics II (GIR), 18.03, and (2.005, 6.2000, 6.3000, 10.301, or 20.110)) or permission of instructor
Units: 5-2-5

Integrated overview of the biophysics of cells from prokaryotes to neurons, with a focus on mass transport and electrical signal generation across cell membrane. First third of course focuses on mass transport through membranes: diffusion, osmosis, chemically mediated, and active transport. Second third focuses on electrical properties of cells: ion transport to action potential generation and propagation in electrically excitable cells. Synaptic transmission. Electrical properties interpreted via kinetic and molecular properties of single voltage-gated ion channels. Final third focuses on biophysics of synaptic transmission and introduction to neural computing. Laboratory and computer exercises illustrate the concepts. Students taking graduate version complete different assignments. Preference to juniors and seniors.
Staff"
Laboratory techniques,Students will develop skills in conducting laboratory experiments and exercises to illustrate the concepts learned in the course.,"6.4810[J] Cellular Neurophysiology and Computing
",1,Fall 2023,,"6.4810[J] Cellular Neurophysiology and Computing
", ,0,"()
(Same subject as 2.791[J], 9.21[J], 20.370[J])(Subject meets with 2.794[J], 6.4812[J], 9.021[J], 20.470[J], HST.541[J])
Prereq: (Physics II (GIR), 18.03, and (2.005, 6.2000, 6.3000, 10.301, or 20.110)) or permission of instructor
Units: 5-2-5

Integrated overview of the biophysics of cells from prokaryotes to neurons, with a focus on mass transport and electrical signal generation across cell membrane. First third of course focuses on mass transport through membranes: diffusion, osmosis, chemically mediated, and active transport. Second third focuses on electrical properties of cells: ion transport to action potential generation and propagation in electrically excitable cells. Synaptic transmission. Electrical properties interpreted via kinetic and molecular properties of single voltage-gated ion channels. Final third focuses on biophysics of synaptic transmission and introduction to neural computing. Laboratory and computer exercises illustrate the concepts. Students taking graduate version complete different assignments. Preference to juniors and seniors.
Staff"
Biophysics,Students will gain proficiency in understanding the principles and concepts of biophysics.,"6.4812[J] Cellular Neurophysiology and Computing
",1,Fall 2023,Biophysics,"6.4812[J] Cellular Neurophysiology and Computing
", ,0,"()
(Same subject as 2.794[J], 9.021[J], 20.470[J], HST.541[J])(Subject meets with 2.791[J], 6.4810[J], 9.21[J], 20.370[J])
Prereq: (Physics II (GIR), 18.03, and (2.005, 6.2000, 6.3000, 10.301, or 20.110)) or permission of instructor
Units: 5-2-5

Integrated overview of the biophysics of cells from prokaryotes to neurons, with a focus on mass transport and electrical signal generation across cell membrane. First third of course focuses on mass transport through membranes: diffusion, osmosis, chemically mediated, and active transport. Second third focuses on electrical properties of cells: ion transport to action potential generation and propagation in electrically excitable cells. Synaptic transmission. Electrical properties interpreted via kinetic and molecular properties of single voltage-gated ion channels. Final third focuses on biophysics of synaptic transmission and introduction to neural computing. Laboratory and computer exercises illustrate the concepts. Students taking graduate version complete different assignments.
Staff"
Laboratory techniques,Students will develop skills in conducting laboratory experiments and exercises related to cellular neurophysiology.,"6.4812[J] Cellular Neurophysiology and Computing
",1,Fall 2023,Laboratory and Experimental Techniques,"6.4812[J] Cellular Neurophysiology and Computing
", ,0,"()
(Same subject as 2.794[J], 9.021[J], 20.470[J], HST.541[J])(Subject meets with 2.791[J], 6.4810[J], 9.21[J], 20.370[J])
Prereq: (Physics II (GIR), 18.03, and (2.005, 6.2000, 6.3000, 10.301, or 20.110)) or permission of instructor
Units: 5-2-5

Integrated overview of the biophysics of cells from prokaryotes to neurons, with a focus on mass transport and electrical signal generation across cell membrane. First third of course focuses on mass transport through membranes: diffusion, osmosis, chemically mediated, and active transport. Second third focuses on electrical properties of cells: ion transport to action potential generation and propagation in electrically excitable cells. Synaptic transmission. Electrical properties interpreted via kinetic and molecular properties of single voltage-gated ion channels. Final third focuses on biophysics of synaptic transmission and introduction to neural computing. Laboratory and computer exercises illustrate the concepts. Students taking graduate version complete different assignments.
Staff"
Data analysis,Students will learn how to analyze and interpret data collected from experiments and exercises.,"6.4812[J] Cellular Neurophysiology and Computing
",1,Fall 2023,Data Analysis and Research,"6.4812[J] Cellular Neurophysiology and Computing
", ,0,"()
(Same subject as 2.794[J], 9.021[J], 20.470[J], HST.541[J])(Subject meets with 2.791[J], 6.4810[J], 9.21[J], 20.370[J])
Prereq: (Physics II (GIR), 18.03, and (2.005, 6.2000, 6.3000, 10.301, or 20.110)) or permission of instructor
Units: 5-2-5

Integrated overview of the biophysics of cells from prokaryotes to neurons, with a focus on mass transport and electrical signal generation across cell membrane. First third of course focuses on mass transport through membranes: diffusion, osmosis, chemically mediated, and active transport. Second third focuses on electrical properties of cells: ion transport to action potential generation and propagation in electrically excitable cells. Synaptic transmission. Electrical properties interpreted via kinetic and molecular properties of single voltage-gated ion channels. Final third focuses on biophysics of synaptic transmission and introduction to neural computing. Laboratory and computer exercises illustrate the concepts. Students taking graduate version complete different assignments.
Staff"
Neural computing,Students will acquire skills in applying computational methods and techniques to study neural systems.,"6.4812[J] Cellular Neurophysiology and Computing
",1,Fall 2023,Artificial Intelligence,"6.4812[J] Cellular Neurophysiology and Computing
", ,0,"()
(Same subject as 2.794[J], 9.021[J], 20.470[J], HST.541[J])(Subject meets with 2.791[J], 6.4810[J], 9.21[J], 20.370[J])
Prereq: (Physics II (GIR), 18.03, and (2.005, 6.2000, 6.3000, 10.301, or 20.110)) or permission of instructor
Units: 5-2-5

Integrated overview of the biophysics of cells from prokaryotes to neurons, with a focus on mass transport and electrical signal generation across cell membrane. First third of course focuses on mass transport through membranes: diffusion, osmosis, chemically mediated, and active transport. Second third focuses on electrical properties of cells: ion transport to action potential generation and propagation in electrically excitable cells. Synaptic transmission. Electrical properties interpreted via kinetic and molecular properties of single voltage-gated ion channels. Final third focuses on biophysics of synaptic transmission and introduction to neural computing. Laboratory and computer exercises illustrate the concepts. Students taking graduate version complete different assignments.
Staff"
Communication,Students will enhance their communication skills through presenting their findings and research in written and oral formats.,"6.4812[J] Cellular Neurophysiology and Computing
",1,Fall 2023,Communication,"6.4812[J] Cellular Neurophysiology and Computing
", ,0,"()
(Same subject as 2.794[J], 9.021[J], 20.470[J], HST.541[J])(Subject meets with 2.791[J], 6.4810[J], 9.21[J], 20.370[J])
Prereq: (Physics II (GIR), 18.03, and (2.005, 6.2000, 6.3000, 10.301, or 20.110)) or permission of instructor
Units: 5-2-5

Integrated overview of the biophysics of cells from prokaryotes to neurons, with a focus on mass transport and electrical signal generation across cell membrane. First third of course focuses on mass transport through membranes: diffusion, osmosis, chemically mediated, and active transport. Second third focuses on electrical properties of cells: ion transport to action potential generation and propagation in electrically excitable cells. Synaptic transmission. Electrical properties interpreted via kinetic and molecular properties of single voltage-gated ion channels. Final third focuses on biophysics of synaptic transmission and introduction to neural computing. Laboratory and computer exercises illustrate the concepts. Students taking graduate version complete different assignments.
Staff"
Data analysis,Students will develop the skill of analyzing data related to energy and mass flow in human organ systems.,"6.4820[J] Quantitative and Clinical Physiology
",1,Fall 2023,Data Analysis and Research,"6.4820[J] Quantitative and Clinical Physiology
", ,0,"()
(Same subject as 2.792[J], HST.542[J])(Subject meets with 2.796[J], 6.4822[J])
Prereq: Physics II (GIR), 18.03, or permission of instructor
Units: 4-2-6
Lecture: TR9.30-11 (4-265) Recitation: W1 (34-301) or W2 (34-301)

Application of the principles of energy and mass flow to major human organ systems. Anatomical, physiological and clinical features of the cardiovascular, respiratory and renal systems. Mechanisms of regulation and homeostasis. Systems, features and devices that are most illuminated by the methods of physical sciences and engineering models. Required laboratory work includes animal studies. Students taking graduate version complete additional assignments.
T. Heldt, R. G. MarkTextbooks (Fall 2023)"
Laboratory techniques,"Students will acquire practical skills in conducting laboratory work, including animal studies.","6.4820[J] Quantitative and Clinical Physiology
",1,Fall 2023,Laboratory and Experimental Techniques,"6.4820[J] Quantitative and Clinical Physiology
", ,0,"()
(Same subject as 2.792[J], HST.542[J])(Subject meets with 2.796[J], 6.4822[J])
Prereq: Physics II (GIR), 18.03, or permission of instructor
Units: 4-2-6
Lecture: TR9.30-11 (4-265) Recitation: W1 (34-301) or W2 (34-301)

Application of the principles of energy and mass flow to major human organ systems. Anatomical, physiological and clinical features of the cardiovascular, respiratory and renal systems. Mechanisms of regulation and homeostasis. Systems, features and devices that are most illuminated by the methods of physical sciences and engineering models. Required laboratory work includes animal studies. Students taking graduate version complete additional assignments.
T. Heldt, R. G. MarkTextbooks (Fall 2023)"
Data analysis,Students will develop the skill of analyzing data related to energy and mass flow in human organ systems.,"6.4822[J] Quantitative Physiology: Organ Transport Systems
",1,Fall 2023,Data Analysis and Research,"6.4822[J] Quantitative Physiology: Organ Transport Systems
", ,0,"()
(Same subject as 2.796[J])(Subject meets with 2.792[J], 6.4820[J], HST.542[J])
Prereq: 6.4810 and (2.006 or 6.2300)
Units: 4-2-6
Lecture: TR9.30-11 (4-265) Recitation: W1 (34-301) or W2 (34-301)

Application of the principles of energy and mass flow to major human organ systems. Anatomical, physiological and clinical features of the cardiovascular, respiratory and renal systems. Mechanisms of regulation and homeostasis. Systems, features and devices that are most illuminated by the methods of physical sciences and engineering models. Required laboratory work includes animal studies. Students taking graduate version complete additional assignments.
T. Heldt, R. G. MarkTextbooks (Fall 2023)"
Laboratory techniques,"Students will acquire the skill of conducting laboratory work, including animal studies, to study organ transport systems.","6.4822[J] Quantitative Physiology: Organ Transport Systems
",1,Fall 2023,Laboratory and Experimental Techniques,"6.4822[J] Quantitative Physiology: Organ Transport Systems
", ,0,"()
(Same subject as 2.796[J])(Subject meets with 2.792[J], 6.4820[J], HST.542[J])
Prereq: 6.4810 and (2.006 or 6.2300)
Units: 4-2-6
Lecture: TR9.30-11 (4-265) Recitation: W1 (34-301) or W2 (34-301)

Application of the principles of energy and mass flow to major human organ systems. Anatomical, physiological and clinical features of the cardiovascular, respiratory and renal systems. Mechanisms of regulation and homeostasis. Systems, features and devices that are most illuminated by the methods of physical sciences and engineering models. Required laboratory work includes animal studies. Students taking graduate version complete additional assignments.
T. Heldt, R. G. MarkTextbooks (Fall 2023)"
Mathematical modeling,Students will learn how to use mathematical models to describe and analyze biological systems.,"6.4830[J] Fields, Forces and Flows in Biological Systems
",1,Fall 2023,Modeling,"6.4830[J] Fields, Forces and Flows in Biological Systems
", ,0,"()
(Same subject as 2.793[J], 20.330[J])
Prereq: Biology (GIR), Physics II (GIR), and 18.03
Units: 4-0-8

Introduction to electric fields, fluid flows, transport phenomena and their application to biological systems. Flux and continuity laws, Maxwell's equations, electro-quasistatics, electro-chemical-mechanical driving forces, conservation of mass and momentum, Navier-Stokes flows, and electrokinetics. Applications include biomolecular transport in tissues, electrophoresis, and microfluidics.
J. Han, S. Manalis"
Data analysis,"Students will develop skills in analyzing and interpreting data related to electric fields, fluid flows, and transport phenomena in biological systems.","6.4830[J] Fields, Forces and Flows in Biological Systems
",1,Fall 2023,Data Analysis and Research,"6.4830[J] Fields, Forces and Flows in Biological Systems
", ,0,"()
(Same subject as 2.793[J], 20.330[J])
Prereq: Biology (GIR), Physics II (GIR), and 18.03
Units: 4-0-8

Introduction to electric fields, fluid flows, transport phenomena and their application to biological systems. Flux and continuity laws, Maxwell's equations, electro-quasistatics, electro-chemical-mechanical driving forces, conservation of mass and momentum, Navier-Stokes flows, and electrokinetics. Applications include biomolecular transport in tissues, electrophoresis, and microfluidics.
J. Han, S. Manalis"
Mathematical modeling,Students will learn how to use mathematical models to analyze and understand biological systems.,"6.4832[J] Fields, Forces, and Flows in Biological Systems
",1,Fall 2023,Modeling,"6.4832[J] Fields, Forces, and Flows in Biological Systems
", ,0,"()
(Same subject as 2.795[J], 10.539[J], 20.430[J])
Prereq: Permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (4-231)

Molecular diffusion, diffusion-reaction, conduction, convection in biological systems; fields in heterogeneous media; electrical double layers; Maxwell stress tensor, electrical forces in physiological systems. Fluid and solid continua: equations of motion useful for porous, hydrated biological tissues. Case studies of membrane transport, electrode interfaces, electrical, mechanical, and chemical transduction in tissues, convective-diffusion/reaction, electrophoretic, electroosmotic flows in tissues/MEMs, and ECG. Electromechanical and physicochemical interactions in cells and biomaterials; musculoskeletal, cardiovascular, and other biological and clinical examples. Prior undergraduate coursework in transport recommended.
M. Bathe, A. HansenNo textbook information available"
Data analysis,Students will develop skills in analyzing and interpreting data related to biological systems.,"6.4832[J] Fields, Forces, and Flows in Biological Systems
",1,Fall 2023,Data Analysis and Research,"6.4832[J] Fields, Forces, and Flows in Biological Systems
", ,0,"()
(Same subject as 2.795[J], 10.539[J], 20.430[J])
Prereq: Permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (4-231)

Molecular diffusion, diffusion-reaction, conduction, convection in biological systems; fields in heterogeneous media; electrical double layers; Maxwell stress tensor, electrical forces in physiological systems. Fluid and solid continua: equations of motion useful for porous, hydrated biological tissues. Case studies of membrane transport, electrode interfaces, electrical, mechanical, and chemical transduction in tissues, convective-diffusion/reaction, electrophoretic, electroosmotic flows in tissues/MEMs, and ECG. Electromechanical and physicochemical interactions in cells and biomaterials; musculoskeletal, cardiovascular, and other biological and clinical examples. Prior undergraduate coursework in transport recommended.
M. Bathe, A. HansenNo textbook information available"
Problem-solving,Students will develop problem-solving skills as they apply concepts and principles to solve complex biological problems.,"6.4832[J] Fields, Forces, and Flows in Biological Systems
",1,Fall 2023,Problem-solving,"6.4832[J] Fields, Forces, and Flows in Biological Systems
", ,0,"()
(Same subject as 2.795[J], 10.539[J], 20.430[J])
Prereq: Permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (4-231)

Molecular diffusion, diffusion-reaction, conduction, convection in biological systems; fields in heterogeneous media; electrical double layers; Maxwell stress tensor, electrical forces in physiological systems. Fluid and solid continua: equations of motion useful for porous, hydrated biological tissues. Case studies of membrane transport, electrode interfaces, electrical, mechanical, and chemical transduction in tissues, convective-diffusion/reaction, electrophoretic, electroosmotic flows in tissues/MEMs, and ECG. Electromechanical and physicochemical interactions in cells and biomaterials; musculoskeletal, cardiovascular, and other biological and clinical examples. Prior undergraduate coursework in transport recommended.
M. Bathe, A. HansenNo textbook information available"
Technical writing,Students will enhance their ability to communicate scientific concepts and findings through technical writing.,"6.4832[J] Fields, Forces, and Flows in Biological Systems
",1,Fall 2023,Technical writing,"6.4832[J] Fields, Forces, and Flows in Biological Systems
", ,0,"()
(Same subject as 2.795[J], 10.539[J], 20.430[J])
Prereq: Permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (4-231)

Molecular diffusion, diffusion-reaction, conduction, convection in biological systems; fields in heterogeneous media; electrical double layers; Maxwell stress tensor, electrical forces in physiological systems. Fluid and solid continua: equations of motion useful for porous, hydrated biological tissues. Case studies of membrane transport, electrode interfaces, electrical, mechanical, and chemical transduction in tissues, convective-diffusion/reaction, electrophoretic, electroosmotic flows in tissues/MEMs, and ECG. Electromechanical and physicochemical interactions in cells and biomaterials; musculoskeletal, cardiovascular, and other biological and clinical examples. Prior undergraduate coursework in transport recommended.
M. Bathe, A. HansenNo textbook information available"
Critical thinking,Students will develop critical thinking skills as they evaluate and analyze biological phenomena and their underlying principles.,"6.4832[J] Fields, Forces, and Flows in Biological Systems
",1,Fall 2023,Cognitive Thinking,"6.4832[J] Fields, Forces, and Flows in Biological Systems
", ,0,"()
(Same subject as 2.795[J], 10.539[J], 20.430[J])
Prereq: Permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (4-231)

Molecular diffusion, diffusion-reaction, conduction, convection in biological systems; fields in heterogeneous media; electrical double layers; Maxwell stress tensor, electrical forces in physiological systems. Fluid and solid continua: equations of motion useful for porous, hydrated biological tissues. Case studies of membrane transport, electrode interfaces, electrical, mechanical, and chemical transduction in tissues, convective-diffusion/reaction, electrophoretic, electroosmotic flows in tissues/MEMs, and ECG. Electromechanical and physicochemical interactions in cells and biomaterials; musculoskeletal, cardiovascular, and other biological and clinical examples. Prior undergraduate coursework in transport recommended.
M. Bathe, A. HansenNo textbook information available"
Application of scaling laws,"Students will learn how to apply scaling laws to biomechanical phenomena, allowing them to analyze and understand the behavior of biological systems at different length scales.","6.4840[J] Molecular, Cellular, and Tissue Biomechanics
",1,Fall 2023,Application of scaling laws,"6.4840[J] Molecular, Cellular, and Tissue Biomechanics
", ,0,"()
(Same subject as 2.797[J], 3.053[J], 20.310[J])(Subject meets with 2.798[J], 3.971[J], 6.4842[J], 10.537[J], 20.410[J])
Prereq: Biology (GIR) and 18.03
Units: 4-0-8

Develops and applies scaling laws and the methods of continuum mechanics to biomechanical phenomena over a range of length scales. Topics include structure of tissues and the molecular basis for macroscopic properties; chemical and electrical effects on mechanical behavior; cell mechanics, motility and adhesion; biomembranes; biomolecular mechanics and molecular motors. Experimental methods for probing structures at the tissue, cellular, and molecular levels. Students taking graduate version complete additional assignments.
M. Bathe, P. So"
Continuum mechanics,"Students will develop proficiency in the principles and methods of continuum mechanics, enabling them to analyze the mechanical behavior of tissues and biomolecular structures.","6.4840[J] Molecular, Cellular, and Tissue Biomechanics
",1,Fall 2023,Continuum mechanics,"6.4840[J] Molecular, Cellular, and Tissue Biomechanics
", ,0,"()
(Same subject as 2.797[J], 3.053[J], 20.310[J])(Subject meets with 2.798[J], 3.971[J], 6.4842[J], 10.537[J], 20.410[J])
Prereq: Biology (GIR) and 18.03
Units: 4-0-8

Develops and applies scaling laws and the methods of continuum mechanics to biomechanical phenomena over a range of length scales. Topics include structure of tissues and the molecular basis for macroscopic properties; chemical and electrical effects on mechanical behavior; cell mechanics, motility and adhesion; biomembranes; biomolecular mechanics and molecular motors. Experimental methods for probing structures at the tissue, cellular, and molecular levels. Students taking graduate version complete additional assignments.
M. Bathe, P. So"
Experimental methods,"Students will gain practical skills in using experimental methods to probe and study structures at the tissue, cellular, and molecular levels in the field of biomechanics.","6.4840[J] Molecular, Cellular, and Tissue Biomechanics
",1,Fall 2023,Experimental Design and Methods,"6.4840[J] Molecular, Cellular, and Tissue Biomechanics
", ,0,"()
(Same subject as 2.797[J], 3.053[J], 20.310[J])(Subject meets with 2.798[J], 3.971[J], 6.4842[J], 10.537[J], 20.410[J])
Prereq: Biology (GIR) and 18.03
Units: 4-0-8

Develops and applies scaling laws and the methods of continuum mechanics to biomechanical phenomena over a range of length scales. Topics include structure of tissues and the molecular basis for macroscopic properties; chemical and electrical effects on mechanical behavior; cell mechanics, motility and adhesion; biomembranes; biomolecular mechanics and molecular motors. Experimental methods for probing structures at the tissue, cellular, and molecular levels. Students taking graduate version complete additional assignments.
M. Bathe, P. So"
Data analysis,Students will learn how to analyze and interpret data obtained from experimental studies in order to draw meaningful conclusions about the mechanical properties of biological systems.,"6.4840[J] Molecular, Cellular, and Tissue Biomechanics
",1,Fall 2023,Data Analysis and Research,"6.4840[J] Molecular, Cellular, and Tissue Biomechanics
", ,0,"()
(Same subject as 2.797[J], 3.053[J], 20.310[J])(Subject meets with 2.798[J], 3.971[J], 6.4842[J], 10.537[J], 20.410[J])
Prereq: Biology (GIR) and 18.03
Units: 4-0-8

Develops and applies scaling laws and the methods of continuum mechanics to biomechanical phenomena over a range of length scales. Topics include structure of tissues and the molecular basis for macroscopic properties; chemical and electrical effects on mechanical behavior; cell mechanics, motility and adhesion; biomembranes; biomolecular mechanics and molecular motors. Experimental methods for probing structures at the tissue, cellular, and molecular levels. Students taking graduate version complete additional assignments.
M. Bathe, P. So"
Problem-solving,"Through the application of scaling laws and continuum mechanics principles, students will develop problem-solving skills to address complex biomechanical phenomena and propose solutions.","6.4840[J] Molecular, Cellular, and Tissue Biomechanics
",1,Fall 2023,Problem-solving,"6.4840[J] Molecular, Cellular, and Tissue Biomechanics
", ,0,"()
(Same subject as 2.797[J], 3.053[J], 20.310[J])(Subject meets with 2.798[J], 3.971[J], 6.4842[J], 10.537[J], 20.410[J])
Prereq: Biology (GIR) and 18.03
Units: 4-0-8

Develops and applies scaling laws and the methods of continuum mechanics to biomechanical phenomena over a range of length scales. Topics include structure of tissues and the molecular basis for macroscopic properties; chemical and electrical effects on mechanical behavior; cell mechanics, motility and adhesion; biomembranes; biomolecular mechanics and molecular motors. Experimental methods for probing structures at the tissue, cellular, and molecular levels. Students taking graduate version complete additional assignments.
M. Bathe, P. So"
Application of scaling laws,"Students will learn how to apply scaling laws to biomechanical phenomena, which involves manipulating data and making calculations to understand the relationship between different length scales.","6.4842[J] Molecular, Cellular, and Tissue Biomechanics
",1,Fall 2023,Application of scaling laws,"6.4842[J] Molecular, Cellular, and Tissue Biomechanics
", ,0,"()
(Same subject as 2.798[J], 3.971[J], 10.537[J], 20.410[J])(Subject meets with 2.797[J], 3.053[J], 6.4840[J], 20.310[J])
Prereq: Biology (GIR) and 18.03
Units: 3-0-9

Develops and applies scaling laws and the methods of continuum mechanics to biomechanical phenomena over a range of length scales. Topics include structure of tissues and the molecular basis for macroscopic properties; chemical and electrical effects on mechanical behavior; cell mechanics, motility and adhesion; biomembranes; biomolecular mechanics and molecular motors. Experimental methods for probing structures at the tissue, cellular, and molecular levels. Students taking graduate version complete additional assignments.
M. Bathe, P. So"
Continuum mechanics,"Students will develop proficiency in the principles and techniques of continuum mechanics, which involves manipulating mathematical models and equations to analyze the behavior of materials and structures.","6.4842[J] Molecular, Cellular, and Tissue Biomechanics
",1,Fall 2023,Continuum mechanics,"6.4842[J] Molecular, Cellular, and Tissue Biomechanics
", ,0,"()
(Same subject as 2.798[J], 3.971[J], 10.537[J], 20.410[J])(Subject meets with 2.797[J], 3.053[J], 6.4840[J], 20.310[J])
Prereq: Biology (GIR) and 18.03
Units: 3-0-9

Develops and applies scaling laws and the methods of continuum mechanics to biomechanical phenomena over a range of length scales. Topics include structure of tissues and the molecular basis for macroscopic properties; chemical and electrical effects on mechanical behavior; cell mechanics, motility and adhesion; biomembranes; biomolecular mechanics and molecular motors. Experimental methods for probing structures at the tissue, cellular, and molecular levels. Students taking graduate version complete additional assignments.
M. Bathe, P. So"
Experimental methods,"Students will gain practical skills in using experimental methods to probe structures at the tissue, cellular, and molecular levels, which involves handling equipment, collecting data, and analyzing results.","6.4842[J] Molecular, Cellular, and Tissue Biomechanics
",1,Fall 2023,Experimental Design and Methods,"6.4842[J] Molecular, Cellular, and Tissue Biomechanics
", ,0,"()
(Same subject as 2.798[J], 3.971[J], 10.537[J], 20.410[J])(Subject meets with 2.797[J], 3.053[J], 6.4840[J], 20.310[J])
Prereq: Biology (GIR) and 18.03
Units: 3-0-9

Develops and applies scaling laws and the methods of continuum mechanics to biomechanical phenomena over a range of length scales. Topics include structure of tissues and the molecular basis for macroscopic properties; chemical and electrical effects on mechanical behavior; cell mechanics, motility and adhesion; biomembranes; biomolecular mechanics and molecular motors. Experimental methods for probing structures at the tissue, cellular, and molecular levels. Students taking graduate version complete additional assignments.
M. Bathe, P. So"
Molecular basis for macroscopic properties,"Students will learn how to analyze the molecular basis for macroscopic properties in biomechanical systems, which involves understanding and interpreting complex biological data.","6.4842[J] Molecular, Cellular, and Tissue Biomechanics
",1,Fall 2023,Molecular basis for macroscopic properties,"6.4842[J] Molecular, Cellular, and Tissue Biomechanics
", ,0,"()
(Same subject as 2.798[J], 3.971[J], 10.537[J], 20.410[J])(Subject meets with 2.797[J], 3.053[J], 6.4840[J], 20.310[J])
Prereq: Biology (GIR) and 18.03
Units: 3-0-9

Develops and applies scaling laws and the methods of continuum mechanics to biomechanical phenomena over a range of length scales. Topics include structure of tissues and the molecular basis for macroscopic properties; chemical and electrical effects on mechanical behavior; cell mechanics, motility and adhesion; biomembranes; biomolecular mechanics and molecular motors. Experimental methods for probing structures at the tissue, cellular, and molecular levels. Students taking graduate version complete additional assignments.
M. Bathe, P. So"
Biomolecular mechanics,"Students will acquire knowledge and skills in analyzing the mechanics of biomolecules, which involves manipulating data and applying mathematical models to understand the behavior of biological molecules.","6.4842[J] Molecular, Cellular, and Tissue Biomechanics
",1,Fall 2023,Biomolecular mechanics,"6.4842[J] Molecular, Cellular, and Tissue Biomechanics
", ,0,"()
(Same subject as 2.798[J], 3.971[J], 10.537[J], 20.410[J])(Subject meets with 2.797[J], 3.053[J], 6.4840[J], 20.310[J])
Prereq: Biology (GIR) and 18.03
Units: 3-0-9

Develops and applies scaling laws and the methods of continuum mechanics to biomechanical phenomena over a range of length scales. Topics include structure of tissues and the molecular basis for macroscopic properties; chemical and electrical effects on mechanical behavior; cell mechanics, motility and adhesion; biomembranes; biomolecular mechanics and molecular motors. Experimental methods for probing structures at the tissue, cellular, and molecular levels. Students taking graduate version complete additional assignments.
M. Bathe, P. So"
Design optimization,Students will learn how to optimize designs using analytical techniques to achieve desired outcomes.,"6.4860[J] Medical Device Design
",1,Fall 2023,Optimization,"6.4860[J] Medical Device Design
", ,0,"()
(Same subject as 2.750[J])(Subject meets with 2.75[J], 6.4861[J], HST.552[J])
Prereq: 2.008, 6.2040, 6.2050, 6.2060, 22.071, or permission of instructor
Units: 3-3-6

Provides an intense project-based learning experience around the design of medical devices with foci ranging from mechanical to electro mechanical to electronics. Projects motivated by real-world clinical challenges provided by sponsors and clinicians who also help mentor teams. Covers the design process, project management, and fundamentals of mechanical and electrical circuit and sensor design. Students work in small teams to execute a substantial term project, with emphasis placed upon developing creative designs -- via a deterministic design process -- that are developed and optimized using analytical techniques. Includes mandatory lab. Instruction and practice in written and oral communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
A. H. Slocum, E. Roche, N. C. Hanumara, G. Traverso, A. Pennes"
Project management,"Students will develop skills in managing projects, including planning, organizing, and coordinating tasks and resources.","6.4860[J] Medical Device Design
",1,Fall 2023,Project management,"6.4860[J] Medical Device Design
", ,0,"()
(Same subject as 2.750[J])(Subject meets with 2.75[J], 6.4861[J], HST.552[J])
Prereq: 2.008, 6.2040, 6.2050, 6.2060, 22.071, or permission of instructor
Units: 3-3-6

Provides an intense project-based learning experience around the design of medical devices with foci ranging from mechanical to electro mechanical to electronics. Projects motivated by real-world clinical challenges provided by sponsors and clinicians who also help mentor teams. Covers the design process, project management, and fundamentals of mechanical and electrical circuit and sensor design. Students work in small teams to execute a substantial term project, with emphasis placed upon developing creative designs -- via a deterministic design process -- that are developed and optimized using analytical techniques. Includes mandatory lab. Instruction and practice in written and oral communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
A. H. Slocum, E. Roche, N. C. Hanumara, G. Traverso, A. Pennes"
Mechanical circuit design,Students will gain proficiency in designing mechanical circuits for medical devices.,"6.4860[J] Medical Device Design
",1,Fall 2023,,"6.4860[J] Medical Device Design
", ,0,"()
(Same subject as 2.750[J])(Subject meets with 2.75[J], 6.4861[J], HST.552[J])
Prereq: 2.008, 6.2040, 6.2050, 6.2060, 22.071, or permission of instructor
Units: 3-3-6

Provides an intense project-based learning experience around the design of medical devices with foci ranging from mechanical to electro mechanical to electronics. Projects motivated by real-world clinical challenges provided by sponsors and clinicians who also help mentor teams. Covers the design process, project management, and fundamentals of mechanical and electrical circuit and sensor design. Students work in small teams to execute a substantial term project, with emphasis placed upon developing creative designs -- via a deterministic design process -- that are developed and optimized using analytical techniques. Includes mandatory lab. Instruction and practice in written and oral communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
A. H. Slocum, E. Roche, N. C. Hanumara, G. Traverso, A. Pennes"
Electrical circuit design,Students will learn how to design electrical circuits for medical devices.,"6.4860[J] Medical Device Design
",1,Fall 2023,,"6.4860[J] Medical Device Design
", ,0,"()
(Same subject as 2.750[J])(Subject meets with 2.75[J], 6.4861[J], HST.552[J])
Prereq: 2.008, 6.2040, 6.2050, 6.2060, 22.071, or permission of instructor
Units: 3-3-6

Provides an intense project-based learning experience around the design of medical devices with foci ranging from mechanical to electro mechanical to electronics. Projects motivated by real-world clinical challenges provided by sponsors and clinicians who also help mentor teams. Covers the design process, project management, and fundamentals of mechanical and electrical circuit and sensor design. Students work in small teams to execute a substantial term project, with emphasis placed upon developing creative designs -- via a deterministic design process -- that are developed and optimized using analytical techniques. Includes mandatory lab. Instruction and practice in written and oral communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
A. H. Slocum, E. Roche, N. C. Hanumara, G. Traverso, A. Pennes"
Sensor design,Students will develop skills in designing sensors for medical devices.,"6.4860[J] Medical Device Design
",1,Fall 2023,Sensor-related tasks,"6.4860[J] Medical Device Design
", ,0,"()
(Same subject as 2.750[J])(Subject meets with 2.75[J], 6.4861[J], HST.552[J])
Prereq: 2.008, 6.2040, 6.2050, 6.2060, 22.071, or permission of instructor
Units: 3-3-6

Provides an intense project-based learning experience around the design of medical devices with foci ranging from mechanical to electro mechanical to electronics. Projects motivated by real-world clinical challenges provided by sponsors and clinicians who also help mentor teams. Covers the design process, project management, and fundamentals of mechanical and electrical circuit and sensor design. Students work in small teams to execute a substantial term project, with emphasis placed upon developing creative designs -- via a deterministic design process -- that are developed and optimized using analytical techniques. Includes mandatory lab. Instruction and practice in written and oral communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
A. H. Slocum, E. Roche, N. C. Hanumara, G. Traverso, A. Pennes"
Design process,Students will learn and practice a deterministic design process to develop creative designs for medical devices.,"6.4861[J] Medical Device Design
",1,Fall 2023,Design process,"6.4861[J] Medical Device Design
", ,0,"()
(Same subject as 2.75[J], HST.552[J])(Subject meets with 2.750[J], 6.4860[J])
Prereq: 2.008, 6.2040, 6.2050, 6.2060, 22.071, or permission of instructor
Units: 3-3-6

Provides an intense project-based learning experience around the design of medical devices with foci ranging from mechanical to electro mechanical to electronics. Projects motivated by real-world clinical challenges provided by sponsors and clinicians who also help mentor teams. Covers the design process, project management, and fundamentals of mechanical and electrical circuit and sensor design. Students work in small teams to execute a substantial term project, with emphasis placed upon developing creative designs â€” via a deterministic design process â€” that are developed and optimized using analytical techniques. Includes mandatory lab. Instruction and practice in written and oral communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
A. H. Slocum, E. Roche, N. C. Hanumara, G. Traverso, A. Pennes"
Project management,Students will gain skills in managing projects related to the design of medical devices.,"6.4861[J] Medical Device Design
",1,Fall 2023,Project management,"6.4861[J] Medical Device Design
", ,0,"()
(Same subject as 2.75[J], HST.552[J])(Subject meets with 2.750[J], 6.4860[J])
Prereq: 2.008, 6.2040, 6.2050, 6.2060, 22.071, or permission of instructor
Units: 3-3-6

Provides an intense project-based learning experience around the design of medical devices with foci ranging from mechanical to electro mechanical to electronics. Projects motivated by real-world clinical challenges provided by sponsors and clinicians who also help mentor teams. Covers the design process, project management, and fundamentals of mechanical and electrical circuit and sensor design. Students work in small teams to execute a substantial term project, with emphasis placed upon developing creative designs â€” via a deterministic design process â€” that are developed and optimized using analytical techniques. Includes mandatory lab. Instruction and practice in written and oral communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
A. H. Slocum, E. Roche, N. C. Hanumara, G. Traverso, A. Pennes"
Mechanical circuit design,Students will develop proficiency in designing mechanical circuits for medical devices.,"6.4861[J] Medical Device Design
",1,Fall 2023,Circuit Design,"6.4861[J] Medical Device Design
", ,0,"()
(Same subject as 2.75[J], HST.552[J])(Subject meets with 2.750[J], 6.4860[J])
Prereq: 2.008, 6.2040, 6.2050, 6.2060, 22.071, or permission of instructor
Units: 3-3-6

Provides an intense project-based learning experience around the design of medical devices with foci ranging from mechanical to electro mechanical to electronics. Projects motivated by real-world clinical challenges provided by sponsors and clinicians who also help mentor teams. Covers the design process, project management, and fundamentals of mechanical and electrical circuit and sensor design. Students work in small teams to execute a substantial term project, with emphasis placed upon developing creative designs â€” via a deterministic design process â€” that are developed and optimized using analytical techniques. Includes mandatory lab. Instruction and practice in written and oral communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
A. H. Slocum, E. Roche, N. C. Hanumara, G. Traverso, A. Pennes"
Electrical circuit design,Students will learn and apply techniques for designing electrical circuits in medical devices.,"6.4861[J] Medical Device Design
",1,Fall 2023,Circuit Design,"6.4861[J] Medical Device Design
", ,0,"()
(Same subject as 2.75[J], HST.552[J])(Subject meets with 2.750[J], 6.4860[J])
Prereq: 2.008, 6.2040, 6.2050, 6.2060, 22.071, or permission of instructor
Units: 3-3-6

Provides an intense project-based learning experience around the design of medical devices with foci ranging from mechanical to electro mechanical to electronics. Projects motivated by real-world clinical challenges provided by sponsors and clinicians who also help mentor teams. Covers the design process, project management, and fundamentals of mechanical and electrical circuit and sensor design. Students work in small teams to execute a substantial term project, with emphasis placed upon developing creative designs â€” via a deterministic design process â€” that are developed and optimized using analytical techniques. Includes mandatory lab. Instruction and practice in written and oral communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
A. H. Slocum, E. Roche, N. C. Hanumara, G. Traverso, A. Pennes"
Sensor design,Students will acquire knowledge and skills in designing sensors for medical devices.,"6.4861[J] Medical Device Design
",1,Fall 2023,Sensor-related tasks,"6.4861[J] Medical Device Design
", ,0,"()
(Same subject as 2.75[J], HST.552[J])(Subject meets with 2.750[J], 6.4860[J])
Prereq: 2.008, 6.2040, 6.2050, 6.2060, 22.071, or permission of instructor
Units: 3-3-6

Provides an intense project-based learning experience around the design of medical devices with foci ranging from mechanical to electro mechanical to electronics. Projects motivated by real-world clinical challenges provided by sponsors and clinicians who also help mentor teams. Covers the design process, project management, and fundamentals of mechanical and electrical circuit and sensor design. Students work in small teams to execute a substantial term project, with emphasis placed upon developing creative designs â€” via a deterministic design process â€” that are developed and optimized using analytical techniques. Includes mandatory lab. Instruction and practice in written and oral communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
A. H. Slocum, E. Roche, N. C. Hanumara, G. Traverso, A. Pennes"
Experimental techniques,"Students will learn and practice various experimental techniques used in synthetic biology research, such as gene assembly and characterization.","6.4880[J] Biological Circuit Engineering Laboratory
",1,Fall 2023,Laboratory and Experimental Techniques,"6.4880[J] Biological Circuit Engineering Laboratory
", ,0,"() Not offered regularly; consult department
(Same subject as 20.129[J])
Prereq: Biology (GIR) and Calculus II (GIR)
Units: 2-8-2

Students assemble individual genes and regulatory elements into larger-scale circuits; they experimentally characterize these circuits in yeast cells using quantitative techniques, including flow cytometry, and model their results computationally. Emphasizes concepts and techniques to perform independent experimental and computational synthetic biology research. Discusses current literature and ongoing research in the field of synthetic biology. Instruction and practice in oral and written communication provided. Enrollment limited.
J. Niles, R. Weiss"
Computational modeling,Students will gain proficiency in using computational tools and techniques to model and analyze the results of their experimental work.,"6.4880[J] Biological Circuit Engineering Laboratory
",1,Fall 2023,Computational Science,"6.4880[J] Biological Circuit Engineering Laboratory
", ,0,"() Not offered regularly; consult department
(Same subject as 20.129[J])
Prereq: Biology (GIR) and Calculus II (GIR)
Units: 2-8-2

Students assemble individual genes and regulatory elements into larger-scale circuits; they experimentally characterize these circuits in yeast cells using quantitative techniques, including flow cytometry, and model their results computationally. Emphasizes concepts and techniques to perform independent experimental and computational synthetic biology research. Discusses current literature and ongoing research in the field of synthetic biology. Instruction and practice in oral and written communication provided. Enrollment limited.
J. Niles, R. Weiss"
Quantitative analysis,"Students will develop the ability to perform quantitative analysis of experimental data, including the use of flow cytometry.","6.4880[J] Biological Circuit Engineering Laboratory
",1,Fall 2023,Data Analysis and Research,"6.4880[J] Biological Circuit Engineering Laboratory
", ,0,"() Not offered regularly; consult department
(Same subject as 20.129[J])
Prereq: Biology (GIR) and Calculus II (GIR)
Units: 2-8-2

Students assemble individual genes and regulatory elements into larger-scale circuits; they experimentally characterize these circuits in yeast cells using quantitative techniques, including flow cytometry, and model their results computationally. Emphasizes concepts and techniques to perform independent experimental and computational synthetic biology research. Discusses current literature and ongoing research in the field of synthetic biology. Instruction and practice in oral and written communication provided. Enrollment limited.
J. Niles, R. Weiss"
Literature review,Students will learn how to effectively review and analyze current literature in the field of synthetic biology.,"6.4880[J] Biological Circuit Engineering Laboratory
",1,Fall 2023,Literature review,"6.4880[J] Biological Circuit Engineering Laboratory
", ,0,"() Not offered regularly; consult department
(Same subject as 20.129[J])
Prereq: Biology (GIR) and Calculus II (GIR)
Units: 2-8-2

Students assemble individual genes and regulatory elements into larger-scale circuits; they experimentally characterize these circuits in yeast cells using quantitative techniques, including flow cytometry, and model their results computationally. Emphasizes concepts and techniques to perform independent experimental and computational synthetic biology research. Discusses current literature and ongoing research in the field of synthetic biology. Instruction and practice in oral and written communication provided. Enrollment limited.
J. Niles, R. Weiss"
Oral and written communication,"Students will enhance their communication skills through instruction and practice in both oral and written forms, specifically in the context of presenting and discussing their research findings.","6.4880[J] Biological Circuit Engineering Laboratory
",1,Fall 2023,Communication Methods,"6.4880[J] Biological Circuit Engineering Laboratory
", ,0,"() Not offered regularly; consult department
(Same subject as 20.129[J])
Prereq: Biology (GIR) and Calculus II (GIR)
Units: 2-8-2

Students assemble individual genes and regulatory elements into larger-scale circuits; they experimentally characterize these circuits in yeast cells using quantitative techniques, including flow cytometry, and model their results computationally. Emphasizes concepts and techniques to perform independent experimental and computational synthetic biology research. Discusses current literature and ongoing research in the field of synthetic biology. Instruction and practice in oral and written communication provided. Enrollment limited.
J. Niles, R. Weiss"
Signal processing,Students will gain proficiency in processing digital signals and noise.,"6.4900 Introduction to EECS via Medical Technology
",1,Fall 2023,Signal processing,"6.4900 Introduction to EECS via Medical Technology
", ,0,"() 
Prereq: Calculus II (GIR) and Physics II (GIR)
Units: 4-4-4

Explores biomedical signals generated from electrocardiograms, glucose detectors or ultrasound images, and magnetic resonance images. Topics include physical characterization and modeling of systems in the time and frequency domains; analog and digital signals and noise; basic machine learning including decision trees, clustering, and classification; and introductory machine vision. Labs designed to strengthen background in signal processing and machine learning. Students design and run structured experiments, and develop and test procedures through further experimentation.
C. M. Stultz, E. Adalsteinsson"
Machine learning,"Students will learn the basics of machine learning, including decision trees, clustering, and classification.","6.4900 Introduction to EECS via Medical Technology
",1,Fall 2023,Machine Learning,"6.4900 Introduction to EECS via Medical Technology
", ,0,"() 
Prereq: Calculus II (GIR) and Physics II (GIR)
Units: 4-4-4

Explores biomedical signals generated from electrocardiograms, glucose detectors or ultrasound images, and magnetic resonance images. Topics include physical characterization and modeling of systems in the time and frequency domains; analog and digital signals and noise; basic machine learning including decision trees, clustering, and classification; and introductory machine vision. Labs designed to strengthen background in signal processing and machine learning. Students design and run structured experiments, and develop and test procedures through further experimentation.
C. M. Stultz, E. Adalsteinsson"
Experimental design,Students will develop skills in designing and running structured experiments.,"6.4900 Introduction to EECS via Medical Technology
",1,Fall 2023,Experimental Design and Methods,"6.4900 Introduction to EECS via Medical Technology
", ,0,"() 
Prereq: Calculus II (GIR) and Physics II (GIR)
Units: 4-4-4

Explores biomedical signals generated from electrocardiograms, glucose detectors or ultrasound images, and magnetic resonance images. Topics include physical characterization and modeling of systems in the time and frequency domains; analog and digital signals and noise; basic machine learning including decision trees, clustering, and classification; and introductory machine vision. Labs designed to strengthen background in signal processing and machine learning. Students design and run structured experiments, and develop and test procedures through further experimentation.
C. M. Stultz, E. Adalsteinsson"
Programming,Students will enhance their programming skills through the development and testing of procedures.,"6.4900 Introduction to EECS via Medical Technology
",1,Fall 2023,Programming and Coding,"6.4900 Introduction to EECS via Medical Technology
", ,0,"() 
Prereq: Calculus II (GIR) and Physics II (GIR)
Units: 4-4-4

Explores biomedical signals generated from electrocardiograms, glucose detectors or ultrasound images, and magnetic resonance images. Topics include physical characterization and modeling of systems in the time and frequency domains; analog and digital signals and noise; basic machine learning including decision trees, clustering, and classification; and introductory machine vision. Labs designed to strengthen background in signal processing and machine learning. Students design and run structured experiments, and develop and test procedures through further experimentation.
C. M. Stultz, E. Adalsteinsson"
Biomedical signal analysis,"Students will learn how to analyze biomedical signals generated from electrocardiograms, glucose detectors, ultrasound images, and magnetic resonance images.","6.4900 Introduction to EECS via Medical Technology
",1,Fall 2023,Biomedical signal analysis,"6.4900 Introduction to EECS via Medical Technology
", ,0,"() 
Prereq: Calculus II (GIR) and Physics II (GIR)
Units: 4-4-4

Explores biomedical signals generated from electrocardiograms, glucose detectors or ultrasound images, and magnetic resonance images. Topics include physical characterization and modeling of systems in the time and frequency domains; analog and digital signals and noise; basic machine learning including decision trees, clustering, and classification; and introductory machine vision. Labs designed to strengthen background in signal processing and machine learning. Students design and run structured experiments, and develop and test procedures through further experimentation.
C. M. Stultz, E. Adalsteinsson"
MATLAB,Students will gain proficiency in using MATLAB for processing physiological data.,"6.8800[J] Biomedical Signal and Image Processing
",1,Fall 2023,,"6.8800[J] Biomedical Signal and Image Processing
", ,0,"()
(Same subject as 16.456[J], HST.582[J])(Subject meets with 6.8801[J], HST.482[J])
Prereq: (6.3700 and (2.004, 6.3000, 16.002, or 18.085)) or permission of instructor
Units: 3-1-8

Fundamentals of digital signal processing with emphasis on problems in biomedical research and clinical medicine. Basic principles and algorithms for processing both deterministic and random signals. Topics include data acquisition, imaging, filtering, coding, feature extraction, and modeling. Lab projects, performed in MATLAB, provide practical experience in processing physiological data, with examples from cardiology, speech processing, and medical imaging. Lectures cover signal processing topics relevant to the lab exercises, as well as background on the biological signals processed in the labs. Students taking graduate version complete additional assignments.
J. Greenberg, E. Adalsteinsson, W. Wells"
Signal processing,Students will learn the techniques and algorithms used for processing both deterministic and random signals.,"6.8800[J] Biomedical Signal and Image Processing
",1,Fall 2023,Signal processing,"6.8800[J] Biomedical Signal and Image Processing
", ,0,"()
(Same subject as 16.456[J], HST.582[J])(Subject meets with 6.8801[J], HST.482[J])
Prereq: (6.3700 and (2.004, 6.3000, 16.002, or 18.085)) or permission of instructor
Units: 3-1-8

Fundamentals of digital signal processing with emphasis on problems in biomedical research and clinical medicine. Basic principles and algorithms for processing both deterministic and random signals. Topics include data acquisition, imaging, filtering, coding, feature extraction, and modeling. Lab projects, performed in MATLAB, provide practical experience in processing physiological data, with examples from cardiology, speech processing, and medical imaging. Lectures cover signal processing topics relevant to the lab exercises, as well as background on the biological signals processed in the labs. Students taking graduate version complete additional assignments.
J. Greenberg, E. Adalsteinsson, W. Wells"
MATLAB,Students will gain proficiency in using MATLAB for processing physiological data.,"6.8801[J] Biomedical Signal and Image Processing
",1,Fall 2023,Programming Language,"6.8801[J] Biomedical Signal and Image Processing
", ,0,"()
(Same subject as HST.482[J])(Subject meets with 6.8800[J], 16.456[J], HST.582[J])
Prereq: (6.3700 or permission of instructor) and (2.004, 6.3000, 16.002, or 18.085)
Units: 3-1-8

Fundamentals of digital signal processing with emphasis on problems in biomedical research and clinical medicine. Basic principles and algorithms for processing both deterministic and random signals. Topics include data acquisition, imaging, filtering, coding, feature extraction, and modeling. Lab projects, performed in MATLAB, provide practical experience in processing physiological data, with examples from cardiology, speech processing, and medical imaging. Lectures cover signal processing topics relevant to the lab exercises, as well as background on the biological signals processed in the labs. Students taking graduate version complete additional assignments.
J. Greenberg, E. Adalsteinsson, W. Wells"
Feature extraction,Students will learn how to extract relevant features from biomedical signals.,"6.8801[J] Biomedical Signal and Image Processing
",1,Fall 2023,,"6.8801[J] Biomedical Signal and Image Processing
", ,0,"()
(Same subject as HST.482[J])(Subject meets with 6.8800[J], 16.456[J], HST.582[J])
Prereq: (6.3700 or permission of instructor) and (2.004, 6.3000, 16.002, or 18.085)
Units: 3-1-8

Fundamentals of digital signal processing with emphasis on problems in biomedical research and clinical medicine. Basic principles and algorithms for processing both deterministic and random signals. Topics include data acquisition, imaging, filtering, coding, feature extraction, and modeling. Lab projects, performed in MATLAB, provide practical experience in processing physiological data, with examples from cardiology, speech processing, and medical imaging. Lectures cover signal processing topics relevant to the lab exercises, as well as background on the biological signals processed in the labs. Students taking graduate version complete additional assignments.
J. Greenberg, E. Adalsteinsson, W. Wells"
Modeling,Students will develop the skill of creating mathematical models to represent physiological processes.,"6.8801[J] Biomedical Signal and Image Processing
",1,Fall 2023,Modeling,"6.8801[J] Biomedical Signal and Image Processing
", ,0,"()
(Same subject as HST.482[J])(Subject meets with 6.8800[J], 16.456[J], HST.582[J])
Prereq: (6.3700 or permission of instructor) and (2.004, 6.3000, 16.002, or 18.085)
Units: 3-1-8

Fundamentals of digital signal processing with emphasis on problems in biomedical research and clinical medicine. Basic principles and algorithms for processing both deterministic and random signals. Topics include data acquisition, imaging, filtering, coding, feature extraction, and modeling. Lab projects, performed in MATLAB, provide practical experience in processing physiological data, with examples from cardiology, speech processing, and medical imaging. Lectures cover signal processing topics relevant to the lab exercises, as well as background on the biological signals processed in the labs. Students taking graduate version complete additional assignments.
J. Greenberg, E. Adalsteinsson, W. Wells"
Signal processing,Students will learn various techniques and algorithms for processing both deterministic and random signals.,"6.8801[J] Biomedical Signal and Image Processing
",1,Fall 2023,Signal processing,"6.8801[J] Biomedical Signal and Image Processing
", ,0,"()
(Same subject as HST.482[J])(Subject meets with 6.8800[J], 16.456[J], HST.582[J])
Prereq: (6.3700 or permission of instructor) and (2.004, 6.3000, 16.002, or 18.085)
Units: 3-1-8

Fundamentals of digital signal processing with emphasis on problems in biomedical research and clinical medicine. Basic principles and algorithms for processing both deterministic and random signals. Topics include data acquisition, imaging, filtering, coding, feature extraction, and modeling. Lab projects, performed in MATLAB, provide practical experience in processing physiological data, with examples from cardiology, speech processing, and medical imaging. Lectures cover signal processing topics relevant to the lab exercises, as well as background on the biological signals processed in the labs. Students taking graduate version complete additional assignments.
J. Greenberg, E. Adalsteinsson, W. Wells"
Coding,Students will acquire the skill of coding algorithms and functions for signal processing tasks.,"6.8801[J] Biomedical Signal and Image Processing
",1,Fall 2023,Programming and Coding,"6.8801[J] Biomedical Signal and Image Processing
", ,0,"()
(Same subject as HST.482[J])(Subject meets with 6.8800[J], 16.456[J], HST.582[J])
Prereq: (6.3700 or permission of instructor) and (2.004, 6.3000, 16.002, or 18.085)
Units: 3-1-8

Fundamentals of digital signal processing with emphasis on problems in biomedical research and clinical medicine. Basic principles and algorithms for processing both deterministic and random signals. Topics include data acquisition, imaging, filtering, coding, feature extraction, and modeling. Lab projects, performed in MATLAB, provide practical experience in processing physiological data, with examples from cardiology, speech processing, and medical imaging. Lectures cover signal processing topics relevant to the lab exercises, as well as background on the biological signals processed in the labs. Students taking graduate version complete additional assignments.
J. Greenberg, E. Adalsteinsson, W. Wells"
Matlab,Students will gain proficiency in using Matlab for working with real data in MRI.,"6.8810[J] Data Acquisition and Image Reconstruction in MRI
",1,Fall 2023,Programming Language,"6.8810[J] Data Acquisition and Image Reconstruction in MRI
", ,0,"()
(Same subject as HST.580[J])
Prereq: 6.3010
Units: 3-0-9
Lecture: TR11-12.30 (32-144)

Applies analysis of signals and noise in linear systems, sampling, and Fourier properties to magnetic resonance (MR) imaging acquisition and reconstruction. Provides adequate foundation for MR physics to enable study of RF excitation design, efficient Fourier sampling, parallel encoding, reconstruction of non-uniformly sampled data, and the impact of hardware imperfections on reconstruction performance. Surveys active areas of MR research. Assignments include Matlab-based work with real data. Includes visit to a scan site for human MR studies.
E. AdalsteinssonNo textbook information available"
Fourier analysis,Students will learn how to apply Fourier analysis to analyze signals and noise in linear systems in MRI.,"6.8810[J] Data Acquisition and Image Reconstruction in MRI
",1,Fall 2023,Mathematical Analysis,"6.8810[J] Data Acquisition and Image Reconstruction in MRI
", ,0,"()
(Same subject as HST.580[J])
Prereq: 6.3010
Units: 3-0-9
Lecture: TR11-12.30 (32-144)

Applies analysis of signals and noise in linear systems, sampling, and Fourier properties to magnetic resonance (MR) imaging acquisition and reconstruction. Provides adequate foundation for MR physics to enable study of RF excitation design, efficient Fourier sampling, parallel encoding, reconstruction of non-uniformly sampled data, and the impact of hardware imperfections on reconstruction performance. Surveys active areas of MR research. Assignments include Matlab-based work with real data. Includes visit to a scan site for human MR studies.
E. AdalsteinssonNo textbook information available"
RF excitation design,Students will learn how to design RF excitation in MRI.,"6.8810[J] Data Acquisition and Image Reconstruction in MRI
",1,Fall 2023,RF excitation design,"6.8810[J] Data Acquisition and Image Reconstruction in MRI
", ,0,"()
(Same subject as HST.580[J])
Prereq: 6.3010
Units: 3-0-9
Lecture: TR11-12.30 (32-144)

Applies analysis of signals and noise in linear systems, sampling, and Fourier properties to magnetic resonance (MR) imaging acquisition and reconstruction. Provides adequate foundation for MR physics to enable study of RF excitation design, efficient Fourier sampling, parallel encoding, reconstruction of non-uniformly sampled data, and the impact of hardware imperfections on reconstruction performance. Surveys active areas of MR research. Assignments include Matlab-based work with real data. Includes visit to a scan site for human MR studies.
E. AdalsteinssonNo textbook information available"
Parallel encoding,Students will learn about parallel encoding techniques used in MRI.,"6.8810[J] Data Acquisition and Image Reconstruction in MRI
",1,Fall 2023,,"6.8810[J] Data Acquisition and Image Reconstruction in MRI
", ,0,"()
(Same subject as HST.580[J])
Prereq: 6.3010
Units: 3-0-9
Lecture: TR11-12.30 (32-144)

Applies analysis of signals and noise in linear systems, sampling, and Fourier properties to magnetic resonance (MR) imaging acquisition and reconstruction. Provides adequate foundation for MR physics to enable study of RF excitation design, efficient Fourier sampling, parallel encoding, reconstruction of non-uniformly sampled data, and the impact of hardware imperfections on reconstruction performance. Surveys active areas of MR research. Assignments include Matlab-based work with real data. Includes visit to a scan site for human MR studies.
E. AdalsteinssonNo textbook information available"
Non-uniform sampling,Students will learn about the reconstruction of non-uniformly sampled data in MRI.,"6.8810[J] Data Acquisition and Image Reconstruction in MRI
",1,Fall 2023,Sampling Methods,"6.8810[J] Data Acquisition and Image Reconstruction in MRI
", ,0,"()
(Same subject as HST.580[J])
Prereq: 6.3010
Units: 3-0-9
Lecture: TR11-12.30 (32-144)

Applies analysis of signals and noise in linear systems, sampling, and Fourier properties to magnetic resonance (MR) imaging acquisition and reconstruction. Provides adequate foundation for MR physics to enable study of RF excitation design, efficient Fourier sampling, parallel encoding, reconstruction of non-uniformly sampled data, and the impact of hardware imperfections on reconstruction performance. Surveys active areas of MR research. Assignments include Matlab-based work with real data. Includes visit to a scan site for human MR studies.
E. AdalsteinssonNo textbook information available"
Mathematical modeling,Students will learn how to create mathematical models for the quantification of auditory-based behavior.,"6.8830[J] Signal Processing by the Auditory System: Perception
",1,Fall 2023,Modeling,"6.8830[J] Signal Processing by the Auditory System: Perception
", ,0,"()Not offered regularly; consult department
(Same subject as HST.716[J])
Prereq: (6.3000 and (6.3700 or 6.3702)) or permission of instructor
Units: 3-0-9

Studies information processing performance of the human auditory system in relation to current physiological knowledge. Examines mathematical models for the quantification of auditory-based behavior and the relation between behavior and peripheral physiology, reflecting the tono-topic organization and stochastic responses of the auditory system. Mathematical models of psychophysical relations, incorporating quantitative knowledge of physiological transformations by the peripheral auditory system.
Staff

Vision"
Data analysis,Students will develop skills in analyzing data related to the auditory system.,"6.8830[J] Signal Processing by the Auditory System: Perception
",1,Fall 2023,Data Analysis and Research,"6.8830[J] Signal Processing by the Auditory System: Perception
", ,0,"()Not offered regularly; consult department
(Same subject as HST.716[J])
Prereq: (6.3000 and (6.3700 or 6.3702)) or permission of instructor
Units: 3-0-9

Studies information processing performance of the human auditory system in relation to current physiological knowledge. Examines mathematical models for the quantification of auditory-based behavior and the relation between behavior and peripheral physiology, reflecting the tono-topic organization and stochastic responses of the auditory system. Mathematical models of psychophysical relations, incorporating quantitative knowledge of physiological transformations by the peripheral auditory system.
Staff

Vision"
Programming,Students will gain proficiency in programming as they work on projects related to signal processing by the auditory system.,"6.8830[J] Signal Processing by the Auditory System: Perception
",1,Fall 2023,Programming and Coding,"6.8830[J] Signal Processing by the Auditory System: Perception
", ,0,"()Not offered regularly; consult department
(Same subject as HST.716[J])
Prereq: (6.3000 and (6.3700 or 6.3702)) or permission of instructor
Units: 3-0-9

Studies information processing performance of the human auditory system in relation to current physiological knowledge. Examines mathematical models for the quantification of auditory-based behavior and the relation between behavior and peripheral physiology, reflecting the tono-topic organization and stochastic responses of the auditory system. Mathematical models of psychophysical relations, incorporating quantitative knowledge of physiological transformations by the peripheral auditory system.
Staff

Vision"
Research skills,Students will learn how to conduct research in the field of auditory signal processing.,"6.8830[J] Signal Processing by the Auditory System: Perception
",1,Fall 2023,Research Skills and Analysis,"6.8830[J] Signal Processing by the Auditory System: Perception
", ,0,"()Not offered regularly; consult department
(Same subject as HST.716[J])
Prereq: (6.3000 and (6.3700 or 6.3702)) or permission of instructor
Units: 3-0-9

Studies information processing performance of the human auditory system in relation to current physiological knowledge. Examines mathematical models for the quantification of auditory-based behavior and the relation between behavior and peripheral physiology, reflecting the tono-topic organization and stochastic responses of the auditory system. Mathematical models of psychophysical relations, incorporating quantitative knowledge of physiological transformations by the peripheral auditory system.
Staff

Vision"
Problem-solving,Students will develop problem-solving skills as they apply mathematical models to understand the behavior of the auditory system.,"6.8830[J] Signal Processing by the Auditory System: Perception
",1,Fall 2023,Problem-solving,"6.8830[J] Signal Processing by the Auditory System: Perception
", ,0,"()Not offered regularly; consult department
(Same subject as HST.716[J])
Prereq: (6.3000 and (6.3700 or 6.3702)) or permission of instructor
Units: 3-0-9

Studies information processing performance of the human auditory system in relation to current physiological knowledge. Examines mathematical models for the quantification of auditory-based behavior and the relation between behavior and peripheral physiology, reflecting the tono-topic organization and stochastic responses of the auditory system. Mathematical models of psychophysical relations, incorporating quantitative knowledge of physiological transformations by the peripheral auditory system.
Staff

Vision"
Machine learning,Students will gain proficiency in machine learning techniques and their application in computer vision.,"6.8300 Advances in Computer Vision
",1,Fall 2023,Machine Learning,"6.8300 Advances in Computer Vision
", ,0,"()
(Subject meets with 6.8301)
Prereq: (6.1200 or 6.3700) and (18.06 or 18.C06)
Units: 3-0-9

Advanced topics in computer vision with a focus on the use of machine learning techniques and applications in graphics and human-computer interface. Covers image representations, texture models, structure-from-motion algorithms, Bayesian techniques, object and scene recognition, tracking, shape modeling, and image databases. Applications may include face recognition, multimodal interaction, interactive systems, cinematic special effects, and photorealistic rendering. Covers topics complementary to 6.8390. Students taking graduate version complete additional assignments.
W. T. Freeman"
Image processing,Students will learn how to manipulate and analyze images using various algorithms and techniques.,"6.8300 Advances in Computer Vision
",1,Fall 2023,,"6.8300 Advances in Computer Vision
", ,0,"()
(Subject meets with 6.8301)
Prereq: (6.1200 or 6.3700) and (18.06 or 18.C06)
Units: 3-0-9

Advanced topics in computer vision with a focus on the use of machine learning techniques and applications in graphics and human-computer interface. Covers image representations, texture models, structure-from-motion algorithms, Bayesian techniques, object and scene recognition, tracking, shape modeling, and image databases. Applications may include face recognition, multimodal interaction, interactive systems, cinematic special effects, and photorealistic rendering. Covers topics complementary to 6.8390. Students taking graduate version complete additional assignments.
W. T. Freeman"
Object recognition,Students will develop the skill to identify and classify objects in images or videos.,"6.8300 Advances in Computer Vision
",1,Fall 2023,,"6.8300 Advances in Computer Vision
", ,0,"()
(Subject meets with 6.8301)
Prereq: (6.1200 or 6.3700) and (18.06 or 18.C06)
Units: 3-0-9

Advanced topics in computer vision with a focus on the use of machine learning techniques and applications in graphics and human-computer interface. Covers image representations, texture models, structure-from-motion algorithms, Bayesian techniques, object and scene recognition, tracking, shape modeling, and image databases. Applications may include face recognition, multimodal interaction, interactive systems, cinematic special effects, and photorealistic rendering. Covers topics complementary to 6.8390. Students taking graduate version complete additional assignments.
W. T. Freeman"
Tracking,Students will learn how to track the movement of objects in videos or sequences of images.,"6.8300 Advances in Computer Vision
",1,Fall 2023,Tracking,"6.8300 Advances in Computer Vision
", ,0,"()
(Subject meets with 6.8301)
Prereq: (6.1200 or 6.3700) and (18.06 or 18.C06)
Units: 3-0-9

Advanced topics in computer vision with a focus on the use of machine learning techniques and applications in graphics and human-computer interface. Covers image representations, texture models, structure-from-motion algorithms, Bayesian techniques, object and scene recognition, tracking, shape modeling, and image databases. Applications may include face recognition, multimodal interaction, interactive systems, cinematic special effects, and photorealistic rendering. Covers topics complementary to 6.8390. Students taking graduate version complete additional assignments.
W. T. Freeman"
Database management,Students will acquire the skill to manage and query image databases effectively.,"6.8300 Advances in Computer Vision
",1,Fall 2023,Database-related tasks,"6.8300 Advances in Computer Vision
", ,0,"()
(Subject meets with 6.8301)
Prereq: (6.1200 or 6.3700) and (18.06 or 18.C06)
Units: 3-0-9

Advanced topics in computer vision with a focus on the use of machine learning techniques and applications in graphics and human-computer interface. Covers image representations, texture models, structure-from-motion algorithms, Bayesian techniques, object and scene recognition, tracking, shape modeling, and image databases. Applications may include face recognition, multimodal interaction, interactive systems, cinematic special effects, and photorealistic rendering. Covers topics complementary to 6.8390. Students taking graduate version complete additional assignments.
W. T. Freeman"
Machine learning techniques,Students will gain proficiency in using machine learning techniques in computer vision.,"6.8301 Advances in Computer Vision
",1,Fall 2023,Computational Techniques and Methods,"6.8301 Advances in Computer Vision
", ,0,"()
(Subject meets with 6.8300)
Prereq: (6.1200 or 6.3700) and (18.06 or 18.C06)
Units: 4-0-11

Advanced topics in computer vision with a focus on the use of machine learning techniques and applications in graphics and human-computer interface. Covers image representations, texture models, structure-from-motion algorithms, Bayesian techniques, object and scene recognition, tracking, shape modeling, and image databases. Applications may include face recognition, multimodal interaction, interactive systems, cinematic special effects, and photorealistic rendering. Includes instruction and practice in written and oral communication. Students taking graduate version complete additional assignments.
Staff"
Image recognition,Students will learn how to recognize and identify objects and scenes in images.,"6.8301 Advances in Computer Vision
",1,Fall 2023,Computer Vision,"6.8301 Advances in Computer Vision
", ,0,"()
(Subject meets with 6.8300)
Prereq: (6.1200 or 6.3700) and (18.06 or 18.C06)
Units: 4-0-11

Advanced topics in computer vision with a focus on the use of machine learning techniques and applications in graphics and human-computer interface. Covers image representations, texture models, structure-from-motion algorithms, Bayesian techniques, object and scene recognition, tracking, shape modeling, and image databases. Applications may include face recognition, multimodal interaction, interactive systems, cinematic special effects, and photorealistic rendering. Includes instruction and practice in written and oral communication. Students taking graduate version complete additional assignments.
Staff"
Tracking,Students will develop the skill of tracking objects and their movements in videos or sequences of images.,"6.8301 Advances in Computer Vision
",1,Fall 2023,Tracking,"6.8301 Advances in Computer Vision
", ,0,"()
(Subject meets with 6.8300)
Prereq: (6.1200 or 6.3700) and (18.06 or 18.C06)
Units: 4-0-11

Advanced topics in computer vision with a focus on the use of machine learning techniques and applications in graphics and human-computer interface. Covers image representations, texture models, structure-from-motion algorithms, Bayesian techniques, object and scene recognition, tracking, shape modeling, and image databases. Applications may include face recognition, multimodal interaction, interactive systems, cinematic special effects, and photorealistic rendering. Includes instruction and practice in written and oral communication. Students taking graduate version complete additional assignments.
Staff"
Shape modeling,Students will learn how to create and manipulate 3D shapes for computer graphics applications.,"6.8301 Advances in Computer Vision
",1,Fall 2023,Modeling,"6.8301 Advances in Computer Vision
", ,0,"()
(Subject meets with 6.8300)
Prereq: (6.1200 or 6.3700) and (18.06 or 18.C06)
Units: 4-0-11

Advanced topics in computer vision with a focus on the use of machine learning techniques and applications in graphics and human-computer interface. Covers image representations, texture models, structure-from-motion algorithms, Bayesian techniques, object and scene recognition, tracking, shape modeling, and image databases. Applications may include face recognition, multimodal interaction, interactive systems, cinematic special effects, and photorealistic rendering. Includes instruction and practice in written and oral communication. Students taking graduate version complete additional assignments.
Staff"
Image database management,Students will acquire the skill of managing and organizing large collections of images in databases.,"6.8301 Advances in Computer Vision
",1,Fall 2023,Image database management,"6.8301 Advances in Computer Vision
", ,0,"()
(Subject meets with 6.8300)
Prereq: (6.1200 or 6.3700) and (18.06 or 18.C06)
Units: 4-0-11

Advanced topics in computer vision with a focus on the use of machine learning techniques and applications in graphics and human-computer interface. Covers image representations, texture models, structure-from-motion algorithms, Bayesian techniques, object and scene recognition, tracking, shape modeling, and image databases. Applications may include face recognition, multimodal interaction, interactive systems, cinematic special effects, and photorealistic rendering. Includes instruction and practice in written and oral communication. Students taking graduate version complete additional assignments.
Staff"
Research analysis,Students will develop the skill of analyzing research papers and extracting key information.,"6.8320 Advanced Topics in Computer Vision
",1,Fall 2023,Research Skills and Analysis,"6.8320 Advanced Topics in Computer Vision
", ,0,"() Not offered regularly; consult department
Prereq: 6.801, 6.8300, or permission of instructor
Units: 3-0-9
 Subject Cancelled 

Seminar exploring advanced research topics in the field of computer vision; focus varies with lecturer. Typically structured around discussion of assigned research papers and presentations by students. Example research areas explored in this seminar include learning in vision, computational imaging techniques, multimodal human-computer interaction, biomedical imaging, representation and estimation methods used in modern computer vision.
W. T. Freeman, B. K. P. Horn, A. Torralba"
Presentation skills,Students will learn how to effectively present their ideas and research findings to an audience.,"6.8320 Advanced Topics in Computer Vision
",1,Fall 2023,Presentation skills,"6.8320 Advanced Topics in Computer Vision
", ,0,"() Not offered regularly; consult department
Prereq: 6.801, 6.8300, or permission of instructor
Units: 3-0-9
 Subject Cancelled 

Seminar exploring advanced research topics in the field of computer vision; focus varies with lecturer. Typically structured around discussion of assigned research papers and presentations by students. Example research areas explored in this seminar include learning in vision, computational imaging techniques, multimodal human-computer interaction, biomedical imaging, representation and estimation methods used in modern computer vision.
W. T. Freeman, B. K. P. Horn, A. Torralba"
Critical thinking,Students will enhance their ability to think critically and evaluate different approaches and methods in computer vision research.,"6.8320 Advanced Topics in Computer Vision
",1,Fall 2023,Cognitive Thinking,"6.8320 Advanced Topics in Computer Vision
", ,0,"() Not offered regularly; consult department
Prereq: 6.801, 6.8300, or permission of instructor
Units: 3-0-9
 Subject Cancelled 

Seminar exploring advanced research topics in the field of computer vision; focus varies with lecturer. Typically structured around discussion of assigned research papers and presentations by students. Example research areas explored in this seminar include learning in vision, computational imaging techniques, multimodal human-computer interaction, biomedical imaging, representation and estimation methods used in modern computer vision.
W. T. Freeman, B. K. P. Horn, A. Torralba"
Literature review,Students will gain the skill of conducting a comprehensive literature review to identify relevant research papers and their contributions.,"6.8320 Advanced Topics in Computer Vision
",1,Fall 2023,Literature review,"6.8320 Advanced Topics in Computer Vision
", ,0,"() Not offered regularly; consult department
Prereq: 6.801, 6.8300, or permission of instructor
Units: 3-0-9
 Subject Cancelled 

Seminar exploring advanced research topics in the field of computer vision; focus varies with lecturer. Typically structured around discussion of assigned research papers and presentations by students. Example research areas explored in this seminar include learning in vision, computational imaging techniques, multimodal human-computer interaction, biomedical imaging, representation and estimation methods used in modern computer vision.
W. T. Freeman, B. K. P. Horn, A. Torralba"
Data analysis,Students will learn how to analyze and interpret data collected from computer vision experiments.,"6.8320 Advanced Topics in Computer Vision
",1,Fall 2023,Data Analysis and Research,"6.8320 Advanced Topics in Computer Vision
", ,0,"() Not offered regularly; consult department
Prereq: 6.801, 6.8300, or permission of instructor
Units: 3-0-9
 Subject Cancelled 

Seminar exploring advanced research topics in the field of computer vision; focus varies with lecturer. Typically structured around discussion of assigned research papers and presentations by students. Example research areas explored in this seminar include learning in vision, computational imaging techniques, multimodal human-computer interaction, biomedical imaging, representation and estimation methods used in modern computer vision.
W. T. Freeman, B. K. P. Horn, A. Torralba"
Image processing,Students will gain proficiency in manipulating and enhancing digital images using various software techniques.,"6.8370 Advanced Computational Photography
",1,Fall 2023,Image Processing and Image-based Rendering,"6.8370 Advanced Computational Photography
", ,0,"()
(Subject meets with 6.8371)
Prereq: Calculus II (GIR) and 6.1020
Units: 3-0-9

Presents fundamentals and applications of hardware and software techniques used in digital and computational photography, with an emphasis on software methods. Provides sufficient background to implement solutions to photographic challenges and opportunities. Topics include cameras and image formation, image processing and image representations, high-dynamic-range imaging, human visual perception and color, single view 3-D model reconstruction, morphing, data-rich photography, super-resolution, and image-based rendering. Students taking graduate version complete additional assignments.
F. P. Durand"
3-D model reconstruction,Students will learn how to reconstruct three-dimensional models from a single view.,"6.8370 Advanced Computational Photography
",1,Fall 2023,3D Technology,"6.8370 Advanced Computational Photography
", ,0,"()
(Subject meets with 6.8371)
Prereq: Calculus II (GIR) and 6.1020
Units: 3-0-9

Presents fundamentals and applications of hardware and software techniques used in digital and computational photography, with an emphasis on software methods. Provides sufficient background to implement solutions to photographic challenges and opportunities. Topics include cameras and image formation, image processing and image representations, high-dynamic-range imaging, human visual perception and color, single view 3-D model reconstruction, morphing, data-rich photography, super-resolution, and image-based rendering. Students taking graduate version complete additional assignments.
F. P. Durand"
Data-rich photography,"Students will develop the skill of capturing and processing images with a large amount of data, such as high-resolution or multi-sensor images.","6.8370 Advanced Computational Photography
",1,Fall 2023,Data-rich photography,"6.8370 Advanced Computational Photography
", ,0,"()
(Subject meets with 6.8371)
Prereq: Calculus II (GIR) and 6.1020
Units: 3-0-9

Presents fundamentals and applications of hardware and software techniques used in digital and computational photography, with an emphasis on software methods. Provides sufficient background to implement solutions to photographic challenges and opportunities. Topics include cameras and image formation, image processing and image representations, high-dynamic-range imaging, human visual perception and color, single view 3-D model reconstruction, morphing, data-rich photography, super-resolution, and image-based rendering. Students taking graduate version complete additional assignments.
F. P. Durand"
Super-resolution,Students will learn techniques to enhance the resolution and quality of digital images.,"6.8370 Advanced Computational Photography
",1,Fall 2023,Super-resolution,"6.8370 Advanced Computational Photography
", ,0,"()
(Subject meets with 6.8371)
Prereq: Calculus II (GIR) and 6.1020
Units: 3-0-9

Presents fundamentals and applications of hardware and software techniques used in digital and computational photography, with an emphasis on software methods. Provides sufficient background to implement solutions to photographic challenges and opportunities. Topics include cameras and image formation, image processing and image representations, high-dynamic-range imaging, human visual perception and color, single view 3-D model reconstruction, morphing, data-rich photography, super-resolution, and image-based rendering. Students taking graduate version complete additional assignments.
F. P. Durand"
Image-based rendering,Students will gain the ability to generate new views of a scene using existing images as a basis.,"6.8370 Advanced Computational Photography
",1,Fall 2023,Image Processing and Image-based Rendering,"6.8370 Advanced Computational Photography
", ,0,"()
(Subject meets with 6.8371)
Prereq: Calculus II (GIR) and 6.1020
Units: 3-0-9

Presents fundamentals and applications of hardware and software techniques used in digital and computational photography, with an emphasis on software methods. Provides sufficient background to implement solutions to photographic challenges and opportunities. Topics include cameras and image formation, image processing and image representations, high-dynamic-range imaging, human visual perception and color, single view 3-D model reconstruction, morphing, data-rich photography, super-resolution, and image-based rendering. Students taking graduate version complete additional assignments.
F. P. Durand"
Image processing,Students will learn how to manipulate and analyze digital images using various software methods.,"6.8371 Digital and Computational Photography
",1,Fall 2023,Image Processing and Image-based Rendering,"6.8371 Digital and Computational Photography
", ,0,"()
(Subject meets with 6.8370)
Prereq: Calculus II (GIR) and 6.1010
Units: 3-0-9

Presents fundamentals and applications of hardware and software techniques used in digital and computational photography, with an emphasis on software methods. Provides sufficient background to implement solutions to photographic challenges and opportunities. Topics include cameras and image formation, image processing and image representations, high-dynamic-range imaging, human visual perception and color, single view 3-D model reconstruction, morphing, data-rich photography, super-resolution, and image-based rendering. Students taking graduate version complete additional assignments.
F. P. Durand

Natural Language Processing & Speech"
Computational photography,Students will gain proficiency in using computational techniques to enhance and modify photographs.,"6.8371 Digital and Computational Photography
",1,Fall 2023,Computational photography,"6.8371 Digital and Computational Photography
", ,0,"()
(Subject meets with 6.8370)
Prereq: Calculus II (GIR) and 6.1010
Units: 3-0-9

Presents fundamentals and applications of hardware and software techniques used in digital and computational photography, with an emphasis on software methods. Provides sufficient background to implement solutions to photographic challenges and opportunities. Topics include cameras and image formation, image processing and image representations, high-dynamic-range imaging, human visual perception and color, single view 3-D model reconstruction, morphing, data-rich photography, super-resolution, and image-based rendering. Students taking graduate version complete additional assignments.
F. P. Durand

Natural Language Processing & Speech"
Data-rich photography,"Students will learn how to capture and process images with a large amount of data, such as high-dynamic-range imaging.","6.8371 Digital and Computational Photography
",1,Fall 2023,Data-rich photography,"6.8371 Digital and Computational Photography
", ,0,"()
(Subject meets with 6.8370)
Prereq: Calculus II (GIR) and 6.1010
Units: 3-0-9

Presents fundamentals and applications of hardware and software techniques used in digital and computational photography, with an emphasis on software methods. Provides sufficient background to implement solutions to photographic challenges and opportunities. Topics include cameras and image formation, image processing and image representations, high-dynamic-range imaging, human visual perception and color, single view 3-D model reconstruction, morphing, data-rich photography, super-resolution, and image-based rendering. Students taking graduate version complete additional assignments.
F. P. Durand

Natural Language Processing & Speech"
Image-based rendering,Students will develop the skill of creating realistic images by using existing images as a reference.,"6.8371 Digital and Computational Photography
",1,Fall 2023,Image Processing and Image-based Rendering,"6.8371 Digital and Computational Photography
", ,0,"()
(Subject meets with 6.8370)
Prereq: Calculus II (GIR) and 6.1010
Units: 3-0-9

Presents fundamentals and applications of hardware and software techniques used in digital and computational photography, with an emphasis on software methods. Provides sufficient background to implement solutions to photographic challenges and opportunities. Topics include cameras and image formation, image processing and image representations, high-dynamic-range imaging, human visual perception and color, single view 3-D model reconstruction, morphing, data-rich photography, super-resolution, and image-based rendering. Students taking graduate version complete additional assignments.
F. P. Durand

Natural Language Processing & Speech"
Morphing,Students will learn how to transform one image into another smoothly and seamlessly.,"6.8371 Digital and Computational Photography
",1,Fall 2023,Morphing,"6.8371 Digital and Computational Photography
", ,0,"()
(Subject meets with 6.8370)
Prereq: Calculus II (GIR) and 6.1010
Units: 3-0-9

Presents fundamentals and applications of hardware and software techniques used in digital and computational photography, with an emphasis on software methods. Provides sufficient background to implement solutions to photographic challenges and opportunities. Topics include cameras and image formation, image processing and image representations, high-dynamic-range imaging, human visual perception and color, single view 3-D model reconstruction, morphing, data-rich photography, super-resolution, and image-based rendering. Students taking graduate version complete additional assignments.
F. P. Durand

Natural Language Processing & Speech"
Machine learning,"Students will gain proficiency in machine learning methods and algorithms, which are essential for natural language processing tasks.","6.8610 Quantitative Methods for Natural Language Processing
",1,Fall 2023,Machine Learning,"6.8610 Quantitative Methods for Natural Language Processing
", ,0,"()
(Subject meets with 6.8611)
Prereq: 6.3900 and (18.06 or 18.C06)
Units: 3-0-9
Lecture: TR11-12.30 (32-123)

Introduces the study of human language from a computational perspective, including syntactic, semantic and discourse processing models. Emphasizes machine learning methods and algorithms. Uses these methods and models in applications such as syntactic parsing, information extraction, statistical machine translation, dialogue systems. Students taking graduate version complete additional assignments.
Y. KimNo textbook information available"
Syntactic parsing,"Students will learn how to analyze the structure of sentences and parse them into syntactic components, a crucial skill in natural language processing.","6.8610 Quantitative Methods for Natural Language Processing
",1,Fall 2023,Syntactic parsing,"6.8610 Quantitative Methods for Natural Language Processing
", ,0,"()
(Subject meets with 6.8611)
Prereq: 6.3900 and (18.06 or 18.C06)
Units: 3-0-9
Lecture: TR11-12.30 (32-123)

Introduces the study of human language from a computational perspective, including syntactic, semantic and discourse processing models. Emphasizes machine learning methods and algorithms. Uses these methods and models in applications such as syntactic parsing, information extraction, statistical machine translation, dialogue systems. Students taking graduate version complete additional assignments.
Y. KimNo textbook information available"
Information extraction,"Students will develop the ability to extract relevant information from unstructured text data, a key skill in natural language processing applications.","6.8610 Quantitative Methods for Natural Language Processing
",1,Fall 2023,Data Extraction Techniques,"6.8610 Quantitative Methods for Natural Language Processing
", ,0,"()
(Subject meets with 6.8611)
Prereq: 6.3900 and (18.06 or 18.C06)
Units: 3-0-9
Lecture: TR11-12.30 (32-123)

Introduces the study of human language from a computational perspective, including syntactic, semantic and discourse processing models. Emphasizes machine learning methods and algorithms. Uses these methods and models in applications such as syntactic parsing, information extraction, statistical machine translation, dialogue systems. Students taking graduate version complete additional assignments.
Y. KimNo textbook information available"
Statistical machine translation,"Students will learn how to apply statistical models and algorithms to translate text from one language to another, an important skill in natural language processing.","6.8610 Quantitative Methods for Natural Language Processing
",1,Fall 2023,Statistical machine translation,"6.8610 Quantitative Methods for Natural Language Processing
", ,0,"()
(Subject meets with 6.8611)
Prereq: 6.3900 and (18.06 or 18.C06)
Units: 3-0-9
Lecture: TR11-12.30 (32-123)

Introduces the study of human language from a computational perspective, including syntactic, semantic and discourse processing models. Emphasizes machine learning methods and algorithms. Uses these methods and models in applications such as syntactic parsing, information extraction, statistical machine translation, dialogue systems. Students taking graduate version complete additional assignments.
Y. KimNo textbook information available"
Dialogue systems,"Students will gain knowledge and skills in designing and building dialogue systems, which involve natural language understanding and generation.","6.8610 Quantitative Methods for Natural Language Processing
",1,Fall 2023,Dialogue systems,"6.8610 Quantitative Methods for Natural Language Processing
", ,0,"()
(Subject meets with 6.8611)
Prereq: 6.3900 and (18.06 or 18.C06)
Units: 3-0-9
Lecture: TR11-12.30 (32-123)

Introduces the study of human language from a computational perspective, including syntactic, semantic and discourse processing models. Emphasizes machine learning methods and algorithms. Uses these methods and models in applications such as syntactic parsing, information extraction, statistical machine translation, dialogue systems. Students taking graduate version complete additional assignments.
Y. KimNo textbook information available"
Machine learning,"Students will gain proficiency in machine learning methods and algorithms, which are essential for computational language processing.","6.8611 Quantitative Methods for Natural Language Processing
",1,Fall 2023,Machine Learning,"6.8611 Quantitative Methods for Natural Language Processing
", ,0,"()
(Subject meets with 6.8610)
Prereq: 6.3900 and (18.06 or 18.C06)
Units: 4-0-11
Lecture: TR11-12.30 (32-123) Recitation: M3 (24-121) or M EVE (7 PM) (24-121) or T10 (24-307) or T4 (24-307, 32-144) or W11 (36-156) or W12 (36-156) or W1 (36-153)

Introduces the study of human language from a computational perspective, including syntactic, semantic and discourse processing models. Emphasizes machine learning methods and algorithms. Uses these methods and models in applications such as syntactic parsing, information extraction, statistical machine translation, dialogue systems. Instruction and practice in oral and written communication provided. Students taking graduate version complete additional assignments.
Y. KimNo textbook information available"
Syntactic parsing,"Students will learn how to analyze the structure of sentences and phrases in natural language, a key skill in computational language processing.","6.8611 Quantitative Methods for Natural Language Processing
",1,Fall 2023,Syntactic parsing,"6.8611 Quantitative Methods for Natural Language Processing
", ,0,"()
(Subject meets with 6.8610)
Prereq: 6.3900 and (18.06 or 18.C06)
Units: 4-0-11
Lecture: TR11-12.30 (32-123) Recitation: M3 (24-121) or M EVE (7 PM) (24-121) or T10 (24-307) or T4 (24-307, 32-144) or W11 (36-156) or W12 (36-156) or W1 (36-153)

Introduces the study of human language from a computational perspective, including syntactic, semantic and discourse processing models. Emphasizes machine learning methods and algorithms. Uses these methods and models in applications such as syntactic parsing, information extraction, statistical machine translation, dialogue systems. Instruction and practice in oral and written communication provided. Students taking graduate version complete additional assignments.
Y. KimNo textbook information available"
Hidden Markov Modeling,Students will gain proficiency in using hidden Markov models for speech and language processing.,"6.8620[J] Spoken Language Processing
",1,Fall 2023,Hidden Markov Modeling,"6.8620[J] Spoken Language Processing
", ,0,"()
(Same subject as HST.728[J])
Prereq: 6.3000 and 6.3900
Units: 3-1-8

Introduces the rapidly developing field of spoken language processing including automatic speech recognition. Topics include acoustic theory of speech production, acoustic-phonetics, signal representation, acoustic and language modeling, search, hidden Markov modeling, neural networks models, end-to-end deep learning models, and other machine learning techniques applied to speech and language processing topics. Lecture material intersperses theory with practice. Includes problem sets, laboratory exercises, and open-ended term project.
J. R. Glass"
Neural Networks,Students will learn about neural network models and their application in speech and language processing.,"6.8620[J] Spoken Language Processing
",1,Fall 2023,Artificial Intelligence,"6.8620[J] Spoken Language Processing
", ,0,"()
(Same subject as HST.728[J])
Prereq: 6.3000 and 6.3900
Units: 3-1-8

Introduces the rapidly developing field of spoken language processing including automatic speech recognition. Topics include acoustic theory of speech production, acoustic-phonetics, signal representation, acoustic and language modeling, search, hidden Markov modeling, neural networks models, end-to-end deep learning models, and other machine learning techniques applied to speech and language processing topics. Lecture material intersperses theory with practice. Includes problem sets, laboratory exercises, and open-ended term project.
J. R. Glass"
Analytical skills,Students will develop analytical skills necessary to judge the computational implications of grammatical formalisms and their role in connecting human intelligence to computational intelligence.,"6.8630[J] Natural Language and the Computer Representation of Knowledge
",1,Fall 2023,,"6.8630[J] Natural Language and the Computer Representation of Knowledge
", ,0,"()
(Same subject as 9.611[J])
Prereq: 6.4100
Units: 3-3-6

Explores the relationship between the computer representation and acquisition of knowledge and the structure of human language, its acquisition, and hypotheses about its differentiating uniqueness. Emphasizes development of analytical skills necessary to judge the computational implications of grammatical formalisms and their role in connecting human intelligence to computational intelligence. Uses concrete examples to illustrate particular computational issues in this area.
Staff"
Programming skills,Students will gain proficiency in programming as they work on computational issues related to natural language and knowledge representation.,"6.8630[J] Natural Language and the Computer Representation of Knowledge
",1,Fall 2023,Programming,"6.8630[J] Natural Language and the Computer Representation of Knowledge
", ,0,"()
(Same subject as 9.611[J])
Prereq: 6.4100
Units: 3-3-6

Explores the relationship between the computer representation and acquisition of knowledge and the structure of human language, its acquisition, and hypotheses about its differentiating uniqueness. Emphasizes development of analytical skills necessary to judge the computational implications of grammatical formalisms and their role in connecting human intelligence to computational intelligence. Uses concrete examples to illustrate particular computational issues in this area.
Staff"
