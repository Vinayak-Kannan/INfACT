Skill,Explanation,Related Course,Credits,Semester,Collapsed Skill,Title,Professor,Professor Google Scholar Citations,Description
Problem-solving,"Students will develop the ability to analyze problems, identify potential solutions, and implement effective solutions using programming.","6.100A Introduction to Computer Science Programming in Python
",1,Fall 2023,Problem-solving,"6.100A Introduction to Computer Science Programming in Python
", ,0,"(, ); first half of term
Prereq: None
Units: 3-0-3
Credit cannot also be received for 6.100L
https://introcomp.mit.edu/fall23
Lecture: MW3-4.30 (ENDS OCT 27) (26-100) Lab: TBA Recitation: F10 (ENDS OCT 27) (37-212) or F11 (ENDS OCT 27) (37-212) or F1 (ENDS OCT 27) (6-120) or F2 (ENDS OCT 27) (6-120) or F10 (ENDS OCT 27) (2-190) or F11 (ENDS OCT 27) (2-190) or F1 (ENDS OCT 27) (34-101)

Introduction to computer science and programming for students with little or no programming experience. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity. Combination of 6.100A and 6.100B or 16.C20 counts as REST subject. Final given in the seventh week of the term.
A. BellTextbooks (Fall 2023)"
Logical reasoning,"Students will enhance their ability to think logically and critically, which is essential for designing and implementing algorithms.","6.100A Introduction to Computer Science Programming in Python
",1,Fall 2023,,"6.100A Introduction to Computer Science Programming in Python
", ,0,"(, ); first half of term
Prereq: None
Units: 3-0-3
Credit cannot also be received for 6.100L
https://introcomp.mit.edu/fall23
Lecture: MW3-4.30 (ENDS OCT 27) (26-100) Lab: TBA Recitation: F10 (ENDS OCT 27) (37-212) or F11 (ENDS OCT 27) (37-212) or F1 (ENDS OCT 27) (6-120) or F2 (ENDS OCT 27) (6-120) or F10 (ENDS OCT 27) (2-190) or F11 (ENDS OCT 27) (2-190) or F1 (ENDS OCT 27) (34-101)

Introduction to computer science and programming for students with little or no programming experience. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity. Combination of 6.100A and 6.100B or 16.C20 counts as REST subject. Final given in the seventh week of the term.
A. BellTextbooks (Fall 2023)"
Collaboration,Students will have opportunities to work in teams and develop their ability to collaborate effectively with others in solving programming problems.,"6.100A Introduction to Computer Science Programming in Python
",1,Fall 2023,,"6.100A Introduction to Computer Science Programming in Python
", ,0,"(, ); first half of term
Prereq: None
Units: 3-0-3
Credit cannot also be received for 6.100L
https://introcomp.mit.edu/fall23
Lecture: MW3-4.30 (ENDS OCT 27) (26-100) Lab: TBA Recitation: F10 (ENDS OCT 27) (37-212) or F11 (ENDS OCT 27) (37-212) or F1 (ENDS OCT 27) (6-120) or F2 (ENDS OCT 27) (6-120) or F10 (ENDS OCT 27) (2-190) or F11 (ENDS OCT 27) (2-190) or F1 (ENDS OCT 27) (34-101)

Introduction to computer science and programming for students with little or no programming experience. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity. Combination of 6.100A and 6.100B or 16.C20 counts as REST subject. Final given in the seventh week of the term.
A. BellTextbooks (Fall 2023)"
Adaptability,Students will learn how to adapt their programming skills and knowledge to different problem domains and scenarios.,"6.100A Introduction to Computer Science Programming in Python
",1,Fall 2023,Adaptability,"6.100A Introduction to Computer Science Programming in Python
", ,0,"(, ); first half of term
Prereq: None
Units: 3-0-3
Credit cannot also be received for 6.100L
https://introcomp.mit.edu/fall23
Lecture: MW3-4.30 (ENDS OCT 27) (26-100) Lab: TBA Recitation: F10 (ENDS OCT 27) (37-212) or F11 (ENDS OCT 27) (37-212) or F1 (ENDS OCT 27) (6-120) or F2 (ENDS OCT 27) (6-120) or F10 (ENDS OCT 27) (2-190) or F11 (ENDS OCT 27) (2-190) or F1 (ENDS OCT 27) (34-101)

Introduction to computer science and programming for students with little or no programming experience. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity. Combination of 6.100A and 6.100B or 16.C20 counts as REST subject. Final given in the seventh week of the term.
A. BellTextbooks (Fall 2023)"
Documentation,Students will develop the ability to document their code and communicate their programming solutions clearly and concisely.,"6.100A Introduction to Computer Science Programming in Python
",1,Fall 2023,Documentation,"6.100A Introduction to Computer Science Programming in Python
", ,0,"(, ); first half of term
Prereq: None
Units: 3-0-3
Credit cannot also be received for 6.100L
https://introcomp.mit.edu/fall23
Lecture: MW3-4.30 (ENDS OCT 27) (26-100) Lab: TBA Recitation: F10 (ENDS OCT 27) (37-212) or F11 (ENDS OCT 27) (37-212) or F1 (ENDS OCT 27) (6-120) or F2 (ENDS OCT 27) (6-120) or F10 (ENDS OCT 27) (2-190) or F11 (ENDS OCT 27) (2-190) or F1 (ENDS OCT 27) (34-101)

Introduction to computer science and programming for students with little or no programming experience. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity. Combination of 6.100A and 6.100B or 16.C20 counts as REST subject. Final given in the seventh week of the term.
A. BellTextbooks (Fall 2023)"
Analytical thinking,Students will enhance their ability to analyze and evaluate complex problems and develop logical solutions.,"6.100B Introduction to Computational Thinking and Data Science
",1,Fall 2023,,"6.100B Introduction to Computational Thinking and Data Science
", ,0,"(, ); second half of term
Prereq: 6.100A or permission of instructor
Units: 3-0-3
Credit cannot also be received for 9.C20, 16.C20, 18.C20, CSE.C20
https://introcomp.mit.edu/fall23
Lecture: MW3-4.30 (BEGINS OCT 30) (26-100) Lab: TBA Recitation: F10 (BEGINS OCT 30) (37-212) or F11 (BEGINS OCT 30) (37-212) or F1 (BEGINS OCT 30) (6-120) or F2 (BEGINS OCT 30) (6-120) or F10 (BEGINS OCT 30) (2-190) or F11 (BEGINS OCT 30) (2-190) or F1 (BEGINS OCT 30) (34-101)

Provides an introduction to using computation to understand real-world phenomena. Topics include plotting, stochastic programs, probability and statistics, random walks, Monte Carlo simulations, modeling data, optimization problems, and clustering. Combination of 6.100A and 6.100B counts as REST subject.
A. BellTextbooks (Fall 2023)"
Communication,Students will improve their ability to effectively communicate their ideas and findings through written and oral presentations.,"6.100B Introduction to Computational Thinking and Data Science
",1,Fall 2023,Communication,"6.100B Introduction to Computational Thinking and Data Science
", ,0,"(, ); second half of term
Prereq: 6.100A or permission of instructor
Units: 3-0-3
Credit cannot also be received for 9.C20, 16.C20, 18.C20, CSE.C20
https://introcomp.mit.edu/fall23
Lecture: MW3-4.30 (BEGINS OCT 30) (26-100) Lab: TBA Recitation: F10 (BEGINS OCT 30) (37-212) or F11 (BEGINS OCT 30) (37-212) or F1 (BEGINS OCT 30) (6-120) or F2 (BEGINS OCT 30) (6-120) or F10 (BEGINS OCT 30) (2-190) or F11 (BEGINS OCT 30) (2-190) or F1 (BEGINS OCT 30) (34-101)

Provides an introduction to using computation to understand real-world phenomena. Topics include plotting, stochastic programs, probability and statistics, random walks, Monte Carlo simulations, modeling data, optimization problems, and clustering. Combination of 6.100A and 6.100B counts as REST subject.
A. BellTextbooks (Fall 2023)"
Collaboration,Students will develop the ability to work effectively in teams and collaborate with others to solve computational problems.,"6.100B Introduction to Computational Thinking and Data Science
",1,Fall 2023,Collaboration and Teamwork,"6.100B Introduction to Computational Thinking and Data Science
", ,0,"(, ); second half of term
Prereq: 6.100A or permission of instructor
Units: 3-0-3
Credit cannot also be received for 9.C20, 16.C20, 18.C20, CSE.C20
https://introcomp.mit.edu/fall23
Lecture: MW3-4.30 (BEGINS OCT 30) (26-100) Lab: TBA Recitation: F10 (BEGINS OCT 30) (37-212) or F11 (BEGINS OCT 30) (37-212) or F1 (BEGINS OCT 30) (6-120) or F2 (BEGINS OCT 30) (6-120) or F10 (BEGINS OCT 30) (2-190) or F11 (BEGINS OCT 30) (2-190) or F1 (BEGINS OCT 30) (34-101)

Provides an introduction to using computation to understand real-world phenomena. Topics include plotting, stochastic programs, probability and statistics, random walks, Monte Carlo simulations, modeling data, optimization problems, and clustering. Combination of 6.100A and 6.100B counts as REST subject.
A. BellTextbooks (Fall 2023)"
Critical thinking,Students will enhance their ability to think critically and evaluate information and results obtained from computational analyses.,"6.100B Introduction to Computational Thinking and Data Science
",1,Fall 2023,,"6.100B Introduction to Computational Thinking and Data Science
", ,0,"(, ); second half of term
Prereq: 6.100A or permission of instructor
Units: 3-0-3
Credit cannot also be received for 9.C20, 16.C20, 18.C20, CSE.C20
https://introcomp.mit.edu/fall23
Lecture: MW3-4.30 (BEGINS OCT 30) (26-100) Lab: TBA Recitation: F10 (BEGINS OCT 30) (37-212) or F11 (BEGINS OCT 30) (37-212) or F1 (BEGINS OCT 30) (6-120) or F2 (BEGINS OCT 30) (6-120) or F10 (BEGINS OCT 30) (2-190) or F11 (BEGINS OCT 30) (2-190) or F1 (BEGINS OCT 30) (34-101)

Provides an introduction to using computation to understand real-world phenomena. Topics include plotting, stochastic programs, probability and statistics, random walks, Monte Carlo simulations, modeling data, optimization problems, and clustering. Combination of 6.100A and 6.100B counts as REST subject.
A. BellTextbooks (Fall 2023)"
Adaptability,Students will develop the ability to adapt and apply computational techniques and tools to different domains and problem contexts.,"6.100B Introduction to Computational Thinking and Data Science
",1,Fall 2023,Adaptability,"6.100B Introduction to Computational Thinking and Data Science
", ,0,"(, ); second half of term
Prereq: 6.100A or permission of instructor
Units: 3-0-3
Credit cannot also be received for 9.C20, 16.C20, 18.C20, CSE.C20
https://introcomp.mit.edu/fall23
Lecture: MW3-4.30 (BEGINS OCT 30) (26-100) Lab: TBA Recitation: F10 (BEGINS OCT 30) (37-212) or F11 (BEGINS OCT 30) (37-212) or F1 (BEGINS OCT 30) (6-120) or F2 (BEGINS OCT 30) (6-120) or F10 (BEGINS OCT 30) (2-190) or F11 (BEGINS OCT 30) (2-190) or F1 (BEGINS OCT 30) (34-101)

Provides an introduction to using computation to understand real-world phenomena. Topics include plotting, stochastic programs, probability and statistics, random walks, Monte Carlo simulations, modeling data, optimization problems, and clustering. Combination of 6.100A and 6.100B counts as REST subject.
A. BellTextbooks (Fall 2023)"
Problem-solving,Students will develop the ability to analyze problems and devise effective solutions using computational techniques.,"6.100L Introduction to Computer Science and Programming
",1,Fall 2023,Problem-solving,"6.100L Introduction to Computer Science and Programming
", ,0,"(, )
Prereq: None
Units: 3-0-6
Credit cannot also be received for 6.100A
https://introcomp.mit.edu/6.100L_fa23
Lecture: MW3-4.30 (2-190)

Introduction to computer science and programming for students with no programming experience. Presents content taught in 6.100A over an entire semester. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity.
A. BellTextbooks (Fall 2023)"
Logical reasoning,Students will enhance their ability to think logically and critically when designing algorithms and solving problems.,"6.100L Introduction to Computer Science and Programming
",1,Fall 2023,Reasoning and Problem Solving,"6.100L Introduction to Computer Science and Programming
", ,0,"(, )
Prereq: None
Units: 3-0-6
Credit cannot also be received for 6.100A
https://introcomp.mit.edu/6.100L_fa23
Lecture: MW3-4.30 (2-190)

Introduction to computer science and programming for students with no programming experience. Presents content taught in 6.100A over an entire semester. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity.
A. BellTextbooks (Fall 2023)"
Algorithmic thinking,"Students will develop the ability to break down complex problems into smaller, manageable steps and design algorithms to solve them.","6.100L Introduction to Computer Science and Programming
",1,Fall 2023,Thinking Skills,"6.100L Introduction to Computer Science and Programming
", ,0,"(, )
Prereq: None
Units: 3-0-6
Credit cannot also be received for 6.100A
https://introcomp.mit.edu/6.100L_fa23
Lecture: MW3-4.30 (2-190)

Introduction to computer science and programming for students with no programming experience. Presents content taught in 6.100A over an entire semester. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity.
A. BellTextbooks (Fall 2023)"
Collaboration,"Students will have opportunities to collaborate with peers on programming projects, enhancing their ability to work in teams.","6.100L Introduction to Computer Science and Programming
",1,Fall 2023,Collaboration and Teamwork,"6.100L Introduction to Computer Science and Programming
", ,0,"(, )
Prereq: None
Units: 3-0-6
Credit cannot also be received for 6.100A
https://introcomp.mit.edu/6.100L_fa23
Lecture: MW3-4.30 (2-190)

Introduction to computer science and programming for students with no programming experience. Presents content taught in 6.100A over an entire semester. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity.
A. BellTextbooks (Fall 2023)"
Time management,Students will learn to manage their time effectively to meet project deadlines and complete programming tasks efficiently.,"6.100L Introduction to Computer Science and Programming
",1,Fall 2023,Time management,"6.100L Introduction to Computer Science and Programming
", ,0,"(, )
Prereq: None
Units: 3-0-6
Credit cannot also be received for 6.100A
https://introcomp.mit.edu/6.100L_fa23
Lecture: MW3-4.30 (2-190)

Introduction to computer science and programming for students with no programming experience. Presents content taught in 6.100A over an entire semester. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity.
A. BellTextbooks (Fall 2023)"
Problem-solving,Students will develop the ability to analyze and solve problems using programming techniques.,"6.1010 Fundamentals of Programming
",1,Fall 2023,Problem-solving,"6.1010 Fundamentals of Programming
", ,0,"(, ) 
Prereq: 6.100A
Units: 2-4-6
https://py.mit.edu
Lecture: MW9 (36-156) or MW10 (36-156) or MW11 (2-190, 36-155) or MW1 (36-112, 3-270) or MW2 (36-112, 26-100) or MW3 (36-156) or MW10 (36-155) Lab: F10-1 (34-501) or F2-5 (34-501) +final

Introduces fundamental concepts of programming. Designed to develop skills in applying basic methods from programming languages to abstract problems. Topics include programming and Python basics, computational concepts, software engineering, algorithmic techniques, data types, and recursion.  Lab component consists of software design, construction, and implementation of design. Enrollment may be limited.
A. HartzNo textbook information available"
Communication,Students will enhance their ability to communicate programming concepts and solutions effectively.,"6.1010 Fundamentals of Programming
",1,Fall 2023,Communication,"6.1010 Fundamentals of Programming
", ,0,"(, ) 
Prereq: 6.100A
Units: 2-4-6
https://py.mit.edu
Lecture: MW9 (36-156) or MW10 (36-156) or MW11 (2-190, 36-155) or MW1 (36-112, 3-270) or MW2 (36-112, 26-100) or MW3 (36-156) or MW10 (36-155) Lab: F10-1 (34-501) or F2-5 (34-501) +final

Introduces fundamental concepts of programming. Designed to develop skills in applying basic methods from programming languages to abstract problems. Topics include programming and Python basics, computational concepts, software engineering, algorithmic techniques, data types, and recursion.  Lab component consists of software design, construction, and implementation of design. Enrollment may be limited.
A. HartzNo textbook information available"
Logical reasoning,Students will develop the ability to think logically and critically when designing and implementing software solutions.,"6.1010 Fundamentals of Programming
",1,Fall 2023,Reasoning and Problem Solving,"6.1010 Fundamentals of Programming
", ,0,"(, ) 
Prereq: 6.100A
Units: 2-4-6
https://py.mit.edu
Lecture: MW9 (36-156) or MW10 (36-156) or MW11 (2-190, 36-155) or MW1 (36-112, 3-270) or MW2 (36-112, 26-100) or MW3 (36-156) or MW10 (36-155) Lab: F10-1 (34-501) or F2-5 (34-501) +final

Introduces fundamental concepts of programming. Designed to develop skills in applying basic methods from programming languages to abstract problems. Topics include programming and Python basics, computational concepts, software engineering, algorithmic techniques, data types, and recursion.  Lab component consists of software design, construction, and implementation of design. Enrollment may be limited.
A. HartzNo textbook information available"
Debugging,Students will acquire the ability to identify and fix errors in programming code.,"6.1010 Fundamentals of Programming
",1,Fall 2023,,"6.1010 Fundamentals of Programming
", ,0,"(, ) 
Prereq: 6.100A
Units: 2-4-6
https://py.mit.edu
Lecture: MW9 (36-156) or MW10 (36-156) or MW11 (2-190, 36-155) or MW1 (36-112, 3-270) or MW2 (36-112, 26-100) or MW3 (36-156) or MW10 (36-155) Lab: F10-1 (34-501) or F2-5 (34-501) +final

Introduces fundamental concepts of programming. Designed to develop skills in applying basic methods from programming languages to abstract problems. Topics include programming and Python basics, computational concepts, software engineering, algorithmic techniques, data types, and recursion.  Lab component consists of software design, construction, and implementation of design. Enrollment may be limited.
A. HartzNo textbook information available"
Collaboration,Students will develop the ability to work collaboratively in a programming team and contribute effectively to project development.,"6.1010 Fundamentals of Programming
",1,Fall 2023,Collaboration and Teamwork,"6.1010 Fundamentals of Programming
", ,0,"(, ) 
Prereq: 6.100A
Units: 2-4-6
https://py.mit.edu
Lecture: MW9 (36-156) or MW10 (36-156) or MW11 (2-190, 36-155) or MW1 (36-112, 3-270) or MW2 (36-112, 26-100) or MW3 (36-156) or MW10 (36-155) Lab: F10-1 (34-501) or F2-5 (34-501) +final

Introduces fundamental concepts of programming. Designed to develop skills in applying basic methods from programming languages to abstract problems. Topics include programming and Python basics, computational concepts, software engineering, algorithmic techniques, data types, and recursion.  Lab component consists of software design, construction, and implementation of design. Enrollment may be limited.
A. HartzNo textbook information available"
Problem-solving,Students will develop the ability to analyze and solve complex problems as they work on programming exercises and projects.,"6.1020 Software Construction
",1,Fall 2023,Problem-solving,"6.1020 Software Construction
", ,0,"()
Prereq: 6.1010
Units: 3-0-12

Introduces fundamental principles and techniques of software development: how to write software that is safe from bugs, easy to understand, and ready for change. Topics include specifications and invariants; testing, test-case generation, and coverage; abstract data types and representation independence; design patterns for object-oriented programming; concurrent programming, including message passing and shared memory concurrency, and defending against races and deadlock; and functional programming with immutable data and higher-order functions. Includes weekly programming exercises and larger group programming projects.
Staff"
Communication,"Students will enhance their ability to communicate effectively, both verbally and in writing, as they collaborate on group programming projects.","6.1020 Software Construction
",1,Fall 2023,Communication,"6.1020 Software Construction
", ,0,"()
Prereq: 6.1010
Units: 3-0-12

Introduces fundamental principles and techniques of software development: how to write software that is safe from bugs, easy to understand, and ready for change. Topics include specifications and invariants; testing, test-case generation, and coverage; abstract data types and representation independence; design patterns for object-oriented programming; concurrent programming, including message passing and shared memory concurrency, and defending against races and deadlock; and functional programming with immutable data and higher-order functions. Includes weekly programming exercises and larger group programming projects.
Staff"
Organization,Students will develop the ability to organize their code and project files in a structured and efficient manner.,"6.1020 Software Construction
",1,Fall 2023,Organization,"6.1020 Software Construction
", ,0,"()
Prereq: 6.1010
Units: 3-0-12

Introduces fundamental principles and techniques of software development: how to write software that is safe from bugs, easy to understand, and ready for change. Topics include specifications and invariants; testing, test-case generation, and coverage; abstract data types and representation independence; design patterns for object-oriented programming; concurrent programming, including message passing and shared memory concurrency, and defending against races and deadlock; and functional programming with immutable data and higher-order functions. Includes weekly programming exercises and larger group programming projects.
Staff"
Analytical thinking,Students will enhance their ability to analyze issues and think critically when designing and implementing software solutions.,"6.1020 Software Construction
",1,Fall 2023,Thinking Skills,"6.1020 Software Construction
", ,0,"()
Prereq: 6.1010
Units: 3-0-12

Introduces fundamental principles and techniques of software development: how to write software that is safe from bugs, easy to understand, and ready for change. Topics include specifications and invariants; testing, test-case generation, and coverage; abstract data types and representation independence; design patterns for object-oriented programming; concurrent programming, including message passing and shared memory concurrency, and defending against races and deadlock; and functional programming with immutable data and higher-order functions. Includes weekly programming exercises and larger group programming projects.
Staff"
Adaptability,Students will develop the ability to adapt to changing requirements and technologies in the field of software development.,"6.1020 Software Construction
",1,Fall 2023,Adaptability,"6.1020 Software Construction
", ,0,"()
Prereq: 6.1010
Units: 3-0-12

Introduces fundamental principles and techniques of software development: how to write software that is safe from bugs, easy to understand, and ready for change. Topics include specifications and invariants; testing, test-case generation, and coverage; abstract data types and representation independence; design patterns for object-oriented programming; concurrent programming, including message passing and shared memory concurrency, and defending against races and deadlock; and functional programming with immutable data and higher-order functions. Includes weekly programming exercises and larger group programming projects.
Staff"
Design thinking,"Students will develop the ability to think critically and creatively in the design process, applying design thinking principles to solve complex software design challenges.","6.1040 Software Design
",1,Fall 2023,,"6.1040 Software Design
", ,0,"()
Prereq: 6.1020 and 6.1200
Units: 4-0-14
https://61040-fa23.github.io
Lecture: MW2.30-4 (1-190) Recitation: R10 (38-166) or R11 (56-191) or R12 (26-314) or R1 (34-303) or R2 (34-301) or R3 (34-301)

Provides design-focused instruction on how to build complex software applications. Design topics include classic human-computer interaction (HCI) design tactics (need finding, heuristic evaluation, prototyping, user testing), conceptual design (inventing, modeling and evaluating constituent concepts), social and ethical implications, abstract data modeling, and visual design. Implementation topics include reactive front-ends, web services, and databases. Students work both on individual projects and a larger team project in which they design and build full-stack web applications.
D. JacksonTextbooks (Fall 2023)"
Analytical thinking,"Students will enhance their analytical abilities, enabling them to analyze issues and make informed decisions in software design and development.","6.1040 Software Design
",1,Fall 2023,Thinking Skills,"6.1040 Software Design
", ,0,"()
Prereq: 6.1020 and 6.1200
Units: 4-0-14
https://61040-fa23.github.io
Lecture: MW2.30-4 (1-190) Recitation: R10 (38-166) or R11 (56-191) or R12 (26-314) or R1 (34-303) or R2 (34-301) or R3 (34-301)

Provides design-focused instruction on how to build complex software applications. Design topics include classic human-computer interaction (HCI) design tactics (need finding, heuristic evaluation, prototyping, user testing), conceptual design (inventing, modeling and evaluating constituent concepts), social and ethical implications, abstract data modeling, and visual design. Implementation topics include reactive front-ends, web services, and databases. Students work both on individual projects and a larger team project in which they design and build full-stack web applications.
D. JacksonTextbooks (Fall 2023)"
Verbal communication,"Students will improve their ability to communicate verbally, effectively expressing their ideas and collaborating with team members.","6.1040 Software Design
",1,Fall 2023,,"6.1040 Software Design
", ,0,"()
Prereq: 6.1020 and 6.1200
Units: 4-0-14
https://61040-fa23.github.io
Lecture: MW2.30-4 (1-190) Recitation: R10 (38-166) or R11 (56-191) or R12 (26-314) or R1 (34-303) or R2 (34-301) or R3 (34-301)

Provides design-focused instruction on how to build complex software applications. Design topics include classic human-computer interaction (HCI) design tactics (need finding, heuristic evaluation, prototyping, user testing), conceptual design (inventing, modeling and evaluating constituent concepts), social and ethical implications, abstract data modeling, and visual design. Implementation topics include reactive front-ends, web services, and databases. Students work both on individual projects and a larger team project in which they design and build full-stack web applications.
D. JacksonTextbooks (Fall 2023)"
Written communication,"Students will develop the ability to communicate effectively in writing, producing clear and concise documentation for software design and development projects.","6.1040 Software Design
",1,Fall 2023,,"6.1040 Software Design
", ,0,"()
Prereq: 6.1020 and 6.1200
Units: 4-0-14
https://61040-fa23.github.io
Lecture: MW2.30-4 (1-190) Recitation: R10 (38-166) or R11 (56-191) or R12 (26-314) or R1 (34-303) or R2 (34-301) or R3 (34-301)

Provides design-focused instruction on how to build complex software applications. Design topics include classic human-computer interaction (HCI) design tactics (need finding, heuristic evaluation, prototyping, user testing), conceptual design (inventing, modeling and evaluating constituent concepts), social and ethical implications, abstract data modeling, and visual design. Implementation topics include reactive front-ends, web services, and databases. Students work both on individual projects and a larger team project in which they design and build full-stack web applications.
D. JacksonTextbooks (Fall 2023)"
Organizational skills,"Students will enhance their organizational abilities, managing their time and resources effectively to meet project deadlines and deliver high-quality software applications.","6.1040 Software Design
",1,Fall 2023,Organizational skills,"6.1040 Software Design
", ,0,"()
Prereq: 6.1020 and 6.1200
Units: 4-0-14
https://61040-fa23.github.io
Lecture: MW2.30-4 (1-190) Recitation: R10 (38-166) or R11 (56-191) or R12 (26-314) or R1 (34-303) or R2 (34-301) or R3 (34-301)

Provides design-focused instruction on how to build complex software applications. Design topics include classic human-computer interaction (HCI) design tactics (need finding, heuristic evaluation, prototyping, user testing), conceptual design (inventing, modeling and evaluating constituent concepts), social and ethical implications, abstract data modeling, and visual design. Implementation topics include reactive front-ends, web services, and databases. Students work both on individual projects and a larger team project in which they design and build full-stack web applications.
D. JacksonTextbooks (Fall 2023)"
Problem-solving,Students will develop the ability to solve performance-related problems in software systems.,"6.1060 Software Performance Engineering
",1,Fall 2023,Problem-solving,"6.1060 Software Performance Engineering
", ,0,"()
Prereq: 6.1020, 6.1210, and 6.1910
Units: 3-12-3
Lecture: TR9.30-11 (26-100) Lab: F10-12 (4-265) or F1-3 (34-302) or F3-5 (34-302) or F10-12 (26-322) or F1-3 (34-301) or F3-5 (34-301) or F3-5 (34-304)

Project-based introduction to building efficient, high-performance and scalable software systems. Topics include performance analysis, algorithmic techniques for high performance, instruction-level optimizations, vectorization, cache and memory hierarchy optimization, and parallel programming.
C. LeisersonNo textbook information available"
Analytical thinking,Students will enhance their ability to analyze and evaluate the performance of software systems.,"6.1060 Software Performance Engineering
",1,Fall 2023,Thinking Skills,"6.1060 Software Performance Engineering
", ,0,"()
Prereq: 6.1020, 6.1210, and 6.1910
Units: 3-12-3
Lecture: TR9.30-11 (26-100) Lab: F10-12 (4-265) or F1-3 (34-302) or F3-5 (34-302) or F10-12 (26-322) or F1-3 (34-301) or F3-5 (34-301) or F3-5 (34-304)

Project-based introduction to building efficient, high-performance and scalable software systems. Topics include performance analysis, algorithmic techniques for high performance, instruction-level optimizations, vectorization, cache and memory hierarchy optimization, and parallel programming.
C. LeisersonNo textbook information available"
Communication,Students will improve their ability to effectively communicate performance-related issues and solutions.,"6.1060 Software Performance Engineering
",1,Fall 2023,Communication,"6.1060 Software Performance Engineering
", ,0,"()
Prereq: 6.1020, 6.1210, and 6.1910
Units: 3-12-3
Lecture: TR9.30-11 (26-100) Lab: F10-12 (4-265) or F1-3 (34-302) or F3-5 (34-302) or F10-12 (26-322) or F1-3 (34-301) or F3-5 (34-301) or F3-5 (34-304)

Project-based introduction to building efficient, high-performance and scalable software systems. Topics include performance analysis, algorithmic techniques for high performance, instruction-level optimizations, vectorization, cache and memory hierarchy optimization, and parallel programming.
C. LeisersonNo textbook information available"
Teamwork,Students will develop the ability to work collaboratively in project-based software performance engineering tasks.,"6.1060 Software Performance Engineering
",1,Fall 2023,Collaboration and Teamwork,"6.1060 Software Performance Engineering
", ,0,"()
Prereq: 6.1020, 6.1210, and 6.1910
Units: 3-12-3
Lecture: TR9.30-11 (26-100) Lab: F10-12 (4-265) or F1-3 (34-302) or F3-5 (34-302) or F10-12 (26-322) or F1-3 (34-301) or F3-5 (34-301) or F3-5 (34-304)

Project-based introduction to building efficient, high-performance and scalable software systems. Topics include performance analysis, algorithmic techniques for high performance, instruction-level optimizations, vectorization, cache and memory hierarchy optimization, and parallel programming.
C. LeisersonNo textbook information available"
Project management,Students will gain the ability to effectively manage and organize software performance engineering projects.,"6.1060 Software Performance Engineering
",1,Fall 2023,,"6.1060 Software Performance Engineering
", ,0,"()
Prereq: 6.1020, 6.1210, and 6.1910
Units: 3-12-3
Lecture: TR9.30-11 (26-100) Lab: F10-12 (4-265) or F1-3 (34-302) or F3-5 (34-302) or F10-12 (26-322) or F1-3 (34-301) or F3-5 (34-301) or F3-5 (34-304)

Project-based introduction to building efficient, high-performance and scalable software systems. Topics include performance analysis, algorithmic techniques for high performance, instruction-level optimizations, vectorization, cache and memory hierarchy optimization, and parallel programming.
C. LeisersonNo textbook information available"
Problem-solving,Students will enhance their problem-solving abilities through the application of algorithm engineering principles.,"6.5060 Algorithm Engineering
",1,Fall 2023,Problem-solving,"6.5060 Algorithm Engineering
", ,0,"()
Prereq: 6.1060 and 6.1220
Units: 3-0-9

Covers the theory and practice of algorithms and data structures. Topics include models of computation, algorithm design and analysis, and performance engineering of algorithm implementations. Presents the design and implementation of sequential, parallel, cache-efficient, and external-memory algorithms. Illustrates many of the principles of algorithm engineering in the context of parallel algorithms and graph problems.
Staff"
Analytical thinking,Students will develop the ability to analyze and evaluate the efficiency and correctness of algorithms.,"6.5060 Algorithm Engineering
",1,Fall 2023,Thinking Skills,"6.5060 Algorithm Engineering
", ,0,"()
Prereq: 6.1060 and 6.1220
Units: 3-0-9

Covers the theory and practice of algorithms and data structures. Topics include models of computation, algorithm design and analysis, and performance engineering of algorithm implementations. Presents the design and implementation of sequential, parallel, cache-efficient, and external-memory algorithms. Illustrates many of the principles of algorithm engineering in the context of parallel algorithms and graph problems.
Staff"
Communication,Students will improve their communication skills through discussions and presentations of algorithmic solutions.,"6.5060 Algorithm Engineering
",1,Fall 2023,Communication,"6.5060 Algorithm Engineering
", ,0,"()
Prereq: 6.1060 and 6.1220
Units: 3-0-9

Covers the theory and practice of algorithms and data structures. Topics include models of computation, algorithm design and analysis, and performance engineering of algorithm implementations. Presents the design and implementation of sequential, parallel, cache-efficient, and external-memory algorithms. Illustrates many of the principles of algorithm engineering in the context of parallel algorithms and graph problems.
Staff"
Teamwork,Students will have the opportunity to collaborate with peers on algorithm design and implementation projects.,"6.5060 Algorithm Engineering
",1,Fall 2023,Collaboration and Teamwork,"6.5060 Algorithm Engineering
", ,0,"()
Prereq: 6.1060 and 6.1220
Units: 3-0-9

Covers the theory and practice of algorithms and data structures. Topics include models of computation, algorithm design and analysis, and performance engineering of algorithm implementations. Presents the design and implementation of sequential, parallel, cache-efficient, and external-memory algorithms. Illustrates many of the principles of algorithm engineering in the context of parallel algorithms and graph problems.
Staff"
Adaptability,Students will learn to adapt algorithms to different computational environments and constraints.,"6.5060 Algorithm Engineering
",1,Fall 2023,Adaptability,"6.5060 Algorithm Engineering
", ,0,"()
Prereq: 6.1060 and 6.1220
Units: 3-0-9

Covers the theory and practice of algorithms and data structures. Topics include models of computation, algorithm design and analysis, and performance engineering of algorithm implementations. Presents the design and implementation of sequential, parallel, cache-efficient, and external-memory algorithms. Illustrates many of the principles of algorithm engineering in the context of parallel algorithms and graph problems.
Staff"
Problem-solving,"Students will develop the ability to solve complex problems related to programming multicore machines, including identifying and addressing issues related to locking, scalability, and load balancing.","6.5080 Multicore Programming
",1,Fall 2023,Problem-solving,"6.5080 Multicore Programming
", ,0,"()
(Subject meets with 6.5081)
Prereq: 6.1210
Units: 4-0-8

Introduces principles and core techniques for programming multicore machines. Topics include locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and state-of-the-art synchronization techniques, such as transactional memory. Includes sequence of programming assignments on a large multicore machine, culminating with the design of a highly concurrent application. Students taking graduate version complete additional assignments.
Staff"
Analytical thinking,"Students will enhance their ability to analyze and evaluate different approaches and techniques for programming multicore machines, and make informed decisions based on their analysis.","6.5080 Multicore Programming
",1,Fall 2023,Thinking Skills,"6.5080 Multicore Programming
", ,0,"()
(Subject meets with 6.5081)
Prereq: 6.1210
Units: 4-0-8

Introduces principles and core techniques for programming multicore machines. Topics include locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and state-of-the-art synchronization techniques, such as transactional memory. Includes sequence of programming assignments on a large multicore machine, culminating with the design of a highly concurrent application. Students taking graduate version complete additional assignments.
Staff"
e,"The course description provided is incomplete, so the skills, knowledge, and abilities listed above are based on the assumption of the content covered in a typical course on multicore programming.","6.5080 Multicore Programming
",1,Fall 2023,e,"6.5080 Multicore Programming
", ,0,"()
(Subject meets with 6.5081)
Prereq: 6.1210
Units: 4-0-8

Introduces principles and core techniques for programming multicore machines. Topics include locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and state-of-the-art synchronization techniques, such as transactional memory. Includes sequence of programming assignments on a large multicore machine, culminating with the design of a highly concurrent application. Students taking graduate version complete additional assignments.
Staff"
Problem-solving,Students will develop problem-solving abilities as they work on programming assignments and tackle challenges related to multicore programming.,"6.5081 Multicore Programming
",1,Fall 2023,Problem-solving,"6.5081 Multicore Programming
", ,0,"()
(Subject meets with 6.5080)
Prereq: 6.1210
Units: 4-0-8
 Subject Cancelled 

Introduces principles and core techniques for programming multicore machines. Topics include locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and state-of-the-art synchronization techniques, such as transactional memory. Includes sequence of programming assignments on a large multicore machine, culminating with the design of a highly concurrent application. Students taking graduate version complete additional assignments.
Staff

Programming Languages"
Communication,Students will enhance their communication abilities through discussions and presentations related to multicore programming concepts and assignments.,"6.5081 Multicore Programming
",1,Fall 2023,Communication,"6.5081 Multicore Programming
", ,0,"()
(Subject meets with 6.5080)
Prereq: 6.1210
Units: 4-0-8
 Subject Cancelled 

Introduces principles and core techniques for programming multicore machines. Topics include locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and state-of-the-art synchronization techniques, such as transactional memory. Includes sequence of programming assignments on a large multicore machine, culminating with the design of a highly concurrent application. Students taking graduate version complete additional assignments.
Staff

Programming Languages"
Analytical thinking,Students will develop the ability to analyze and evaluate different approaches and techniques for programming multicore machines.,"6.5081 Multicore Programming
",1,Fall 2023,Thinking Skills,"6.5081 Multicore Programming
", ,0,"()
(Subject meets with 6.5080)
Prereq: 6.1210
Units: 4-0-8
 Subject Cancelled 

Introduces principles and core techniques for programming multicore machines. Topics include locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and state-of-the-art synchronization techniques, such as transactional memory. Includes sequence of programming assignments on a large multicore machine, culminating with the design of a highly concurrent application. Students taking graduate version complete additional assignments.
Staff

Programming Languages"
Time management,Students will improve their ability to manage their time effectively to complete programming assignments and meet deadlines.,"6.5081 Multicore Programming
",1,Fall 2023,Time management,"6.5081 Multicore Programming
", ,0,"()
(Subject meets with 6.5080)
Prereq: 6.1210
Units: 4-0-8
 Subject Cancelled 

Introduces principles and core techniques for programming multicore machines. Topics include locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and state-of-the-art synchronization techniques, such as transactional memory. Includes sequence of programming assignments on a large multicore machine, culminating with the design of a highly concurrent application. Students taking graduate version complete additional assignments.
Staff

Programming Languages"
Analytical thinking,Students will develop the ability to analyze complex issues associated with the implementation of higher-level programming languages.,"6.1100 Computer Language Engineering
",1,Fall 2023,Thinking Skills,"6.1100 Computer Language Engineering
", ,0,"()
Prereq: 6.1020 and 6.1910
Units: 4-4-4

Analyzes issues associated with the implementation of higher-level programming languages. Fundamental concepts, functions, and structures of compilers. The interaction of theory and practice. Using tools in building software. Includes a multi-person project on compiler design and implementation.
Staff"
Problem-solving,Students will enhance their problem-solving abilities through the practical application of compiler design principles.,"6.1100 Computer Language Engineering
",1,Fall 2023,Problem-solving,"6.1100 Computer Language Engineering
", ,0,"()
Prereq: 6.1020 and 6.1910
Units: 4-4-4

Analyzes issues associated with the implementation of higher-level programming languages. Fundamental concepts, functions, and structures of compilers. The interaction of theory and practice. Using tools in building software. Includes a multi-person project on compiler design and implementation.
Staff"
Communication,Students will improve their communication skills through collaborative project work and presenting their findings.,"6.1100 Computer Language Engineering
",1,Fall 2023,Communication,"6.1100 Computer Language Engineering
", ,0,"()
Prereq: 6.1020 and 6.1910
Units: 4-4-4

Analyzes issues associated with the implementation of higher-level programming languages. Fundamental concepts, functions, and structures of compilers. The interaction of theory and practice. Using tools in building software. Includes a multi-person project on compiler design and implementation.
Staff"
Teamwork,"Students will develop the ability to work effectively in a team setting, collaborating with others on the multi-person project.","6.1100 Computer Language Engineering
",1,Fall 2023,Collaboration and Teamwork,"6.1100 Computer Language Engineering
", ,0,"()
Prereq: 6.1020 and 6.1910
Units: 4-4-4

Analyzes issues associated with the implementation of higher-level programming languages. Fundamental concepts, functions, and structures of compilers. The interaction of theory and practice. Using tools in building software. Includes a multi-person project on compiler design and implementation.
Staff"
Time management,Students will learn to manage their time effectively to meet project deadlines and complete assignments in a timely manner.,"6.1100 Computer Language Engineering
",1,Fall 2023,Time management,"6.1100 Computer Language Engineering
", ,0,"()
Prereq: 6.1020 and 6.1910
Units: 4-4-4

Analyzes issues associated with the implementation of higher-level programming languages. Fundamental concepts, functions, and structures of compilers. The interaction of theory and practice. Using tools in building software. Includes a multi-person project on compiler design and implementation.
Staff"
Problem-solving,"Students will develop problem-solving abilities as they work on designing and implementing programming languages and solving challenges related to parsing, semantics, virtual machines, and optimization.","6.1120 Dynamic Computer Language Engineering
",1,Fall 2023,Problem-solving,"6.1120 Dynamic Computer Language Engineering
", ,0,"()
Prereq: 6.1020 or 6.1910
Units: 4-4-4
Lecture: MWF1 (66-160) Recitation: TR1 (36-155)

Studies the design and implementation of modern, dynamic programming languages. Topics include fundamental approaches for parsing, semantics and interpretation, virtual machines, garbage collection, just-in-time machine code generation, and optimization. Includes a semester-long, group project that delivers a virtual machine that spans all of these topics.
M. RinardNo textbook information available"
Communication,"Students will enhance their communication skills through the semester-long group project, which involves collaborating with team members and presenting their work.","6.1120 Dynamic Computer Language Engineering
",1,Fall 2023,Communication,"6.1120 Dynamic Computer Language Engineering
", ,0,"()
Prereq: 6.1020 or 6.1910
Units: 4-4-4
Lecture: MWF1 (66-160) Recitation: TR1 (36-155)

Studies the design and implementation of modern, dynamic programming languages. Topics include fundamental approaches for parsing, semantics and interpretation, virtual machines, garbage collection, just-in-time machine code generation, and optimization. Includes a semester-long, group project that delivers a virtual machine that spans all of these topics.
M. RinardNo textbook information available"
Analytical thinking,Students will develop the ability to analyze programming language constructs and their impact on program execution.,"6.1120 Dynamic Computer Language Engineering
",1,Fall 2023,Thinking Skills,"6.1120 Dynamic Computer Language Engineering
", ,0,"()
Prereq: 6.1020 or 6.1910
Units: 4-4-4
Lecture: MWF1 (66-160) Recitation: TR1 (36-155)

Studies the design and implementation of modern, dynamic programming languages. Topics include fundamental approaches for parsing, semantics and interpretation, virtual machines, garbage collection, just-in-time machine code generation, and optimization. Includes a semester-long, group project that delivers a virtual machine that spans all of these topics.
M. RinardNo textbook information available"
Teamwork,"Students will learn to work effectively in a group setting, collaborating with team members to deliver a virtual machine that encompasses various topics.","6.1120 Dynamic Computer Language Engineering
",1,Fall 2023,Collaboration and Teamwork,"6.1120 Dynamic Computer Language Engineering
", ,0,"()
Prereq: 6.1020 or 6.1910
Units: 4-4-4
Lecture: MWF1 (66-160) Recitation: TR1 (36-155)

Studies the design and implementation of modern, dynamic programming languages. Topics include fundamental approaches for parsing, semantics and interpretation, virtual machines, garbage collection, just-in-time machine code generation, and optimization. Includes a semester-long, group project that delivers a virtual machine that spans all of these topics.
M. RinardNo textbook information available"
Time management,Students will develop the ability to manage their time effectively to meet project deadlines and complete assignments in a timely manner.,"6.1120 Dynamic Computer Language Engineering
",1,Fall 2023,Time management,"6.1120 Dynamic Computer Language Engineering
", ,0,"()
Prereq: 6.1020 or 6.1910
Units: 4-4-4
Lecture: MWF1 (66-160) Recitation: TR1 (36-155)

Studies the design and implementation of modern, dynamic programming languages. Topics include fundamental approaches for parsing, semantics and interpretation, virtual machines, garbage collection, just-in-time machine code generation, and optimization. Includes a semester-long, group project that delivers a virtual machine that spans all of these topics.
M. RinardNo textbook information available"
Problem-solving,Students will develop problem-solving abilities as they work on implementing program analysis techniques and building verifiers.,"6.5110 Foundations of Program Analysis
",1,Fall 2023,Problem-solving,"6.5110 Foundations of Program Analysis
", ,0,"()
Prereq: 6.1100
Units: 3-0-9
 Subject Cancelled 

Presents major principles and techniques for program analysis. Includes formal semantics, type systems and type-based program analysis, abstract interpretation and model checking and synthesis. Emphasis on Haskell and Ocaml, but no prior experience in these languages is assumed. Student assignments include implementing of techniques covered in class, including building simple verifiers.
A. Solar-Lezama"
Communication,"Students will enhance their communication abilities through assignments and class discussions, as they explain and present their program analysis implementations.","6.5110 Foundations of Program Analysis
",1,Fall 2023,Communication,"6.5110 Foundations of Program Analysis
", ,0,"()
Prereq: 6.1100
Units: 3-0-9
 Subject Cancelled 

Presents major principles and techniques for program analysis. Includes formal semantics, type systems and type-based program analysis, abstract interpretation and model checking and synthesis. Emphasis on Haskell and Ocaml, but no prior experience in these languages is assumed. Student assignments include implementing of techniques covered in class, including building simple verifiers.
A. Solar-Lezama"
Analytical thinking,Students will develop the ability to analyze complex problems and propose solutions.,"6.5120 Formal Reasoning About Programs
",1,Fall 2023,Thinking Skills,"6.5120 Formal Reasoning About Programs
", ,0,"()
Prereq: 6.1020 and 6.1200
Units: 3-0-9

Surveys techniques for rigorous mathematical reasoning about correctness of software, emphasizing commonalities across approaches. Introduces interactive computer theorem proving with the Coq proof assistant, which is used for all assignments, providing immediate feedback on soundness of logical arguments. Covers common program-proof techniques, including operational semantics, model checking, abstract interpretation, type systems, program logics, and their applications to functional, imperative, and concurrent programs. Develops a common conceptual framework based on invariants, abstraction, and modularity applied to state and labeled transition systems.
Staff"
Problem-solving,Students will enhance their problem-solving skills through the application of formal reasoning techniques.,"6.5120 Formal Reasoning About Programs
",1,Fall 2023,Problem-solving,"6.5120 Formal Reasoning About Programs
", ,0,"()
Prereq: 6.1020 and 6.1200
Units: 3-0-9

Surveys techniques for rigorous mathematical reasoning about correctness of software, emphasizing commonalities across approaches. Introduces interactive computer theorem proving with the Coq proof assistant, which is used for all assignments, providing immediate feedback on soundness of logical arguments. Covers common program-proof techniques, including operational semantics, model checking, abstract interpretation, type systems, program logics, and their applications to functional, imperative, and concurrent programs. Develops a common conceptual framework based on invariants, abstraction, and modularity applied to state and labeled transition systems.
Staff"
Communication,Students will improve their ability to communicate complex ideas and logical arguments.,"6.5120 Formal Reasoning About Programs
",1,Fall 2023,Communication,"6.5120 Formal Reasoning About Programs
", ,0,"()
Prereq: 6.1020 and 6.1200
Units: 3-0-9

Surveys techniques for rigorous mathematical reasoning about correctness of software, emphasizing commonalities across approaches. Introduces interactive computer theorem proving with the Coq proof assistant, which is used for all assignments, providing immediate feedback on soundness of logical arguments. Covers common program-proof techniques, including operational semantics, model checking, abstract interpretation, type systems, program logics, and their applications to functional, imperative, and concurrent programs. Develops a common conceptual framework based on invariants, abstraction, and modularity applied to state and labeled transition systems.
Staff"
Abstraction,Students will develop the ability to abstract program behaviors and reason about them at a higher level.,"6.5120 Formal Reasoning About Programs
",1,Fall 2023,Abstraction,"6.5120 Formal Reasoning About Programs
", ,0,"()
Prereq: 6.1020 and 6.1200
Units: 3-0-9

Surveys techniques for rigorous mathematical reasoning about correctness of software, emphasizing commonalities across approaches. Introduces interactive computer theorem proving with the Coq proof assistant, which is used for all assignments, providing immediate feedback on soundness of logical arguments. Covers common program-proof techniques, including operational semantics, model checking, abstract interpretation, type systems, program logics, and their applications to functional, imperative, and concurrent programs. Develops a common conceptual framework based on invariants, abstraction, and modularity applied to state and labeled transition systems.
Staff"
Modularity,Students will learn how to design modular programs and reason about their correctness.,"6.5120 Formal Reasoning About Programs
",1,Fall 2023,Modularity,"6.5120 Formal Reasoning About Programs
", ,0,"()
Prereq: 6.1020 and 6.1200
Units: 3-0-9

Surveys techniques for rigorous mathematical reasoning about correctness of software, emphasizing commonalities across approaches. Introduces interactive computer theorem proving with the Coq proof assistant, which is used for all assignments, providing immediate feedback on soundness of logical arguments. Covers common program-proof techniques, including operational semantics, model checking, abstract interpretation, type systems, program logics, and their applications to functional, imperative, and concurrent programs. Develops a common conceptual framework based on invariants, abstraction, and modularity applied to state and labeled transition systems.
Staff"
Problem-solving,Students will develop the ability to analyze complex problems and devise effective solutions.,"6.5150 Large-scale Symbolic Systems
",1,Fall 2023,Problem-solving,"6.5150 Large-scale Symbolic Systems
", ,0,"()
(Subject meets with 6.5151)
Prereq: 6.4100 or permission of instructor
Units: 3-0-9

Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.
G. J. Sussman"
Critical thinking,Students will enhance their critical thinking skills by evaluating and assessing different approaches and solutions.,"6.5150 Large-scale Symbolic Systems
",1,Fall 2023,Thinking Skills,"6.5150 Large-scale Symbolic Systems
", ,0,"()
(Subject meets with 6.5151)
Prereq: 6.4100 or permission of instructor
Units: 3-0-9

Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.
G. J. Sussman"
Collaboration,Students will develop the ability to work effectively in teams and collaborate with others in the development of large-scale symbolic systems.,"6.5150 Large-scale Symbolic Systems
",1,Fall 2023,Collaboration and Teamwork,"6.5150 Large-scale Symbolic Systems
", ,0,"()
(Subject meets with 6.5151)
Prereq: 6.4100 or permission of instructor
Units: 3-0-9

Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.
G. J. Sussman"
Adaptability,Students will learn how to adapt their skills and knowledge to new and unforeseen challenges in the field of symbolic systems.,"6.5150 Large-scale Symbolic Systems
",1,Fall 2023,Adaptability,"6.5150 Large-scale Symbolic Systems
", ,0,"()
(Subject meets with 6.5151)
Prereq: 6.4100 or permission of instructor
Units: 3-0-9

Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.
G. J. Sussman"
Research skills,Students will develop the ability to conduct research and gather relevant information to support their work in large-scale symbolic systems.,"6.5150 Large-scale Symbolic Systems
",1,Fall 2023,,"6.5150 Large-scale Symbolic Systems
", ,0,"()
(Subject meets with 6.5151)
Prereq: 6.4100 or permission of instructor
Units: 3-0-9

Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.
G. J. Sussman"
System analysis,Students will develop the ability to analyze and evaluate the functionality and performance of large-scale symbolic systems.,"6.5151 Large-scale Symbolic Systems
",1,Fall 2023,System analysis,"6.5151 Large-scale Symbolic Systems
", ,0,"()
(Subject meets with 6.5150)
Prereq: 6.4100 or permission of instructor
Units: 3-0-9

Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.
Staff"
Teamwork,Students will enhance their ability to work effectively in teams to design and implement large software systems.,"6.5151 Large-scale Symbolic Systems
",1,Fall 2023,Collaboration and Teamwork,"6.5151 Large-scale Symbolic Systems
", ,0,"()
(Subject meets with 6.5150)
Prereq: 6.4100 or permission of instructor
Units: 3-0-9

Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.
Staff"
Adaptability,Students will develop the ability to adapt their software systems to unforeseen uses and requirements.,"6.5151 Large-scale Symbolic Systems
",1,Fall 2023,Adaptability,"6.5151 Large-scale Symbolic Systems
", ,0,"()
(Subject meets with 6.5150)
Prereq: 6.4100 or permission of instructor
Units: 3-0-9

Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.
Staff"
Project management,Students will acquire the ability to effectively manage and organize projects related to large-scale symbolic systems.,"6.5151 Large-scale Symbolic Systems
",1,Fall 2023,Project Management and Design Project,"6.5151 Large-scale Symbolic Systems
", ,0,"()
(Subject meets with 6.5150)
Prereq: 6.4100 or permission of instructor
Units: 3-0-9

Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.
Staff"
Research skills,Students will develop research skills to explore and integrate new technologies and techniques into large-scale symbolic systems.,"6.5151 Large-scale Symbolic Systems
",1,Fall 2023,Skills in Research and Technical Skills,"6.5151 Large-scale Symbolic Systems
", ,0,"()
(Subject meets with 6.5150)
Prereq: 6.4100 or permission of instructor
Units: 3-0-9

Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.
Staff"
Problem-solving,The computational nature of the course and the need to analyze physical systems indicate that students will develop problem-solving abilities.,"6.5160[J] Classical Mechanics: A Computational Approach
",1,Fall 2023,Problem-solving,"6.5160[J] Classical Mechanics: A Computational Approach
", ,0,"()
(Same subject as 8.351[J], 12.620[J])
Prereq: Physics I (GIR), 18.03, and permission of instructor
Units: 3-3-6
Lecture: MWF1 (54-823) Lab: W EVE (7-10 PM) (54-517)

Classical mechanics in a computational framework, Lagrangian formulation, action, variational principles, and Hamilton's principle. Conserved quantities, Hamiltonian formulation, surfaces of section, chaos, and Liouville's theorem. Poincarďż˝ integral invariants, Poincarďż˝-Birkhoff and KAM theorems. Invariant curves and cantori. Nonlinear resonances, resonance overlap and transition to chaos. Symplectic integration. Adiabatic invariants. Applications to simple physical systems and solar system dynamics. Extensive use of computation to capture methods, for simulation, and for symbolic analysis. Programming experience required.
J. Wisdom, G. J. SussmanTextbooks (Fall 2023)

Theoretical Computer Science"
Communication,"While not explicitly mentioned, the ability to communicate effectively is essential in any scientific field, including theoretical computer science. Students are likely to enhance their communication skills through discussions and presentations of their work.","6.5160[J] Classical Mechanics: A Computational Approach
",1,Fall 2023,Communication,"6.5160[J] Classical Mechanics: A Computational Approach
", ,0,"()
(Same subject as 8.351[J], 12.620[J])
Prereq: Physics I (GIR), 18.03, and permission of instructor
Units: 3-3-6
Lecture: MWF1 (54-823) Lab: W EVE (7-10 PM) (54-517)

Classical mechanics in a computational framework, Lagrangian formulation, action, variational principles, and Hamilton's principle. Conserved quantities, Hamiltonian formulation, surfaces of section, chaos, and Liouville's theorem. Poincarďż˝ integral invariants, Poincarďż˝-Birkhoff and KAM theorems. Invariant curves and cantori. Nonlinear resonances, resonance overlap and transition to chaos. Symplectic integration. Adiabatic invariants. Applications to simple physical systems and solar system dynamics. Extensive use of computation to capture methods, for simulation, and for symbolic analysis. Programming experience required.
J. Wisdom, G. J. SussmanTextbooks (Fall 2023)

Theoretical Computer Science"
Problem-solving,Students will develop the ability to apply mathematical tools and proof techniques to solve complex problems in computer science.,"6.1200[J] Mathematics for Computer Science
",1,Fall 2023,Problem-solving,"6.1200[J] Mathematics for Computer Science
", ,0,"(, ) 
(Same subject as 18.062[J])
Prereq: Calculus I (GIR)
Units: 5-0-7
Lecture: TR2.30-4 (26-100) Recitation: WF10 (26-168, 36-144) or WF11 (26-168, 36-144, 13-3101) or WF12 (26-168, 36-144, 13-3101) or WF1 (26-168, 38-166, 24-112) or WF2 (26-168, 38-166, 24-307) or WF3 (26-168, 38-166, 24-307) or WF4 (26-168) +final

Elementary discrete mathematics for science and engineering, with a focus on mathematical tools and proof techniques useful in computer science. Topics include logical notation, sets, relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools, and discrete probability.
Z. AbelNo textbook information available"
Communication,"Students will enhance their ability to communicate mathematical ideas and proofs effectively, both verbally and in writing.","6.1200[J] Mathematics for Computer Science
",1,Fall 2023,Communication,"6.1200[J] Mathematics for Computer Science
", ,0,"(, ) 
(Same subject as 18.062[J])
Prereq: Calculus I (GIR)
Units: 5-0-7
Lecture: TR2.30-4 (26-100) Recitation: WF10 (26-168, 36-144) or WF11 (26-168, 36-144, 13-3101) or WF12 (26-168, 36-144, 13-3101) or WF1 (26-168, 38-166, 24-112) or WF2 (26-168, 38-166, 24-307) or WF3 (26-168, 38-166, 24-307) or WF4 (26-168) +final

Elementary discrete mathematics for science and engineering, with a focus on mathematical tools and proof techniques useful in computer science. Topics include logical notation, sets, relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools, and discrete probability.
Z. AbelNo textbook information available"
Analytical thinking,"Students will develop the ability to analyze and evaluate mathematical statements, proofs, and algorithms critically.","6.1200[J] Mathematics for Computer Science
",1,Fall 2023,Thinking Skills,"6.1200[J] Mathematics for Computer Science
", ,0,"(, ) 
(Same subject as 18.062[J])
Prereq: Calculus I (GIR)
Units: 5-0-7
Lecture: TR2.30-4 (26-100) Recitation: WF10 (26-168, 36-144) or WF11 (26-168, 36-144, 13-3101) or WF12 (26-168, 36-144, 13-3101) or WF1 (26-168, 38-166, 24-112) or WF2 (26-168, 38-166, 24-307) or WF3 (26-168, 38-166, 24-307) or WF4 (26-168) +final

Elementary discrete mathematics for science and engineering, with a focus on mathematical tools and proof techniques useful in computer science. Topics include logical notation, sets, relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools, and discrete probability.
Z. AbelNo textbook information available"
Logical reasoning,Students will enhance their ability to think logically and construct rigorous mathematical arguments.,"6.1200[J] Mathematics for Computer Science
",1,Fall 2023,Reasoning and Problem Solving,"6.1200[J] Mathematics for Computer Science
", ,0,"(, ) 
(Same subject as 18.062[J])
Prereq: Calculus I (GIR)
Units: 5-0-7
Lecture: TR2.30-4 (26-100) Recitation: WF10 (26-168, 36-144) or WF11 (26-168, 36-144, 13-3101) or WF12 (26-168, 36-144, 13-3101) or WF1 (26-168, 38-166, 24-112) or WF2 (26-168, 38-166, 24-307) or WF3 (26-168, 38-166, 24-307) or WF4 (26-168) +final

Elementary discrete mathematics for science and engineering, with a focus on mathematical tools and proof techniques useful in computer science. Topics include logical notation, sets, relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools, and discrete probability.
Z. AbelNo textbook information available"
Algorithmic thinking,Students will develop the ability to think algorithmically and apply mathematical concepts to algorithm design and analysis.,"6.1200[J] Mathematics for Computer Science
",1,Fall 2023,Thinking Skills,"6.1200[J] Mathematics for Computer Science
", ,0,"(, ) 
(Same subject as 18.062[J])
Prereq: Calculus I (GIR)
Units: 5-0-7
Lecture: TR2.30-4 (26-100) Recitation: WF10 (26-168, 36-144) or WF11 (26-168, 36-144, 13-3101) or WF12 (26-168, 36-144, 13-3101) or WF1 (26-168, 38-166, 24-112) or WF2 (26-168, 38-166, 24-307) or WF3 (26-168, 38-166, 24-307) or WF4 (26-168) +final

Elementary discrete mathematics for science and engineering, with a focus on mathematical tools and proof techniques useful in computer science. Topics include logical notation, sets, relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools, and discrete probability.
Z. AbelNo textbook information available"
Analytical thinking,Students will develop the ability to analyze complex problems and find efficient solutions.,"6.120A Discrete Mathematics and Proof for Computer Science
",1,Fall 2023,Thinking Skills,"6.120A Discrete Mathematics and Proof for Computer Science
", ,0,"(); second half of term
Prereq: Calculus I (GIR)
Units: 3-0-3

Subset of elementary discrete mathematics for science and engineering useful in computer science. Topics may include logical notation, sets, done relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools.
Staff"
Mathematical reasoning,Students will enhance their ability to reason mathematically and apply mathematical concepts to solve problems.,"6.120A Discrete Mathematics and Proof for Computer Science
",1,Fall 2023,Reasoning and Problem Solving,"6.120A Discrete Mathematics and Proof for Computer Science
", ,0,"(); second half of term
Prereq: Calculus I (GIR)
Units: 3-0-3

Subset of elementary discrete mathematics for science and engineering useful in computer science. Topics may include logical notation, sets, done relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools.
Staff"
Abstract thinking,Students will develop the ability to think abstractly and apply abstract concepts to real-world scenarios.,"6.120A Discrete Mathematics and Proof for Computer Science
",1,Fall 2023,Abstract thinking,"6.120A Discrete Mathematics and Proof for Computer Science
", ,0,"(); second half of term
Prereq: Calculus I (GIR)
Units: 3-0-3

Subset of elementary discrete mathematics for science and engineering useful in computer science. Topics may include logical notation, sets, done relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools.
Staff"
Proof writing,Students will acquire the ability to construct and write mathematical proofs.,"6.120A Discrete Mathematics and Proof for Computer Science
",1,Fall 2023,Proof writing,"6.120A Discrete Mathematics and Proof for Computer Science
", ,0,"(); second half of term
Prereq: Calculus I (GIR)
Units: 3-0-3

Subset of elementary discrete mathematics for science and engineering useful in computer science. Topics may include logical notation, sets, done relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools.
Staff"
Algorithm design,Students will develop the ability to design algorithms and analyze their correctness and efficiency.,"6.120A Discrete Mathematics and Proof for Computer Science
",1,Fall 2023,,"6.120A Discrete Mathematics and Proof for Computer Science
", ,0,"(); second half of term
Prereq: Calculus I (GIR)
Units: 3-0-3

Subset of elementary discrete mathematics for science and engineering useful in computer science. Topics may include logical notation, sets, done relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools.
Staff"
Problem-solving,Students will develop the ability to analyze and solve complex computational problems.,"6.1210 Introduction to Algorithms
",1,Fall 2023,Problem-solving,"6.1210 Introduction to Algorithms
", ,0,"(, )
Prereq: 6.100A and (6.120A or 6.1200)
Units: 5-0-7
Lecture: TR11-12.30 (26-100) Recitation: WF10 (34-304, 35-310, 34-303) or WF11 (34-304, 35-310, 34-303) or WF12 (34-303, 34-304) or WF1 (34-304, 35-310) or WF2 (35-310, 36-155) or WF3 (36-155) or WF4 (36-155) or WF12 (3-442) or WF1 (3-442) or WF2 (36-144) or WF12 (34-301) +final

Introduction to mathematical modeling of computational problems, as well as common algorithms, algorithmic paradigms, and data structures used to solve these problems. Emphasizes the relationship between algorithms and programming, and introduces basic performance measures and analysis techniques for these problems. Enrollment may be limited.
M. KarchmerNo textbook information available"
Critical thinking,Students will enhance their ability to think critically and evaluate the efficiency and effectiveness of algorithms.,"6.1210 Introduction to Algorithms
",1,Fall 2023,Thinking Skills,"6.1210 Introduction to Algorithms
", ,0,"(, )
Prereq: 6.100A and (6.120A or 6.1200)
Units: 5-0-7
Lecture: TR11-12.30 (26-100) Recitation: WF10 (34-304, 35-310, 34-303) or WF11 (34-304, 35-310, 34-303) or WF12 (34-303, 34-304) or WF1 (34-304, 35-310) or WF2 (35-310, 36-155) or WF3 (36-155) or WF4 (36-155) or WF12 (3-442) or WF1 (3-442) or WF2 (36-144) or WF12 (34-301) +final

Introduction to mathematical modeling of computational problems, as well as common algorithms, algorithmic paradigms, and data structures used to solve these problems. Emphasizes the relationship between algorithms and programming, and introduces basic performance measures and analysis techniques for these problems. Enrollment may be limited.
M. KarchmerNo textbook information available"
Problem-solving,Students will develop the ability to analyze complex problems and devise algorithmic solutions.,"6.1220[J] Design and Analysis of Algorithms
",1,Fall 2023,Problem-solving,"6.1220[J] Design and Analysis of Algorithms
", ,0,"(, )
(Same subject as 18.410[J])
Prereq: 6.1200 and 6.1210
Units: 4-0-8
Lecture: TR11-12.30 (34-101) Recitation: F10 (36-155) or F3 (36-153) or F10 (36-156) or F11 (36-155, 36-156) or F12 (26-210, 36-156) or F1 (26-210, 36-156) or F2 (36-153) or F10 (36-112) or F1 (36-153) or F2 (36-112) +final

Techniques for the design and analysis of efficient algorithms, emphasizing methods useful in practice. Topics include sorting; search trees, heaps, and hashing; divide-and-conquer; dynamic programming; greedy algorithms; amortized analysis; graph algorithms; and shortest paths. Advanced topics may include network flow; computational geometry; number-theoretic algorithms; polynomial and matrix calculations; caching; and parallel computing.
S. RaghuramanTextbooks (Fall 2023)"
Analytical thinking,Students will enhance their ability to analyze and evaluate the efficiency of algorithms.,"6.1220[J] Design and Analysis of Algorithms
",1,Fall 2023,Thinking Skills,"6.1220[J] Design and Analysis of Algorithms
", ,0,"(, )
(Same subject as 18.410[J])
Prereq: 6.1200 and 6.1210
Units: 4-0-8
Lecture: TR11-12.30 (34-101) Recitation: F10 (36-155) or F3 (36-153) or F10 (36-156) or F11 (36-155, 36-156) or F12 (26-210, 36-156) or F1 (26-210, 36-156) or F2 (36-153) or F10 (36-112) or F1 (36-153) or F2 (36-112) +final

Techniques for the design and analysis of efficient algorithms, emphasizing methods useful in practice. Topics include sorting; search trees, heaps, and hashing; divide-and-conquer; dynamic programming; greedy algorithms; amortized analysis; graph algorithms; and shortest paths. Advanced topics may include network flow; computational geometry; number-theoretic algorithms; polynomial and matrix calculations; caching; and parallel computing.
S. RaghuramanTextbooks (Fall 2023)"
Algorithmic reasoning,Students will develop the ability to reason about the correctness and efficiency of algorithms.,"6.1220[J] Design and Analysis of Algorithms
",1,Fall 2023,Reasoning and Problem Solving,"6.1220[J] Design and Analysis of Algorithms
", ,0,"(, )
(Same subject as 18.410[J])
Prereq: 6.1200 and 6.1210
Units: 4-0-8
Lecture: TR11-12.30 (34-101) Recitation: F10 (36-155) or F3 (36-153) or F10 (36-156) or F11 (36-155, 36-156) or F12 (26-210, 36-156) or F1 (26-210, 36-156) or F2 (36-153) or F10 (36-112) or F1 (36-153) or F2 (36-112) +final

Techniques for the design and analysis of efficient algorithms, emphasizing methods useful in practice. Topics include sorting; search trees, heaps, and hashing; divide-and-conquer; dynamic programming; greedy algorithms; amortized analysis; graph algorithms; and shortest paths. Advanced topics may include network flow; computational geometry; number-theoretic algorithms; polynomial and matrix calculations; caching; and parallel computing.
S. RaghuramanTextbooks (Fall 2023)"
Critical thinking,Students will enhance their critical thinking skills through the analysis and evaluation of algorithmic approaches.,"6.1220[J] Design and Analysis of Algorithms
",1,Fall 2023,Thinking Skills,"6.1220[J] Design and Analysis of Algorithms
", ,0,"(, )
(Same subject as 18.410[J])
Prereq: 6.1200 and 6.1210
Units: 4-0-8
Lecture: TR11-12.30 (34-101) Recitation: F10 (36-155) or F3 (36-153) or F10 (36-156) or F11 (36-155, 36-156) or F12 (26-210, 36-156) or F1 (26-210, 36-156) or F2 (36-153) or F10 (36-112) or F1 (36-153) or F2 (36-112) +final

Techniques for the design and analysis of efficient algorithms, emphasizing methods useful in practice. Topics include sorting; search trees, heaps, and hashing; divide-and-conquer; dynamic programming; greedy algorithms; amortized analysis; graph algorithms; and shortest paths. Advanced topics may include network flow; computational geometry; number-theoretic algorithms; polynomial and matrix calculations; caching; and parallel computing.
S. RaghuramanTextbooks (Fall 2023)"
Algorithm implementation,Students will gain the ability to implement algorithms in a programming language and test their functionality.,"6.1220[J] Design and Analysis of Algorithms
",1,Fall 2023,Algorithm Development,"6.1220[J] Design and Analysis of Algorithms
", ,0,"(, )
(Same subject as 18.410[J])
Prereq: 6.1200 and 6.1210
Units: 4-0-8
Lecture: TR11-12.30 (34-101) Recitation: F10 (36-155) or F3 (36-153) or F10 (36-156) or F11 (36-155, 36-156) or F12 (26-210, 36-156) or F1 (26-210, 36-156) or F2 (36-153) or F10 (36-112) or F1 (36-153) or F2 (36-112) +final

Techniques for the design and analysis of efficient algorithms, emphasizing methods useful in practice. Topics include sorting; search trees, heaps, and hashing; divide-and-conquer; dynamic programming; greedy algorithms; amortized analysis; graph algorithms; and shortest paths. Advanced topics may include network flow; computational geometry; number-theoretic algorithms; polynomial and matrix calculations; caching; and parallel computing.
S. RaghuramanTextbooks (Fall 2023)"
Problem-solving,Students will develop the ability to apply problem-solving techniques to computational tasks and open problems in mathematics.,"6.1400[J] Computability and Complexity Theory
",1,Fall 2023,Problem-solving,"6.1400[J] Computability and Complexity Theory
", ,0,"()
(Same subject as 18.400[J])
Prereq: (6.1200 and 6.1210) or permission of instructor
Units: 4-0-8

Mathematical introduction to the theory of computing. Rigorously explores what kinds of tasks can be efficiently solved with computers by way of finite automata, circuits, Turing machines, and communication complexity, introducing students to some major open problems in mathematics. Builds skills in classifying computational tasks in terms of their difficulty. Discusses other fundamental issues in computing, including the Halting Problem, the Church-Turing Thesis, the P versus NP problem, and the power of randomness.  
Staff"
Critical thinking,Students will enhance their ability to think critically and evaluate different approaches and solutions in the field of computability and complexity theory.,"6.1400[J] Computability and Complexity Theory
",1,Fall 2023,Thinking Skills,"6.1400[J] Computability and Complexity Theory
", ,0,"()
(Same subject as 18.400[J])
Prereq: (6.1200 and 6.1210) or permission of instructor
Units: 4-0-8

Mathematical introduction to the theory of computing. Rigorously explores what kinds of tasks can be efficiently solved with computers by way of finite automata, circuits, Turing machines, and communication complexity, introducing students to some major open problems in mathematics. Builds skills in classifying computational tasks in terms of their difficulty. Discusses other fundamental issues in computing, including the Halting Problem, the Church-Turing Thesis, the P versus NP problem, and the power of randomness.  
Staff"
Communication,"Students will improve their ability to communicate complex ideas and concepts related to computability and complexity theory, both verbally and in writing.","6.1400[J] Computability and Complexity Theory
",1,Fall 2023,Communication,"6.1400[J] Computability and Complexity Theory
", ,0,"()
(Same subject as 18.400[J])
Prereq: (6.1200 and 6.1210) or permission of instructor
Units: 4-0-8

Mathematical introduction to the theory of computing. Rigorously explores what kinds of tasks can be efficiently solved with computers by way of finite automata, circuits, Turing machines, and communication complexity, introducing students to some major open problems in mathematics. Builds skills in classifying computational tasks in terms of their difficulty. Discusses other fundamental issues in computing, including the Halting Problem, the Church-Turing Thesis, the P versus NP problem, and the power of randomness.  
Staff"
Logical reasoning,Students will develop the ability to apply logical reasoning in analyzing and solving problems in the theory of computing.,"6.1400[J] Computability and Complexity Theory
",1,Fall 2023,Reasoning and Problem Solving,"6.1400[J] Computability and Complexity Theory
", ,0,"()
(Same subject as 18.400[J])
Prereq: (6.1200 and 6.1210) or permission of instructor
Units: 4-0-8

Mathematical introduction to the theory of computing. Rigorously explores what kinds of tasks can be efficiently solved with computers by way of finite automata, circuits, Turing machines, and communication complexity, introducing students to some major open problems in mathematics. Builds skills in classifying computational tasks in terms of their difficulty. Discusses other fundamental issues in computing, including the Halting Problem, the Church-Turing Thesis, the P versus NP problem, and the power of randomness.  
Staff"
Research skills,Students will develop research skills to explore and investigate major open problems in mathematics and their connections to computing.,"6.1400[J] Computability and Complexity Theory
",1,Fall 2023,Skills in Research and Technical Skills,"6.1400[J] Computability and Complexity Theory
", ,0,"()
(Same subject as 18.400[J])
Prereq: (6.1200 and 6.1210) or permission of instructor
Units: 4-0-8

Mathematical introduction to the theory of computing. Rigorously explores what kinds of tasks can be efficiently solved with computers by way of finite automata, circuits, Turing machines, and communication complexity, introducing students to some major open problems in mathematics. Builds skills in classifying computational tasks in terms of their difficulty. Discusses other fundamental issues in computing, including the Halting Problem, the Church-Turing Thesis, the P versus NP problem, and the power of randomness.  
Staff"
Analytical thinking,Students will develop the ability to analyze and evaluate the difficulty and feasibility of solving computational problems using parameterized algorithms and fine-grained complexity.,"6.1420 Fixed Parameter and Fine-grained Computation
",1,Fall 2023,Thinking Skills,"6.1420 Fixed Parameter and Fine-grained Computation
", ,0,"()
Prereq: 6.1200, 6.1210, and (6.1220, 6.1400, or 18.404)
Units: 3-0-9

An overview of the theory of parameterized algorithms and the ""problem-centric"" theory of fine-grained complexity, both of which reconsider how to measure the difficulty and feasibility of solving computational problems. Topics include: fixed-parameter tractability (FPT) and its characterizations, the W-hierarchy (W[1], W[2], W[P], etc.), 3-sum-hardness, all-pairs shortest paths (APSP)-equivalences, strong exponential time hypothesis (SETH) hardness of problems, and the connections to circuit complexity and other aspects of computing.
Staff"
Logical reasoning,Students will enhance their logical reasoning abilities as they understand and apply the theories and concepts related to parameterized algorithms and fine-grained complexity.,"6.1420 Fixed Parameter and Fine-grained Computation
",1,Fall 2023,Reasoning and Problem Solving,"6.1420 Fixed Parameter and Fine-grained Computation
", ,0,"()
Prereq: 6.1200, 6.1210, and (6.1220, 6.1400, or 18.404)
Units: 3-0-9

An overview of the theory of parameterized algorithms and the ""problem-centric"" theory of fine-grained complexity, both of which reconsider how to measure the difficulty and feasibility of solving computational problems. Topics include: fixed-parameter tractability (FPT) and its characterizations, the W-hierarchy (W[1], W[2], W[P], etc.), 3-sum-hardness, all-pairs shortest paths (APSP)-equivalences, strong exponential time hypothesis (SETH) hardness of problems, and the connections to circuit complexity and other aspects of computing.
Staff"
Communication,Students will improve their communication skills as they discuss and present their findings and solutions related to parameterized algorithms and fine-grained complexity.,"6.1420 Fixed Parameter and Fine-grained Computation
",1,Fall 2023,Communication,"6.1420 Fixed Parameter and Fine-grained Computation
", ,0,"()
Prereq: 6.1200, 6.1210, and (6.1220, 6.1400, or 18.404)
Units: 3-0-9

An overview of the theory of parameterized algorithms and the ""problem-centric"" theory of fine-grained complexity, both of which reconsider how to measure the difficulty and feasibility of solving computational problems. Topics include: fixed-parameter tractability (FPT) and its characterizations, the W-hierarchy (W[1], W[2], W[P], etc.), 3-sum-hardness, all-pairs shortest paths (APSP)-equivalences, strong exponential time hypothesis (SETH) hardness of problems, and the connections to circuit complexity and other aspects of computing.
Staff"
Research skills,Students will develop research skills as they explore and analyze existing literature and research papers on parameterized algorithms and fine-grained complexity.,"6.1420 Fixed Parameter and Fine-grained Computation
",1,Fall 2023,Skills in Research and Technical Skills,"6.1420 Fixed Parameter and Fine-grained Computation
", ,0,"()
Prereq: 6.1200, 6.1210, and (6.1220, 6.1400, or 18.404)
Units: 3-0-9

An overview of the theory of parameterized algorithms and the ""problem-centric"" theory of fine-grained complexity, both of which reconsider how to measure the difficulty and feasibility of solving computational problems. Topics include: fixed-parameter tractability (FPT) and its characterizations, the W-hierarchy (W[1], W[2], W[P], etc.), 3-sum-hardness, all-pairs shortest paths (APSP)-equivalences, strong exponential time hypothesis (SETH) hardness of problems, and the connections to circuit complexity and other aspects of computing.
Staff"
Collaboration,"Students will enhance their ability to collaborate with others, as they may need to work in teams to solve complex computational problems using parameterized algorithms and fine-grained complexity.","6.1420 Fixed Parameter and Fine-grained Computation
",1,Fall 2023,Collaboration and Teamwork,"6.1420 Fixed Parameter and Fine-grained Computation
", ,0,"()
Prereq: 6.1200, 6.1210, and (6.1220, 6.1400, or 18.404)
Units: 3-0-9

An overview of the theory of parameterized algorithms and the ""problem-centric"" theory of fine-grained complexity, both of which reconsider how to measure the difficulty and feasibility of solving computational problems. Topics include: fixed-parameter tractability (FPT) and its characterizations, the W-hierarchy (W[1], W[2], W[P], etc.), 3-sum-hardness, all-pairs shortest paths (APSP)-equivalences, strong exponential time hypothesis (SETH) hardness of problems, and the connections to circuit complexity and other aspects of computing.
Staff"
Problem-solving,Students will develop the ability to analyze complex problems and devise efficient algorithms to solve them.,"6.5210[J] Advanced Algorithms
",1,Fall 2023,Problem-solving,"6.5210[J] Advanced Algorithms
", ,0,"()
(Same subject as 18.415[J])
Prereq: 6.1220 and (6.1200, 6.3700, or 18.600)
Units: 5-0-7

First-year graduate subject in algorithms. Emphasizes fundamental algorithms and advanced methods of algorithmic design, analysis, and implementation. Surveys a variety of computational models and the algorithms for them. Data structures, network flows, linear programming, computational geometry, approximation algorithms, online algorithms, parallel algorithms, external memory, streaming algorithms.
Staff"
Analytical thinking,Students will enhance their ability to think critically and analyze the efficiency and correctness of algorithms.,"6.5210[J] Advanced Algorithms
",1,Fall 2023,Thinking Skills,"6.5210[J] Advanced Algorithms
", ,0,"()
(Same subject as 18.415[J])
Prereq: 6.1220 and (6.1200, 6.3700, or 18.600)
Units: 5-0-7

First-year graduate subject in algorithms. Emphasizes fundamental algorithms and advanced methods of algorithmic design, analysis, and implementation. Surveys a variety of computational models and the algorithms for them. Data structures, network flows, linear programming, computational geometry, approximation algorithms, online algorithms, parallel algorithms, external memory, streaming algorithms.
Staff"
Algorithm implementation,Students will develop the ability to implement algorithms using programming languages.,"6.5210[J] Advanced Algorithms
",1,Fall 2023,Algorithm Development,"6.5210[J] Advanced Algorithms
", ,0,"()
(Same subject as 18.415[J])
Prereq: 6.1220 and (6.1200, 6.3700, or 18.600)
Units: 5-0-7

First-year graduate subject in algorithms. Emphasizes fundamental algorithms and advanced methods of algorithmic design, analysis, and implementation. Surveys a variety of computational models and the algorithms for them. Data structures, network flows, linear programming, computational geometry, approximation algorithms, online algorithms, parallel algorithms, external memory, streaming algorithms.
Staff"
Algorithm optimization,Students will learn how to optimize algorithms to improve their efficiency and performance.,"6.5210[J] Advanced Algorithms
",1,Fall 2023,Optimization Techniques,"6.5210[J] Advanced Algorithms
", ,0,"()
(Same subject as 18.415[J])
Prereq: 6.1220 and (6.1200, 6.3700, or 18.600)
Units: 5-0-7

First-year graduate subject in algorithms. Emphasizes fundamental algorithms and advanced methods of algorithmic design, analysis, and implementation. Surveys a variety of computational models and the algorithms for them. Data structures, network flows, linear programming, computational geometry, approximation algorithms, online algorithms, parallel algorithms, external memory, streaming algorithms.
Staff"
Algorithmic reasoning,Students will enhance their ability to reason about the behavior and properties of algorithms.,"6.5210[J] Advanced Algorithms
",1,Fall 2023,Reasoning and Problem Solving,"6.5210[J] Advanced Algorithms
", ,0,"()
(Same subject as 18.415[J])
Prereq: 6.1220 and (6.1200, 6.3700, or 18.600)
Units: 5-0-7

First-year graduate subject in algorithms. Emphasizes fundamental algorithms and advanced methods of algorithmic design, analysis, and implementation. Surveys a variety of computational models and the algorithms for them. Data structures, network flows, linear programming, computational geometry, approximation algorithms, online algorithms, parallel algorithms, external memory, streaming algorithms.
Staff"
Problem-solving,Students will develop the ability to solve complex algorithmic problems using randomized techniques.,"6.5220[J] Randomized Algorithms
",1,Fall 2023,Problem-solving,"6.5220[J] Randomized Algorithms
", ,0,"()
(Same subject as 18.416[J])
Prereq: (6.1200 or 6.3700) and (6.1220 or 6.5210)
Units: 5-0-7

Studies how randomization can be used to make algorithms simpler and more efficient via random sampling, random selection of witnesses, symmetry breaking, and Markov chains. Models of randomized computation. Data structures: hash tables, and skip lists. Graph algorithms: minimum spanning trees, shortest paths, and minimum cuts. Geometric algorithms: convex hulls, linear programming in fixed or arbitrary dimension. Approximate counting; parallel algorithms; online algorithms; derandomization techniques; and tools for probabilistic analysis of algorithms.
Staff"
Analytical thinking,Students will enhance their ability to analyze and evaluate algorithms.,"6.5220[J] Randomized Algorithms
",1,Fall 2023,Thinking Skills,"6.5220[J] Randomized Algorithms
", ,0,"()
(Same subject as 18.416[J])
Prereq: (6.1200 or 6.3700) and (6.1220 or 6.5210)
Units: 5-0-7

Studies how randomization can be used to make algorithms simpler and more efficient via random sampling, random selection of witnesses, symmetry breaking, and Markov chains. Models of randomized computation. Data structures: hash tables, and skip lists. Graph algorithms: minimum spanning trees, shortest paths, and minimum cuts. Geometric algorithms: convex hulls, linear programming in fixed or arbitrary dimension. Approximate counting; parallel algorithms; online algorithms; derandomization techniques; and tools for probabilistic analysis of algorithms.
Staff"
Communication,Students will improve their ability to communicate algorithmic concepts and solutions verbally.,"6.5220[J] Randomized Algorithms
",1,Fall 2023,Communication,"6.5220[J] Randomized Algorithms
", ,0,"()
(Same subject as 18.416[J])
Prereq: (6.1200 or 6.3700) and (6.1220 or 6.5210)
Units: 5-0-7

Studies how randomization can be used to make algorithms simpler and more efficient via random sampling, random selection of witnesses, symmetry breaking, and Markov chains. Models of randomized computation. Data structures: hash tables, and skip lists. Graph algorithms: minimum spanning trees, shortest paths, and minimum cuts. Geometric algorithms: convex hulls, linear programming in fixed or arbitrary dimension. Approximate counting; parallel algorithms; online algorithms; derandomization techniques; and tools for probabilistic analysis of algorithms.
Staff"
Written communication,Students will enhance their ability to communicate algorithmic concepts and solutions in writing.,"6.5220[J] Randomized Algorithms
",1,Fall 2023,Communication Methods,"6.5220[J] Randomized Algorithms
", ,0,"()
(Same subject as 18.416[J])
Prereq: (6.1200 or 6.3700) and (6.1220 or 6.5210)
Units: 5-0-7

Studies how randomization can be used to make algorithms simpler and more efficient via random sampling, random selection of witnesses, symmetry breaking, and Markov chains. Models of randomized computation. Data structures: hash tables, and skip lists. Graph algorithms: minimum spanning trees, shortest paths, and minimum cuts. Geometric algorithms: convex hulls, linear programming in fixed or arbitrary dimension. Approximate counting; parallel algorithms; online algorithms; derandomization techniques; and tools for probabilistic analysis of algorithms.
Staff"
Time management,Students will develop the ability to manage their time effectively while working on algorithmic projects and assignments.,"6.5220[J] Randomized Algorithms
",1,Fall 2023,Time management,"6.5220[J] Randomized Algorithms
", ,0,"()
(Same subject as 18.416[J])
Prereq: (6.1200 or 6.3700) and (6.1220 or 6.5210)
Units: 5-0-7

Studies how randomization can be used to make algorithms simpler and more efficient via random sampling, random selection of witnesses, symmetry breaking, and Markov chains. Models of randomized computation. Data structures: hash tables, and skip lists. Graph algorithms: minimum spanning trees, shortest paths, and minimum cuts. Geometric algorithms: convex hulls, linear programming in fixed or arbitrary dimension. Approximate counting; parallel algorithms; online algorithms; derandomization techniques; and tools for probabilistic analysis of algorithms.
Staff"
Critical thinking,Students will develop the ability to think critically and analyze the performance and efficiency of different data structures.,"6.5230 Advanced Data Structures
",1,Fall 2023,Thinking Skills,"6.5230 Advanced Data Structures
", ,0,"()
Prereq: 6.1220
Units: 3-0-9

More advanced and powerful data structures for answering several queries on the same data. Such structures are crucial in particular for designing efficient algorithms. Dictionaries; hashing; search trees. Self-adjusting data structures; linear search; splay trees; dynamic optimality. Integer data structures; word RAM. Predecessor problem; van Emde Boas priority queues; y-fast trees; fusion trees. Lower bounds; cell-probe model; round elimination. Dynamic graphs; link-cut trees; dynamic connectivity. Strings; text indexing; suffix arrays; suffix trees. Static data structures; compact arrays; rank and select. Succinct data structures; tree encodings; implicit data structures. External-memory and cache-oblivious data structures; B-trees; buffer trees; tree layout; ordered-file maintenance. Temporal data structures; persistence; retroactivity.
Staff"
Communication,"Students will enhance their communication skills through discussions, presentations, and written assignments.","6.5230 Advanced Data Structures
",1,Fall 2023,Communication,"6.5230 Advanced Data Structures
", ,0,"()
Prereq: 6.1220
Units: 3-0-9

More advanced and powerful data structures for answering several queries on the same data. Such structures are crucial in particular for designing efficient algorithms. Dictionaries; hashing; search trees. Self-adjusting data structures; linear search; splay trees; dynamic optimality. Integer data structures; word RAM. Predecessor problem; van Emde Boas priority queues; y-fast trees; fusion trees. Lower bounds; cell-probe model; round elimination. Dynamic graphs; link-cut trees; dynamic connectivity. Strings; text indexing; suffix arrays; suffix trees. Static data structures; compact arrays; rank and select. Succinct data structures; tree encodings; implicit data structures. External-memory and cache-oblivious data structures; B-trees; buffer trees; tree layout; ordered-file maintenance. Temporal data structures; persistence; retroactivity.
Staff"
Collaboration,Students will develop the ability to work effectively in teams while designing and implementing data structures.,"6.5230 Advanced Data Structures
",1,Fall 2023,Collaboration and Teamwork,"6.5230 Advanced Data Structures
", ,0,"()
Prereq: 6.1220
Units: 3-0-9

More advanced and powerful data structures for answering several queries on the same data. Such structures are crucial in particular for designing efficient algorithms. Dictionaries; hashing; search trees. Self-adjusting data structures; linear search; splay trees; dynamic optimality. Integer data structures; word RAM. Predecessor problem; van Emde Boas priority queues; y-fast trees; fusion trees. Lower bounds; cell-probe model; round elimination. Dynamic graphs; link-cut trees; dynamic connectivity. Strings; text indexing; suffix arrays; suffix trees. Static data structures; compact arrays; rank and select. Succinct data structures; tree encodings; implicit data structures. External-memory and cache-oblivious data structures; B-trees; buffer trees; tree layout; ordered-file maintenance. Temporal data structures; persistence; retroactivity.
Staff"
Time management,Students will learn to manage their time effectively to meet project deadlines and complete assignments.,"6.5230 Advanced Data Structures
",1,Fall 2023,Time management,"6.5230 Advanced Data Structures
", ,0,"()
Prereq: 6.1220
Units: 3-0-9

More advanced and powerful data structures for answering several queries on the same data. Such structures are crucial in particular for designing efficient algorithms. Dictionaries; hashing; search trees. Self-adjusting data structures; linear search; splay trees; dynamic optimality. Integer data structures; word RAM. Predecessor problem; van Emde Boas priority queues; y-fast trees; fusion trees. Lower bounds; cell-probe model; round elimination. Dynamic graphs; link-cut trees; dynamic connectivity. Strings; text indexing; suffix arrays; suffix trees. Static data structures; compact arrays; rank and select. Succinct data structures; tree encodings; implicit data structures. External-memory and cache-oblivious data structures; B-trees; buffer trees; tree layout; ordered-file maintenance. Temporal data structures; persistence; retroactivity.
Staff"
Adaptability,Students will develop the ability to adapt and apply different data structures based on the requirements of specific problems.,"6.5230 Advanced Data Structures
",1,Fall 2023,Adaptability,"6.5230 Advanced Data Structures
", ,0,"()
Prereq: 6.1220
Units: 3-0-9

More advanced and powerful data structures for answering several queries on the same data. Such structures are crucial in particular for designing efficient algorithms. Dictionaries; hashing; search trees. Self-adjusting data structures; linear search; splay trees; dynamic optimality. Integer data structures; word RAM. Predecessor problem; van Emde Boas priority queues; y-fast trees; fusion trees. Lower bounds; cell-probe model; round elimination. Dynamic graphs; link-cut trees; dynamic connectivity. Strings; text indexing; suffix arrays; suffix trees. Static data structures; compact arrays; rank and select. Succinct data structures; tree encodings; implicit data structures. External-memory and cache-oblivious data structures; B-trees; buffer trees; tree layout; ordered-file maintenance. Temporal data structures; persistence; retroactivity.
Staff"
Analytical thinking,Students will develop the ability to think analytically and critically analyze sublinear time algorithms.,"6.5240 Sublinear Time Algorithms
",1,Fall 2023,Thinking Skills,"6.5240 Sublinear Time Algorithms
", ,0,"()
Prereq: 6.1220 or permission of instructor
Units: 3-0-9

Sublinear time algorithms understand parameters and properties of input data after viewing only a minuscule fraction of it. Tools from number theory, combinatorics, linear algebra, optimization theory, distributed algorithms, statistics, and probability are covered. Topics include: testing and estimating properties of distributions, functions, graphs, strings, point sets, and various combinatorial objects.
Staff"
Problem-solving,Students will enhance their problem-solving abilities as they work on sublinear time algorithm projects.,"6.5240 Sublinear Time Algorithms
",1,Fall 2023,Problem-solving,"6.5240 Sublinear Time Algorithms
", ,0,"()
Prereq: 6.1220 or permission of instructor
Units: 3-0-9

Sublinear time algorithms understand parameters and properties of input data after viewing only a minuscule fraction of it. Tools from number theory, combinatorics, linear algebra, optimization theory, distributed algorithms, statistics, and probability are covered. Topics include: testing and estimating properties of distributions, functions, graphs, strings, point sets, and various combinatorial objects.
Staff"
Communication,Students will improve their communication skills through discussions and presentations of sublinear time algorithms.,"6.5240 Sublinear Time Algorithms
",1,Fall 2023,Communication,"6.5240 Sublinear Time Algorithms
", ,0,"()
Prereq: 6.1220 or permission of instructor
Units: 3-0-9

Sublinear time algorithms understand parameters and properties of input data after viewing only a minuscule fraction of it. Tools from number theory, combinatorics, linear algebra, optimization theory, distributed algorithms, statistics, and probability are covered. Topics include: testing and estimating properties of distributions, functions, graphs, strings, point sets, and various combinatorial objects.
Staff"
Collaboration,Students will develop the ability to collaborate effectively with peers on sublinear time algorithm projects.,"6.5240 Sublinear Time Algorithms
",1,Fall 2023,Collaboration and Teamwork,"6.5240 Sublinear Time Algorithms
", ,0,"()
Prereq: 6.1220 or permission of instructor
Units: 3-0-9

Sublinear time algorithms understand parameters and properties of input data after viewing only a minuscule fraction of it. Tools from number theory, combinatorics, linear algebra, optimization theory, distributed algorithms, statistics, and probability are covered. Topics include: testing and estimating properties of distributions, functions, graphs, strings, point sets, and various combinatorial objects.
Staff"
Research skills,Students will enhance their research skills in order to explore and understand advanced concepts in sublinear time algorithms.,"6.5240 Sublinear Time Algorithms
",1,Fall 2023,Skills in Research and Technical Skills,"6.5240 Sublinear Time Algorithms
", ,0,"()
Prereq: 6.1220 or permission of instructor
Units: 3-0-9

Sublinear time algorithms understand parameters and properties of input data after viewing only a minuscule fraction of it. Tools from number theory, combinatorics, linear algebra, optimization theory, distributed algorithms, statistics, and probability are covered. Topics include: testing and estimating properties of distributions, functions, graphs, strings, point sets, and various combinatorial objects.
Staff"
Problem-solving,Students will develop the ability to solve complex problems related to distributed algorithms and systems.,"6.5250[J] Distributed Algorithms
",1,Fall 2023,Problem-solving,"6.5250[J] Distributed Algorithms
", ,0,"()
(Same subject as 18.437[J])
Prereq: 6.1220
Units: 3-0-9

Design and analysis of concurrent algorithms, emphasizing those suitable for use in distributed networks. Process synchronization, allocation of computational resources, distributed consensus, distributed graph algorithms, election of a leader in a network, distributed termination, deadlock detection, concurrency control, communication, and clock synchronization. Special consideration given to issues of efficiency and fault tolerance. Formal models and proof methods for distributed computation.
M. Ghaffari, N. A. Lynch"
Analytical thinking,Students will enhance their ability to analyze and evaluate the efficiency and effectiveness of distributed algorithms.,"6.5250[J] Distributed Algorithms
",1,Fall 2023,Thinking Skills,"6.5250[J] Distributed Algorithms
", ,0,"()
(Same subject as 18.437[J])
Prereq: 6.1220
Units: 3-0-9

Design and analysis of concurrent algorithms, emphasizing those suitable for use in distributed networks. Process synchronization, allocation of computational resources, distributed consensus, distributed graph algorithms, election of a leader in a network, distributed termination, deadlock detection, concurrency control, communication, and clock synchronization. Special consideration given to issues of efficiency and fault tolerance. Formal models and proof methods for distributed computation.
M. Ghaffari, N. A. Lynch"
Communication,Students will improve their ability to effectively communicate and present their ideas and findings related to distributed algorithms.,"6.5250[J] Distributed Algorithms
",1,Fall 2023,Communication,"6.5250[J] Distributed Algorithms
", ,0,"()
(Same subject as 18.437[J])
Prereq: 6.1220
Units: 3-0-9

Design and analysis of concurrent algorithms, emphasizing those suitable for use in distributed networks. Process synchronization, allocation of computational resources, distributed consensus, distributed graph algorithms, election of a leader in a network, distributed termination, deadlock detection, concurrency control, communication, and clock synchronization. Special consideration given to issues of efficiency and fault tolerance. Formal models and proof methods for distributed computation.
M. Ghaffari, N. A. Lynch"
Teamwork,Students will develop the ability to work collaboratively in designing and implementing distributed algorithms.,"6.5250[J] Distributed Algorithms
",1,Fall 2023,Collaboration and Teamwork,"6.5250[J] Distributed Algorithms
", ,0,"()
(Same subject as 18.437[J])
Prereq: 6.1220
Units: 3-0-9

Design and analysis of concurrent algorithms, emphasizing those suitable for use in distributed networks. Process synchronization, allocation of computational resources, distributed consensus, distributed graph algorithms, election of a leader in a network, distributed termination, deadlock detection, concurrency control, communication, and clock synchronization. Special consideration given to issues of efficiency and fault tolerance. Formal models and proof methods for distributed computation.
M. Ghaffari, N. A. Lynch"
Critical thinking,Students will enhance their ability to critically evaluate and assess the performance and correctness of distributed algorithms.,"6.5250[J] Distributed Algorithms
",1,Fall 2023,Thinking Skills,"6.5250[J] Distributed Algorithms
", ,0,"()
(Same subject as 18.437[J])
Prereq: 6.1220
Units: 3-0-9

Design and analysis of concurrent algorithms, emphasizing those suitable for use in distributed networks. Process synchronization, allocation of computational resources, distributed consensus, distributed graph algorithms, election of a leader in a network, distributed termination, deadlock detection, concurrency control, communication, and clock synchronization. Special consideration given to issues of efficiency and fault tolerance. Formal models and proof methods for distributed computation.
M. Ghaffari, N. A. Lynch"
Problem-solving,"The course description mentions characterizing rigidity, unfoldable versus locked structures, and protein folding, indicating that students will develop problem-solving abilities to analyze and solve complex problems related to foldable structures.","6.5310 Geometric Folding Algorithms: Linkages, Origami, Polyhedra
",1,Fall 2023,Problem-solving,"6.5310 Geometric Folding Algorithms: Linkages, Origami, Polyhedra
", ,0,"()
Prereq: 6.1220 or permission of instructor
Units: 3-0-9
 Subject Cancelled 

Covers discrete geometry and algorithms underlying the reconfiguration of foldable structures, with applications to robotics, manufacturing, and biology. Linkages made from one-dimensional rods connected by hinges: constructing polynomial curves, characterizing rigidity, characterizing unfoldable versus locked, protein folding. Folding two-dimensional paper (origami): characterizing flat foldability, algorithmic origami design, one-cut magic trick. Unfolding and folding three-dimensional polyhedra: edge unfolding, vertex unfolding, gluings, Alexandrov's Theorem, hinged dissections.
E. D. Demaine"
Communication,"Although not explicitly mentioned, the course may involve collaborative projects or presentations, requiring students to effectively communicate their ideas and findings to others.","6.5310 Geometric Folding Algorithms: Linkages, Origami, Polyhedra
",1,Fall 2023,Communication,"6.5310 Geometric Folding Algorithms: Linkages, Origami, Polyhedra
", ,0,"()
Prereq: 6.1220 or permission of instructor
Units: 3-0-9
 Subject Cancelled 

Covers discrete geometry and algorithms underlying the reconfiguration of foldable structures, with applications to robotics, manufacturing, and biology. Linkages made from one-dimensional rods connected by hinges: constructing polynomial curves, characterizing rigidity, characterizing unfoldable versus locked, protein folding. Folding two-dimensional paper (origami): characterizing flat foldability, algorithmic origami design, one-cut magic trick. Unfolding and folding three-dimensional polyhedra: edge unfolding, vertex unfolding, gluings, Alexandrov's Theorem, hinged dissections.
E. D. Demaine"
Problem-solving,Students will develop the ability to analyze and solve complex geometric problems using algorithms and data structures.,"6.5320 Geometric Computing
",1,Fall 2023,Problem-solving,"6.5320 Geometric Computing
", ,0,"()
Prereq: 6.1220
Units: 3-0-9

Introduction to the design and analysis of algorithms for geometric problems, in low- and high-dimensional spaces. Algorithms: convex hulls, polygon triangulation, Delaunay triangulation, motion planning, pattern matching. Geometric data structures: point location, Voronoi diagrams, Binary Space Partitions. Geometric problems in higher dimensions: linear programming, closest pair problems. High-dimensional nearest neighbor search and low-distortion embeddings between metric spaces. Geometric algorithms for massive data sets: external memory and streaming algorithms. Geometric optimization.
Staff"
Communication,Students will enhance their ability to effectively communicate their ideas and solutions related to geometric computing.,"6.5320 Geometric Computing
",1,Fall 2023,Communication,"6.5320 Geometric Computing
", ,0,"()
Prereq: 6.1220
Units: 3-0-9

Introduction to the design and analysis of algorithms for geometric problems, in low- and high-dimensional spaces. Algorithms: convex hulls, polygon triangulation, Delaunay triangulation, motion planning, pattern matching. Geometric data structures: point location, Voronoi diagrams, Binary Space Partitions. Geometric problems in higher dimensions: linear programming, closest pair problems. High-dimensional nearest neighbor search and low-distortion embeddings between metric spaces. Geometric algorithms for massive data sets: external memory and streaming algorithms. Geometric optimization.
Staff"
Analytical thinking,Students will develop the ability to think analytically and critically evaluate different approaches to solving geometric problems.,"6.5320 Geometric Computing
",1,Fall 2023,Thinking Skills,"6.5320 Geometric Computing
", ,0,"()
Prereq: 6.1220
Units: 3-0-9

Introduction to the design and analysis of algorithms for geometric problems, in low- and high-dimensional spaces. Algorithms: convex hulls, polygon triangulation, Delaunay triangulation, motion planning, pattern matching. Geometric data structures: point location, Voronoi diagrams, Binary Space Partitions. Geometric problems in higher dimensions: linear programming, closest pair problems. High-dimensional nearest neighbor search and low-distortion embeddings between metric spaces. Geometric algorithms for massive data sets: external memory and streaming algorithms. Geometric optimization.
Staff"
Algorithm implementation,Students will gain the ability to implement geometric algorithms and data structures in programming languages.,"6.5320 Geometric Computing
",1,Fall 2023,Algorithm Development,"6.5320 Geometric Computing
", ,0,"()
Prereq: 6.1220
Units: 3-0-9

Introduction to the design and analysis of algorithms for geometric problems, in low- and high-dimensional spaces. Algorithms: convex hulls, polygon triangulation, Delaunay triangulation, motion planning, pattern matching. Geometric data structures: point location, Voronoi diagrams, Binary Space Partitions. Geometric problems in higher dimensions: linear programming, closest pair problems. High-dimensional nearest neighbor search and low-distortion embeddings between metric spaces. Geometric algorithms for massive data sets: external memory and streaming algorithms. Geometric optimization.
Staff"
Optimization,Students will develop the ability to optimize geometric solutions and algorithms for efficiency and performance.,"6.5320 Geometric Computing
",1,Fall 2023,,"6.5320 Geometric Computing
", ,0,"()
Prereq: 6.1220
Units: 3-0-9

Introduction to the design and analysis of algorithms for geometric problems, in low- and high-dimensional spaces. Algorithms: convex hulls, polygon triangulation, Delaunay triangulation, motion planning, pattern matching. Geometric data structures: point location, Voronoi diagrams, Binary Space Partitions. Geometric problems in higher dimensions: linear programming, closest pair problems. High-dimensional nearest neighbor search and low-distortion embeddings between metric spaces. Geometric algorithms for massive data sets: external memory and streaming algorithms. Geometric optimization.
Staff"
Problem-solving,Students will develop the ability to solve complex problems related to algorithmic game theory.,"6.5340 Topics in Algorithmic Game Theory
",1,Fall 2023,Problem-solving,"6.5340 Topics in Algorithmic Game Theory
", ,0,"()
Prereq: 6.1210 or 6.1220
Units: 3-0-9

Presents research topics at the interface of computer science and game theory, with an emphasis on algorithms and computational complexity. Explores the types of game-theoretic tools that are applicable to computer systems, the loss in system performance due to the conflicts of interest of users and administrators, and the design of systems whose performance is robust with respect to conflicts of interest inside the system. Algorithmic focus is on algorithms for equilibria, the complexity of equilibria and fixed points, algorithmic tools in mechanism design, learning in games, and the price of anarchy.
Staff"
Analytical thinking,Students will enhance their ability to analyze and evaluate game-theoretic systems and algorithms.,"6.5340 Topics in Algorithmic Game Theory
",1,Fall 2023,Thinking Skills,"6.5340 Topics in Algorithmic Game Theory
", ,0,"()
Prereq: 6.1210 or 6.1220
Units: 3-0-9

Presents research topics at the interface of computer science and game theory, with an emphasis on algorithms and computational complexity. Explores the types of game-theoretic tools that are applicable to computer systems, the loss in system performance due to the conflicts of interest of users and administrators, and the design of systems whose performance is robust with respect to conflicts of interest inside the system. Algorithmic focus is on algorithms for equilibria, the complexity of equilibria and fixed points, algorithmic tools in mechanism design, learning in games, and the price of anarchy.
Staff"
Critical reasoning,Students will develop the ability to critically reason about conflicts of interest and their implications in system design.,"6.5340 Topics in Algorithmic Game Theory
",1,Fall 2023,Reasoning and Problem Solving,"6.5340 Topics in Algorithmic Game Theory
", ,0,"()
Prereq: 6.1210 or 6.1220
Units: 3-0-9

Presents research topics at the interface of computer science and game theory, with an emphasis on algorithms and computational complexity. Explores the types of game-theoretic tools that are applicable to computer systems, the loss in system performance due to the conflicts of interest of users and administrators, and the design of systems whose performance is robust with respect to conflicts of interest inside the system. Algorithmic focus is on algorithms for equilibria, the complexity of equilibria and fixed points, algorithmic tools in mechanism design, learning in games, and the price of anarchy.
Staff"
Communication,Students will enhance their ability to effectively communicate complex concepts and ideas related to algorithmic game theory.,"6.5340 Topics in Algorithmic Game Theory
",1,Fall 2023,Communication,"6.5340 Topics in Algorithmic Game Theory
", ,0,"()
Prereq: 6.1210 or 6.1220
Units: 3-0-9

Presents research topics at the interface of computer science and game theory, with an emphasis on algorithms and computational complexity. Explores the types of game-theoretic tools that are applicable to computer systems, the loss in system performance due to the conflicts of interest of users and administrators, and the design of systems whose performance is robust with respect to conflicts of interest inside the system. Algorithmic focus is on algorithms for equilibria, the complexity of equilibria and fixed points, algorithmic tools in mechanism design, learning in games, and the price of anarchy.
Staff"
Collaboration,Students will develop the ability to work collaboratively in teams to solve algorithmic game theory problems.,"6.5340 Topics in Algorithmic Game Theory
",1,Fall 2023,Collaboration and Teamwork,"6.5340 Topics in Algorithmic Game Theory
", ,0,"()
Prereq: 6.1210 or 6.1220
Units: 3-0-9

Presents research topics at the interface of computer science and game theory, with an emphasis on algorithms and computational complexity. Explores the types of game-theoretic tools that are applicable to computer systems, the loss in system performance due to the conflicts of interest of users and administrators, and the design of systems whose performance is robust with respect to conflicts of interest inside the system. Algorithmic focus is on algorithms for equilibria, the complexity of equilibria and fixed points, algorithmic tools in mechanism design, learning in games, and the price of anarchy.
Staff"
Analytical thinking,"Students will develop the ability to analyze complex problems and break them down into smaller components, enabling them to design and implement efficient graph algorithms.","6.5350 Matrix Multiplication and Graph Algorithms
",1,Fall 2023,Thinking Skills,"6.5350 Matrix Multiplication and Graph Algorithms
", ,0,"()
Prereq: 6.1220
Units: 3-0-9
 Subject Cancelled 

Explores topics around matrix multiplication (MM) and its use in the design of graph algorithms. Focuses on problems such as transitive closure, shortest paths, graph matching, and other classical graph problems. Explores fast approximation algorithms when MM techniques are too expensive.
Staff"
Critical thinking,"Through studying and solving graph algorithm problems, students will enhance their critical thinking skills, including evaluating different approaches, identifying potential issues, and making informed decisions.","6.5350 Matrix Multiplication and Graph Algorithms
",1,Fall 2023,Thinking Skills,"6.5350 Matrix Multiplication and Graph Algorithms
", ,0,"()
Prereq: 6.1220
Units: 3-0-9
 Subject Cancelled 

Explores topics around matrix multiplication (MM) and its use in the design of graph algorithms. Focuses on problems such as transitive closure, shortest paths, graph matching, and other classical graph problems. Explores fast approximation algorithms when MM techniques are too expensive.
Staff"
Logical reasoning,"Students will improve their logical reasoning abilities, as they need to understand and apply logical principles and rules in designing and analyzing graph algorithms.","6.5350 Matrix Multiplication and Graph Algorithms
",1,Fall 2023,Reasoning and Problem Solving,"6.5350 Matrix Multiplication and Graph Algorithms
", ,0,"()
Prereq: 6.1220
Units: 3-0-9
 Subject Cancelled 

Explores topics around matrix multiplication (MM) and its use in the design of graph algorithms. Focuses on problems such as transitive closure, shortest paths, graph matching, and other classical graph problems. Explores fast approximation algorithms when MM techniques are too expensive.
Staff"
Algorithmic reasoning,"Students will develop the ability to reason about algorithms, including understanding their correctness, efficiency, and potential optimizations, allowing them to make informed choices in algorithm design.","6.5350 Matrix Multiplication and Graph Algorithms
",1,Fall 2023,Reasoning and Problem Solving,"6.5350 Matrix Multiplication and Graph Algorithms
", ,0,"()
Prereq: 6.1220
Units: 3-0-9
 Subject Cancelled 

Explores topics around matrix multiplication (MM) and its use in the design of graph algorithms. Focuses on problems such as transitive closure, shortest paths, graph matching, and other classical graph problems. Explores fast approximation algorithms when MM techniques are too expensive.
Staff"
Written communication,"Students will enhance their written communication skills through documenting their algorithm designs, explaining their thought processes, and presenting their findings in a clear and concise manner.","6.5350 Matrix Multiplication and Graph Algorithms
",1,Fall 2023,Communication Methods,"6.5350 Matrix Multiplication and Graph Algorithms
", ,0,"()
Prereq: 6.1220
Units: 3-0-9
 Subject Cancelled 

Explores topics around matrix multiplication (MM) and its use in the design of graph algorithms. Focuses on problems such as transitive closure, shortest paths, graph matching, and other classical graph problems. Explores fast approximation algorithms when MM techniques are too expensive.
Staff"
Problem-solving,Students will develop the ability to analyze complex computational problems and devise effective solutions.,"6.5400[J] Theory of Computation
",1,Fall 2023,Problem-solving,"6.5400[J] Theory of Computation
", ,0,"()
(Same subject as 18.4041[J])(Subject meets with 18.404)
Prereq: 6.1200 or 18.200
Units: 4-0-8
Lecture: TR2.30-4 (34-101) Recitation: F10 (4-261) or F11 (4-261) or F12 (4-257) or F1 (4-257) or F2 (4-145) or F3 (4-145) +final

A more extensive and theoretical treatment of the material in 6.1400J/18.400J, emphasizing computability and computational complexity theory. Regular and context-free languages. Decidable and undecidable problems, reducibility, recursive function theory. Time and space measures on computation, completeness, hierarchy theorems, inherently complex problems, oracles, probabilistic computation, and interactive proof systems. Students in Course 18 must register for the undergraduate version, 18.404.
M. SipserTextbooks (Fall 2023)"
Analytical thinking,Students will enhance their ability to think critically and analyze the theoretical aspects of computation.,"6.5400[J] Theory of Computation
",1,Fall 2023,Thinking Skills,"6.5400[J] Theory of Computation
", ,0,"()
(Same subject as 18.4041[J])(Subject meets with 18.404)
Prereq: 6.1200 or 18.200
Units: 4-0-8
Lecture: TR2.30-4 (34-101) Recitation: F10 (4-261) or F11 (4-261) or F12 (4-257) or F1 (4-257) or F2 (4-145) or F3 (4-145) +final

A more extensive and theoretical treatment of the material in 6.1400J/18.400J, emphasizing computability and computational complexity theory. Regular and context-free languages. Decidable and undecidable problems, reducibility, recursive function theory. Time and space measures on computation, completeness, hierarchy theorems, inherently complex problems, oracles, probabilistic computation, and interactive proof systems. Students in Course 18 must register for the undergraduate version, 18.404.
M. SipserTextbooks (Fall 2023)"
Logical reasoning,Students will strengthen their ability to reason logically and apply logical principles in the context of computational theory.,"6.5400[J] Theory of Computation
",1,Fall 2023,Reasoning and Problem Solving,"6.5400[J] Theory of Computation
", ,0,"()
(Same subject as 18.4041[J])(Subject meets with 18.404)
Prereq: 6.1200 or 18.200
Units: 4-0-8
Lecture: TR2.30-4 (34-101) Recitation: F10 (4-261) or F11 (4-261) or F12 (4-257) or F1 (4-257) or F2 (4-145) or F3 (4-145) +final

A more extensive and theoretical treatment of the material in 6.1400J/18.400J, emphasizing computability and computational complexity theory. Regular and context-free languages. Decidable and undecidable problems, reducibility, recursive function theory. Time and space measures on computation, completeness, hierarchy theorems, inherently complex problems, oracles, probabilistic computation, and interactive proof systems. Students in Course 18 must register for the undergraduate version, 18.404.
M. SipserTextbooks (Fall 2023)"
Abstract thinking,Students will develop the ability to think abstractly and understand complex theoretical concepts in computation.,"6.5400[J] Theory of Computation
",1,Fall 2023,Abstract thinking,"6.5400[J] Theory of Computation
", ,0,"()
(Same subject as 18.4041[J])(Subject meets with 18.404)
Prereq: 6.1200 or 18.200
Units: 4-0-8
Lecture: TR2.30-4 (34-101) Recitation: F10 (4-261) or F11 (4-261) or F12 (4-257) or F1 (4-257) or F2 (4-145) or F3 (4-145) +final

A more extensive and theoretical treatment of the material in 6.1400J/18.400J, emphasizing computability and computational complexity theory. Regular and context-free languages. Decidable and undecidable problems, reducibility, recursive function theory. Time and space measures on computation, completeness, hierarchy theorems, inherently complex problems, oracles, probabilistic computation, and interactive proof systems. Students in Course 18 must register for the undergraduate version, 18.404.
M. SipserTextbooks (Fall 2023)"
Written communication,Students will enhance their ability to communicate their ideas and findings effectively through written reports and assignments.,"6.5400[J] Theory of Computation
",1,Fall 2023,Communication Methods,"6.5400[J] Theory of Computation
", ,0,"()
(Same subject as 18.4041[J])(Subject meets with 18.404)
Prereq: 6.1200 or 18.200
Units: 4-0-8
Lecture: TR2.30-4 (34-101) Recitation: F10 (4-261) or F11 (4-261) or F12 (4-257) or F1 (4-257) or F2 (4-145) or F3 (4-145) +final

A more extensive and theoretical treatment of the material in 6.1400J/18.400J, emphasizing computability and computational complexity theory. Regular and context-free languages. Decidable and undecidable problems, reducibility, recursive function theory. Time and space measures on computation, completeness, hierarchy theorems, inherently complex problems, oracles, probabilistic computation, and interactive proof systems. Students in Course 18 must register for the undergraduate version, 18.404.
M. SipserTextbooks (Fall 2023)"
Analytical thinking,Students will develop the ability to analyze and evaluate complex computational complexity problems and theories.,"6.5410[J] Advanced Complexity Theory
",1,Fall 2023,Thinking Skills,"6.5410[J] Advanced Complexity Theory
", ,0,"()
(Same subject as 18.405[J])
Prereq: 18.404
Units: 3-0-9

Current research topics in computational complexity theory. Nondeterministic, alternating, probabilistic, and parallel computation models. Boolean circuits. Complexity classes and complete sets. The polynomial-time hierarchy. Interactive proof systems. Relativization. Definitions of randomness. Pseudo-randomness and derandomizations. Interactive proof systems and probabilistically checkable proofs.
R. Williams"
Research skills,Students will enhance their research skills as they explore current research topics in computational complexity theory.,"6.5410[J] Advanced Complexity Theory
",1,Fall 2023,Skills in Research and Technical Skills,"6.5410[J] Advanced Complexity Theory
", ,0,"()
(Same subject as 18.405[J])
Prereq: 18.404
Units: 3-0-9

Current research topics in computational complexity theory. Nondeterministic, alternating, probabilistic, and parallel computation models. Boolean circuits. Complexity classes and complete sets. The polynomial-time hierarchy. Interactive proof systems. Relativization. Definitions of randomness. Pseudo-randomness and derandomizations. Interactive proof systems and probabilistically checkable proofs.
R. Williams"
Written communication,Students will improve their ability to communicate complex ideas and concepts in written form.,"6.5410[J] Advanced Complexity Theory
",1,Fall 2023,Communication Methods,"6.5410[J] Advanced Complexity Theory
", ,0,"()
(Same subject as 18.405[J])
Prereq: 18.404
Units: 3-0-9

Current research topics in computational complexity theory. Nondeterministic, alternating, probabilistic, and parallel computation models. Boolean circuits. Complexity classes and complete sets. The polynomial-time hierarchy. Interactive proof systems. Relativization. Definitions of randomness. Pseudo-randomness and derandomizations. Interactive proof systems and probabilistically checkable proofs.
R. Williams"
Presentation skills,Students will develop the ability to effectively present and communicate complex computational complexity theories and findings.,"6.5410[J] Advanced Complexity Theory
",1,Fall 2023,Presentation skills,"6.5410[J] Advanced Complexity Theory
", ,0,"()
(Same subject as 18.405[J])
Prereq: 18.404
Units: 3-0-9

Current research topics in computational complexity theory. Nondeterministic, alternating, probabilistic, and parallel computation models. Boolean circuits. Complexity classes and complete sets. The polynomial-time hierarchy. Interactive proof systems. Relativization. Definitions of randomness. Pseudo-randomness and derandomizations. Interactive proof systems and probabilistically checkable proofs.
R. Williams"
Independent learning,Students will cultivate the ability to independently learn and explore new computational complexity theories and concepts.,"6.5410[J] Advanced Complexity Theory
",1,Fall 2023,Independent learning,"6.5410[J] Advanced Complexity Theory
", ,0,"()
(Same subject as 18.405[J])
Prereq: 18.404
Units: 3-0-9

Current research topics in computational complexity theory. Nondeterministic, alternating, probabilistic, and parallel computation models. Boolean circuits. Complexity classes and complete sets. The polynomial-time hierarchy. Interactive proof systems. Relativization. Definitions of randomness. Pseudo-randomness and derandomizations. Interactive proof systems and probabilistically checkable proofs.
R. Williams"
Analytical thinking,Students will develop the ability to analyze and evaluate complex problems and algorithms related to randomness and computation.,"6.5420 Randomness and Computation
",1,Fall 2023,Thinking Skills,"6.5420 Randomness and Computation
", ,0,"()
Prereq: 6.1220 and 18.4041
Units: 3-0-9

The power and sources of randomness in computation. Connections and applications to computational complexity, computational learning theory, cryptography and combinatorics. Topics include: probabilistic proofs, uniform generation and approximate counting, Fourier analysis of Boolean functions, computational learning theory, expander graphs, pseudorandom generators, derandomization.
R. Rubinfeld"
Problem-solving,Students will enhance their problem-solving abilities as they tackle computational problems that involve randomness.,"6.5420 Randomness and Computation
",1,Fall 2023,Problem-solving,"6.5420 Randomness and Computation
", ,0,"()
Prereq: 6.1220 and 18.4041
Units: 3-0-9

The power and sources of randomness in computation. Connections and applications to computational complexity, computational learning theory, cryptography and combinatorics. Topics include: probabilistic proofs, uniform generation and approximate counting, Fourier analysis of Boolean functions, computational learning theory, expander graphs, pseudorandom generators, derandomization.
R. Rubinfeld"
Critical thinking,Students will develop critical thinking skills in understanding and evaluating the concepts and theories related to randomness and computation.,"6.5420 Randomness and Computation
",1,Fall 2023,Thinking Skills,"6.5420 Randomness and Computation
", ,0,"()
Prereq: 6.1220 and 18.4041
Units: 3-0-9

The power and sources of randomness in computation. Connections and applications to computational complexity, computational learning theory, cryptography and combinatorics. Topics include: probabilistic proofs, uniform generation and approximate counting, Fourier analysis of Boolean functions, computational learning theory, expander graphs, pseudorandom generators, derandomization.
R. Rubinfeld"
Mathematical reasoning,Students will strengthen their ability to apply mathematical reasoning and techniques in analyzing and solving problems in randomness and computation.,"6.5420 Randomness and Computation
",1,Fall 2023,Reasoning and Problem Solving,"6.5420 Randomness and Computation
", ,0,"()
Prereq: 6.1220 and 18.4041
Units: 3-0-9

The power and sources of randomness in computation. Connections and applications to computational complexity, computational learning theory, cryptography and combinatorics. Topics include: probabilistic proofs, uniform generation and approximate counting, Fourier analysis of Boolean functions, computational learning theory, expander graphs, pseudorandom generators, derandomization.
R. Rubinfeld"
Communication,"Students will enhance their communication skills, both verbally and in writing, as they present and discuss their findings and ideas related to randomness and computation.","6.5420 Randomness and Computation
",1,Fall 2023,Communication,"6.5420 Randomness and Computation
", ,0,"()
Prereq: 6.1220 and 18.4041
Units: 3-0-9

The power and sources of randomness in computation. Connections and applications to computational complexity, computational learning theory, cryptography and combinatorics. Topics include: probabilistic proofs, uniform generation and approximate counting, Fourier analysis of Boolean functions, computational learning theory, expander graphs, pseudorandom generators, derandomization.
R. Rubinfeld"
Problem-solving,Students will develop the ability to solve complex problems and challenges in the field of quantum complexity theory.,"6.5430 Quantum Complexity Theory
",1,Fall 2023,Problem-solving,"6.5430 Quantum Complexity Theory
", ,0,"()
Prereq: 6.1400, 18.4041, and 18.435
Units: 3-0-9

Introduction to quantum computational complexity theory, the study of the fundamental capabilities and limitations of quantum computers. Topics include complexity classes, lower bounds, communication complexity, proofs and advice, and interactive proof systems in the quantum world; classical simulation of quantum circuits. The objective is to bring students to the research frontier.
Staff

Security & Cryptography"
Analytical thinking,Students will enhance their ability to analyze and evaluate quantum computational problems and solutions.,"6.5430 Quantum Complexity Theory
",1,Fall 2023,Thinking Skills,"6.5430 Quantum Complexity Theory
", ,0,"()
Prereq: 6.1400, 18.4041, and 18.435
Units: 3-0-9

Introduction to quantum computational complexity theory, the study of the fundamental capabilities and limitations of quantum computers. Topics include complexity classes, lower bounds, communication complexity, proofs and advice, and interactive proof systems in the quantum world; classical simulation of quantum circuits. The objective is to bring students to the research frontier.
Staff

Security & Cryptography"
Critical reasoning,Students will develop the ability to critically reason and evaluate the capabilities and limitations of quantum computers.,"6.5430 Quantum Complexity Theory
",1,Fall 2023,Reasoning and Problem Solving,"6.5430 Quantum Complexity Theory
", ,0,"()
Prereq: 6.1400, 18.4041, and 18.435
Units: 3-0-9

Introduction to quantum computational complexity theory, the study of the fundamental capabilities and limitations of quantum computers. Topics include complexity classes, lower bounds, communication complexity, proofs and advice, and interactive proof systems in the quantum world; classical simulation of quantum circuits. The objective is to bring students to the research frontier.
Staff

Security & Cryptography"
Research skills,Students will acquire the ability to conduct research and stay updated with the latest advancements in quantum complexity theory.,"6.5430 Quantum Complexity Theory
",1,Fall 2023,Skills in Research and Technical Skills,"6.5430 Quantum Complexity Theory
", ,0,"()
Prereq: 6.1400, 18.4041, and 18.435
Units: 3-0-9

Introduction to quantum computational complexity theory, the study of the fundamental capabilities and limitations of quantum computers. Topics include complexity classes, lower bounds, communication complexity, proofs and advice, and interactive proof systems in the quantum world; classical simulation of quantum circuits. The objective is to bring students to the research frontier.
Staff

Security & Cryptography"
Presentation skills,Students will enhance their ability to effectively present and communicate complex concepts and findings in the field of quantum complexity theory.,"6.5430 Quantum Complexity Theory
",1,Fall 2023,Presentation skills,"6.5430 Quantum Complexity Theory
", ,0,"()
Prereq: 6.1400, 18.4041, and 18.435
Units: 3-0-9

Introduction to quantum computational complexity theory, the study of the fundamental capabilities and limitations of quantum computers. Topics include complexity classes, lower bounds, communication complexity, proofs and advice, and interactive proof systems in the quantum world; classical simulation of quantum circuits. The objective is to bring students to the research frontier.
Staff

Security & Cryptography"
Problem-solving,"Students will develop the ability to analyze security issues, identify vulnerabilities, and propose effective solutions.","6.1600 Foundations of Computer Security
",1,Fall 2023,Problem-solving,"6.1600 Foundations of Computer Security
", ,0,"()
Prereq: 6.1210 and 6.1800
Units: 4-0-8
Lecture: MW11-12.30 (4-237) Recitation: F11 (35-308) +final

Fundamental notions and big ideas for achieving security in computer systems. Topics include cryptographic foundations (pseudorandomness, collision-resistant hash functions, authentication codes, signatures, authenticated encryption, public-key encryption), systems ideas (isolation, non-interference, authentication, access control, delegation, trust), and implementation techniques (privilege separation, fuzzing, symbolic execution, runtime defenses, side-channel attacks). Case studies of how these ideas are realized in deployed systems. Lab assignments apply ideas from lectures to learn how to build secure systems and how they can be attacked.
H. Corrigan-GibbsNo textbook information available"
Critical thinking,The course will enhance students' ability to think critically about security challenges and evaluate the effectiveness of different security measures.,"6.1600 Foundations of Computer Security
",1,Fall 2023,Thinking Skills,"6.1600 Foundations of Computer Security
", ,0,"()
Prereq: 6.1210 and 6.1800
Units: 4-0-8
Lecture: MW11-12.30 (4-237) Recitation: F11 (35-308) +final

Fundamental notions and big ideas for achieving security in computer systems. Topics include cryptographic foundations (pseudorandomness, collision-resistant hash functions, authentication codes, signatures, authenticated encryption, public-key encryption), systems ideas (isolation, non-interference, authentication, access control, delegation, trust), and implementation techniques (privilege separation, fuzzing, symbolic execution, runtime defenses, side-channel attacks). Case studies of how these ideas are realized in deployed systems. Lab assignments apply ideas from lectures to learn how to build secure systems and how they can be attacked.
H. Corrigan-GibbsNo textbook information available"
Collaboration,"Through lab assignments and discussions, students will develop the ability to work collaboratively with peers to solve security problems and share knowledge.","6.1600 Foundations of Computer Security
",1,Fall 2023,Collaboration and Teamwork,"6.1600 Foundations of Computer Security
", ,0,"()
Prereq: 6.1210 and 6.1800
Units: 4-0-8
Lecture: MW11-12.30 (4-237) Recitation: F11 (35-308) +final

Fundamental notions and big ideas for achieving security in computer systems. Topics include cryptographic foundations (pseudorandomness, collision-resistant hash functions, authentication codes, signatures, authenticated encryption, public-key encryption), systems ideas (isolation, non-interference, authentication, access control, delegation, trust), and implementation techniques (privilege separation, fuzzing, symbolic execution, runtime defenses, side-channel attacks). Case studies of how these ideas are realized in deployed systems. Lab assignments apply ideas from lectures to learn how to build secure systems and how they can be attacked.
H. Corrigan-GibbsNo textbook information available"
Research skills,"Students will develop the ability to conduct research on security topics, gather relevant information, and apply it to their assignments and projects.","6.1600 Foundations of Computer Security
",1,Fall 2023,Skills in Research and Technical Skills,"6.1600 Foundations of Computer Security
", ,0,"()
Prereq: 6.1210 and 6.1800
Units: 4-0-8
Lecture: MW11-12.30 (4-237) Recitation: F11 (35-308) +final

Fundamental notions and big ideas for achieving security in computer systems. Topics include cryptographic foundations (pseudorandomness, collision-resistant hash functions, authentication codes, signatures, authenticated encryption, public-key encryption), systems ideas (isolation, non-interference, authentication, access control, delegation, trust), and implementation techniques (privilege separation, fuzzing, symbolic execution, runtime defenses, side-channel attacks). Case studies of how these ideas are realized in deployed systems. Lab assignments apply ideas from lectures to learn how to build secure systems and how they can be attacked.
H. Corrigan-GibbsNo textbook information available"
Presentation skills,"While not explicitly mentioned, students may have opportunities to present their findings and solutions, which will enhance their ability to communicate complex security concepts effectively.","6.1600 Foundations of Computer Security
",1,Fall 2023,Presentation skills,"6.1600 Foundations of Computer Security
", ,0,"()
Prereq: 6.1210 and 6.1800
Units: 4-0-8
Lecture: MW11-12.30 (4-237) Recitation: F11 (35-308) +final

Fundamental notions and big ideas for achieving security in computer systems. Topics include cryptographic foundations (pseudorandomness, collision-resistant hash functions, authentication codes, signatures, authenticated encryption, public-key encryption), systems ideas (isolation, non-interference, authentication, access control, delegation, trust), and implementation techniques (privilege separation, fuzzing, symbolic execution, runtime defenses, side-channel attacks). Case studies of how these ideas are realized in deployed systems. Lab assignments apply ideas from lectures to learn how to build secure systems and how they can be attacked.
H. Corrigan-GibbsNo textbook information available"
Problem-solving,Students will develop the ability to analyze complex cryptographic problems and devise appropriate solutions.,"6.5610 Applied Cryptography and Security
",1,Fall 2023,Problem-solving,"6.5610 Applied Cryptography and Security
", ,0,"()
Prereq: 6.1200 and 6.1800
Units: 4-0-8

Emphasis on applied cryptography. May include: basic notion of systems security, cryptographic hash functions, symmetric cryptography (one-time pad, block ciphers, stream ciphers, message authentication codes), hash functions, key-exchange, public-key cryptography (encryption, digital signatures), elliptic curve cryptography,  secret-sharing, fully homomorphic encryption, zero-knowledge proofs, and electronic voting. Assignments include a final group project. Topics may vary year to year.
Staff"
Communication,Students will enhance their ability to effectively communicate cryptographic concepts and solutions both verbally and in writing.,"6.5610 Applied Cryptography and Security
",1,Fall 2023,Communication,"6.5610 Applied Cryptography and Security
", ,0,"()
Prereq: 6.1200 and 6.1800
Units: 4-0-8

Emphasis on applied cryptography. May include: basic notion of systems security, cryptographic hash functions, symmetric cryptography (one-time pad, block ciphers, stream ciphers, message authentication codes), hash functions, key-exchange, public-key cryptography (encryption, digital signatures), elliptic curve cryptography,  secret-sharing, fully homomorphic encryption, zero-knowledge proofs, and electronic voting. Assignments include a final group project. Topics may vary year to year.
Staff"
Analytical thinking,Students will develop the ability to analyze and evaluate the security of cryptographic algorithms and protocols.,"6.5610 Applied Cryptography and Security
",1,Fall 2023,Thinking Skills,"6.5610 Applied Cryptography and Security
", ,0,"()
Prereq: 6.1200 and 6.1800
Units: 4-0-8

Emphasis on applied cryptography. May include: basic notion of systems security, cryptographic hash functions, symmetric cryptography (one-time pad, block ciphers, stream ciphers, message authentication codes), hash functions, key-exchange, public-key cryptography (encryption, digital signatures), elliptic curve cryptography,  secret-sharing, fully homomorphic encryption, zero-knowledge proofs, and electronic voting. Assignments include a final group project. Topics may vary year to year.
Staff"
Collaboration,"Students will enhance their ability to work effectively in a group setting, as assignments include a final group project.","6.5610 Applied Cryptography and Security
",1,Fall 2023,Collaboration and Teamwork,"6.5610 Applied Cryptography and Security
", ,0,"()
Prereq: 6.1200 and 6.1800
Units: 4-0-8

Emphasis on applied cryptography. May include: basic notion of systems security, cryptographic hash functions, symmetric cryptography (one-time pad, block ciphers, stream ciphers, message authentication codes), hash functions, key-exchange, public-key cryptography (encryption, digital signatures), elliptic curve cryptography,  secret-sharing, fully homomorphic encryption, zero-knowledge proofs, and electronic voting. Assignments include a final group project. Topics may vary year to year.
Staff"
Research skills,Students will develop the ability to conduct research on emerging cryptographic techniques and stay updated with the latest advancements in the field.,"6.5610 Applied Cryptography and Security
",1,Fall 2023,Skills in Research and Technical Skills,"6.5610 Applied Cryptography and Security
", ,0,"()
Prereq: 6.1200 and 6.1800
Units: 4-0-8

Emphasis on applied cryptography. May include: basic notion of systems security, cryptographic hash functions, symmetric cryptography (one-time pad, block ciphers, stream ciphers, message authentication codes), hash functions, key-exchange, public-key cryptography (encryption, digital signatures), elliptic curve cryptography,  secret-sharing, fully homomorphic encryption, zero-knowledge proofs, and electronic voting. Assignments include a final group project. Topics may vary year to year.
Staff"
Problem-solving,Students will develop strong problem-solving abilities as they work on cryptographic challenges and analyze cryptographic systems.,"6.5620[J] Cryptography and Cryptanalysis
",1,Fall 2023,Problem-solving,"6.5620[J] Cryptography and Cryptanalysis
", ,0,"()
(Same subject as 18.425[J])
Prereq: 6.1220
Units: 3-0-9
https://mit6875.github.io/
Lecture: MW1-2.30 (1-190)

A rigorous introduction to modern cryptography. Emphasis on the fundamental cryptographic primitives of public-key encryption, digital signatures, pseudo-random number generation, and basic protocols and their computational complexity requirements.
V. VaikuntanathanTextbooks (Fall 2023)"
Analytical thinking,Students will enhance their ability to think analytically and critically evaluate the security of cryptographic algorithms and protocols.,"6.5620[J] Cryptography and Cryptanalysis
",1,Fall 2023,Thinking Skills,"6.5620[J] Cryptography and Cryptanalysis
", ,0,"()
(Same subject as 18.425[J])
Prereq: 6.1220
Units: 3-0-9
https://mit6875.github.io/
Lecture: MW1-2.30 (1-190)

A rigorous introduction to modern cryptography. Emphasis on the fundamental cryptographic primitives of public-key encryption, digital signatures, pseudo-random number generation, and basic protocols and their computational complexity requirements.
V. VaikuntanathanTextbooks (Fall 2023)"
Analytical thinking,Students will develop the ability to analyze complex cryptographic problems and propose solutions.,"6.5630 Advanced Topics in Cryptography
",1,Fall 2023,Thinking Skills,"6.5630 Advanced Topics in Cryptography
", ,0,"() 
Prereq: 6.5620
Units: 3-0-9
Lecture: F1-4 (26-322)

In-depth exploration of recent results in cryptography.
Y. KalaiNo textbook information available"
Problem-solving,Students will enhance their problem-solving skills by applying cryptographic techniques to real-world scenarios.,"6.5630 Advanced Topics in Cryptography
",1,Fall 2023,Problem-solving,"6.5630 Advanced Topics in Cryptography
", ,0,"() 
Prereq: 6.5620
Units: 3-0-9
Lecture: F1-4 (26-322)

In-depth exploration of recent results in cryptography.
Y. KalaiNo textbook information available"
Critical evaluation,Students will learn to critically evaluate the security of cryptographic systems and identify vulnerabilities.,"6.5630 Advanced Topics in Cryptography
",1,Fall 2023,,"6.5630 Advanced Topics in Cryptography
", ,0,"() 
Prereq: 6.5620
Units: 3-0-9
Lecture: F1-4 (26-322)

In-depth exploration of recent results in cryptography.
Y. KalaiNo textbook information available"
Communication,Students will improve their ability to effectively communicate cryptographic concepts and findings.,"6.5630 Advanced Topics in Cryptography
",1,Fall 2023,Communication,"6.5630 Advanced Topics in Cryptography
", ,0,"() 
Prereq: 6.5620
Units: 3-0-9
Lecture: F1-4 (26-322)

In-depth exploration of recent results in cryptography.
Y. KalaiNo textbook information available"
Collaboration,Students will develop the ability to work collaboratively in teams to solve cryptographic challenges.,"6.5630 Advanced Topics in Cryptography
",1,Fall 2023,Collaboration and Teamwork,"6.5630 Advanced Topics in Cryptography
", ,0,"() 
Prereq: 6.5620
Units: 3-0-9
Lecture: F1-4 (26-322)

In-depth exploration of recent results in cryptography.
Y. KalaiNo textbook information available"
Problem-solving,Students will develop the ability to analyze and solve security-related problems in computer systems.,"6.5660 Computer Systems Security
",1,Fall 2023,Problem-solving,"6.5660 Computer Systems Security
", ,0,"()
Prereq: 6.1020 and 6.1800
Units: 3-6-3

Design and implementation of secure computer systems. Lectures cover attacks that compromise security as well as techniques for achieving security, based on recent research papers. Topics include operating system security, privilege separation, capabilities, language-based security, cryptographic network protocols, trusted hardware, and security in web applications and mobile phones. Labs involve implementing and compromising a web application that sandboxes arbitrary code, and a group final project.
Staff

Computer Systems"
Communication,Students will enhance their ability to effectively communicate security concepts and findings both verbally and in writing.,"6.5660 Computer Systems Security
",1,Fall 2023,Communication,"6.5660 Computer Systems Security
", ,0,"()
Prereq: 6.1020 and 6.1800
Units: 3-6-3

Design and implementation of secure computer systems. Lectures cover attacks that compromise security as well as techniques for achieving security, based on recent research papers. Topics include operating system security, privilege separation, capabilities, language-based security, cryptographic network protocols, trusted hardware, and security in web applications and mobile phones. Labs involve implementing and compromising a web application that sandboxes arbitrary code, and a group final project.
Staff

Computer Systems"
Analytical thinking,Students will develop the ability to analyze and evaluate the security of computer systems.,"6.5660 Computer Systems Security
",1,Fall 2023,Thinking Skills,"6.5660 Computer Systems Security
", ,0,"()
Prereq: 6.1020 and 6.1800
Units: 3-6-3

Design and implementation of secure computer systems. Lectures cover attacks that compromise security as well as techniques for achieving security, based on recent research papers. Topics include operating system security, privilege separation, capabilities, language-based security, cryptographic network protocols, trusted hardware, and security in web applications and mobile phones. Labs involve implementing and compromising a web application that sandboxes arbitrary code, and a group final project.
Staff

Computer Systems"
Teamwork,"Students will gain experience working in groups through the group final project, enhancing their ability to collaborate and contribute effectively.","6.5660 Computer Systems Security
",1,Fall 2023,Collaboration and Teamwork,"6.5660 Computer Systems Security
", ,0,"()
Prereq: 6.1020 and 6.1800
Units: 3-6-3

Design and implementation of secure computer systems. Lectures cover attacks that compromise security as well as techniques for achieving security, based on recent research papers. Topics include operating system security, privilege separation, capabilities, language-based security, cryptographic network protocols, trusted hardware, and security in web applications and mobile phones. Labs involve implementing and compromising a web application that sandboxes arbitrary code, and a group final project.
Staff

Computer Systems"
Implementation,"Students will develop the ability to implement security measures in computer systems, including web applications and mobile phones.","6.5660 Computer Systems Security
",1,Fall 2023,Implementation,"6.5660 Computer Systems Security
", ,0,"()
Prereq: 6.1020 and 6.1800
Units: 3-6-3

Design and implementation of secure computer systems. Lectures cover attacks that compromise security as well as techniques for achieving security, based on recent research papers. Topics include operating system security, privilege separation, capabilities, language-based security, cryptographic network protocols, trusted hardware, and security in web applications and mobile phones. Labs involve implementing and compromising a web application that sandboxes arbitrary code, and a group final project.
Staff

Computer Systems"
Problem-solving,"Students will develop the ability to solve complex problems related to computer systems engineering, which involves applying analytical and critical thinking skills.","6.1800 Computer Systems Engineering
",1,Fall 2023,Problem-solving,"6.1800 Computer Systems Engineering
", ,0,"()
Prereq: 6.1910
Units: 5-1-6

Topics on the engineering of computer software and hardware systems: techniques for controlling complexity; strong modularity using client-server design, operating systems; performance, networks; naming; security and privacy; fault-tolerant systems, atomicity and coordination of concurrent activities, and recovery; impact of computer systems on society. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Includes a single, semester-long design project. Students engage in extensive written communication exercises. Enrollment may be limited.
K. LaCurts"
Written communication,"Students will enhance their ability to communicate effectively through written communication exercises, which involves expressing ideas and concepts clearly and concisely.","6.1800 Computer Systems Engineering
",1,Fall 2023,Communication Methods,"6.1800 Computer Systems Engineering
", ,0,"()
Prereq: 6.1910
Units: 5-1-6

Topics on the engineering of computer software and hardware systems: techniques for controlling complexity; strong modularity using client-server design, operating systems; performance, networks; naming; security and privacy; fault-tolerant systems, atomicity and coordination of concurrent activities, and recovery; impact of computer systems on society. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Includes a single, semester-long design project. Students engage in extensive written communication exercises. Enrollment may be limited.
K. LaCurts"
Project management,"Students will develop the ability to manage and coordinate a semester-long design project, which requires organizing and prioritizing tasks and resources.","6.1800 Computer Systems Engineering
",1,Fall 2023,Project Management and Design Project,"6.1800 Computer Systems Engineering
", ,0,"()
Prereq: 6.1910
Units: 5-1-6

Topics on the engineering of computer software and hardware systems: techniques for controlling complexity; strong modularity using client-server design, operating systems; performance, networks; naming; security and privacy; fault-tolerant systems, atomicity and coordination of concurrent activities, and recovery; impact of computer systems on society. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Includes a single, semester-long design project. Students engage in extensive written communication exercises. Enrollment may be limited.
K. LaCurts"
Analytical thinking,"Students will enhance their ability to analyze and evaluate computer systems and their components, which involves applying logical reasoning and data analysis skills.","6.1800 Computer Systems Engineering
",1,Fall 2023,Thinking Skills,"6.1800 Computer Systems Engineering
", ,0,"()
Prereq: 6.1910
Units: 5-1-6

Topics on the engineering of computer software and hardware systems: techniques for controlling complexity; strong modularity using client-server design, operating systems; performance, networks; naming; security and privacy; fault-tolerant systems, atomicity and coordination of concurrent activities, and recovery; impact of computer systems on society. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Includes a single, semester-long design project. Students engage in extensive written communication exercises. Enrollment may be limited.
K. LaCurts"
Collaboration,"Students will develop the ability to work collaboratively in teams, which involves effectively communicating and coordinating with team members to achieve project goals.","6.1800 Computer Systems Engineering
",1,Fall 2023,Collaboration and Teamwork,"6.1800 Computer Systems Engineering
", ,0,"()
Prereq: 6.1910
Units: 5-1-6

Topics on the engineering of computer software and hardware systems: techniques for controlling complexity; strong modularity using client-server design, operating systems; performance, networks; naming; security and privacy; fault-tolerant systems, atomicity and coordination of concurrent activities, and recovery; impact of computer systems on society. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Includes a single, semester-long design project. Students engage in extensive written communication exercises. Enrollment may be limited.
K. LaCurts"
Problem-solving,Students will develop the ability to analyze and solve complex problems related to operating system design and implementation.,"6.1810 Operating System Engineering
",1,Fall 2023,Problem-solving,"6.1810 Operating System Engineering
", ,0,"()
Prereq: 6.1910
Units: 3-0-9
Lecture: MW1-2.30 (34-101)

Design and implementation of operating systems, and their use as a foundation for systems programming. Topics include virtual memory, file systems, threads, context switches, kernels, interrupts, system calls, interprocess communication, coordination, and interaction between software and hardware. A multi-processor operating system for RISC-V, xv6, is used to illustrate these topics. Individual laboratory assignments involve extending the xv6 operating system, for example to support sophisticated virtual memory features and networking.
R. MorrisNo textbook information available"
Communication,"Students will enhance their ability to effectively communicate their ideas and solutions, both verbally and in written form.","6.1810 Operating System Engineering
",1,Fall 2023,Communication,"6.1810 Operating System Engineering
", ,0,"()
Prereq: 6.1910
Units: 3-0-9
Lecture: MW1-2.30 (34-101)

Design and implementation of operating systems, and their use as a foundation for systems programming. Topics include virtual memory, file systems, threads, context switches, kernels, interrupts, system calls, interprocess communication, coordination, and interaction between software and hardware. A multi-processor operating system for RISC-V, xv6, is used to illustrate these topics. Individual laboratory assignments involve extending the xv6 operating system, for example to support sophisticated virtual memory features and networking.
R. MorrisNo textbook information available"
Organization,"Students will develop the ability to organize their work and manage complex projects, such as extending an operating system.","6.1810 Operating System Engineering
",1,Fall 2023,Organization,"6.1810 Operating System Engineering
", ,0,"()
Prereq: 6.1910
Units: 3-0-9
Lecture: MW1-2.30 (34-101)

Design and implementation of operating systems, and their use as a foundation for systems programming. Topics include virtual memory, file systems, threads, context switches, kernels, interrupts, system calls, interprocess communication, coordination, and interaction between software and hardware. A multi-processor operating system for RISC-V, xv6, is used to illustrate these topics. Individual laboratory assignments involve extending the xv6 operating system, for example to support sophisticated virtual memory features and networking.
R. MorrisNo textbook information available"
Analytical thinking,Students will enhance their ability to analyze and evaluate different approaches and trade-offs in operating system design and implementation.,"6.1810 Operating System Engineering
",1,Fall 2023,Thinking Skills,"6.1810 Operating System Engineering
", ,0,"()
Prereq: 6.1910
Units: 3-0-9
Lecture: MW1-2.30 (34-101)

Design and implementation of operating systems, and their use as a foundation for systems programming. Topics include virtual memory, file systems, threads, context switches, kernels, interrupts, system calls, interprocess communication, coordination, and interaction between software and hardware. A multi-processor operating system for RISC-V, xv6, is used to illustrate these topics. Individual laboratory assignments involve extending the xv6 operating system, for example to support sophisticated virtual memory features and networking.
R. MorrisNo textbook information available"
Collaboration,"Students will develop the ability to work effectively in teams, as they may be required to collaborate on laboratory assignments and projects.","6.1810 Operating System Engineering
",1,Fall 2023,Collaboration and Teamwork,"6.1810 Operating System Engineering
", ,0,"()
Prereq: 6.1910
Units: 3-0-9
Lecture: MW1-2.30 (34-101)

Design and implementation of operating systems, and their use as a foundation for systems programming. Topics include virtual memory, file systems, threads, context switches, kernels, interrupts, system calls, interprocess communication, coordination, and interaction between software and hardware. A multi-processor operating system for RISC-V, xv6, is used to illustrate these topics. Individual laboratory assignments involve extending the xv6 operating system, for example to support sophisticated virtual memory features and networking.
R. MorrisNo textbook information available"
System integration,Students will develop the ability to integrate different components and technologies to build functional IoT systems.,"6.1820[J] Mobile and Sensor Computing
",1,Fall 2023,System integration,"6.1820[J] Mobile and Sensor Computing
", ,0,"()
(Same subject as MAS.453[J])
Prereq: 6.1800 or permission of instructor
Units: 3-0-9

Focuses on ""Internet of Things"" (IoT) systems and technologies, sensing, computing, and communication. Explores fundamental design and implementation issues in the engineering of mobile and sensor computing systems. Topics include battery-free sensors, seeing through wall, robotic sensors, vital sign sensors (breathing, heartbeats, emotions), sensing in cars and autonomous vehicles, subsea IoT, sensor security, positioning technologies (including GPS and indoor WiFi), inertial sensing (accelerometers, gyroscopes, inertial measurement units, dead-reckoning), embedded and distributed system architectures, sensing with radio signals, sensing with microphones and cameras, wireless sensor networks, embedded and distributed system architectures, mobile libraries and APIs to sensors, and application case studies. Includes readings from research literature, as well as laboratory assignments and a significant term project.
Staff"
Critical thinking,Students will enhance their ability to think critically and analyze complex problems in the context of IoT systems.,"6.1820[J] Mobile and Sensor Computing
",1,Fall 2023,Thinking Skills,"6.1820[J] Mobile and Sensor Computing
", ,0,"()
(Same subject as MAS.453[J])
Prereq: 6.1800 or permission of instructor
Units: 3-0-9

Focuses on ""Internet of Things"" (IoT) systems and technologies, sensing, computing, and communication. Explores fundamental design and implementation issues in the engineering of mobile and sensor computing systems. Topics include battery-free sensors, seeing through wall, robotic sensors, vital sign sensors (breathing, heartbeats, emotions), sensing in cars and autonomous vehicles, subsea IoT, sensor security, positioning technologies (including GPS and indoor WiFi), inertial sensing (accelerometers, gyroscopes, inertial measurement units, dead-reckoning), embedded and distributed system architectures, sensing with radio signals, sensing with microphones and cameras, wireless sensor networks, embedded and distributed system architectures, mobile libraries and APIs to sensors, and application case studies. Includes readings from research literature, as well as laboratory assignments and a significant term project.
Staff"
Communication,Students will improve their ability to effectively communicate their ideas and findings related to IoT systems.,"6.1820[J] Mobile and Sensor Computing
",1,Fall 2023,Communication,"6.1820[J] Mobile and Sensor Computing
", ,0,"()
(Same subject as MAS.453[J])
Prereq: 6.1800 or permission of instructor
Units: 3-0-9

Focuses on ""Internet of Things"" (IoT) systems and technologies, sensing, computing, and communication. Explores fundamental design and implementation issues in the engineering of mobile and sensor computing systems. Topics include battery-free sensors, seeing through wall, robotic sensors, vital sign sensors (breathing, heartbeats, emotions), sensing in cars and autonomous vehicles, subsea IoT, sensor security, positioning technologies (including GPS and indoor WiFi), inertial sensing (accelerometers, gyroscopes, inertial measurement units, dead-reckoning), embedded and distributed system architectures, sensing with radio signals, sensing with microphones and cameras, wireless sensor networks, embedded and distributed system architectures, mobile libraries and APIs to sensors, and application case studies. Includes readings from research literature, as well as laboratory assignments and a significant term project.
Staff"
Project management,Students will develop the ability to manage and organize projects related to IoT system design and implementation.,"6.1820[J] Mobile and Sensor Computing
",1,Fall 2023,Project Management and Design Project,"6.1820[J] Mobile and Sensor Computing
", ,0,"()
(Same subject as MAS.453[J])
Prereq: 6.1800 or permission of instructor
Units: 3-0-9

Focuses on ""Internet of Things"" (IoT) systems and technologies, sensing, computing, and communication. Explores fundamental design and implementation issues in the engineering of mobile and sensor computing systems. Topics include battery-free sensors, seeing through wall, robotic sensors, vital sign sensors (breathing, heartbeats, emotions), sensing in cars and autonomous vehicles, subsea IoT, sensor security, positioning technologies (including GPS and indoor WiFi), inertial sensing (accelerometers, gyroscopes, inertial measurement units, dead-reckoning), embedded and distributed system architectures, sensing with radio signals, sensing with microphones and cameras, wireless sensor networks, embedded and distributed system architectures, mobile libraries and APIs to sensors, and application case studies. Includes readings from research literature, as well as laboratory assignments and a significant term project.
Staff"
Troubleshooting,Students will acquire the ability to identify and resolve issues and errors in IoT systems.,"6.1820[J] Mobile and Sensor Computing
",1,Fall 2023,Software Debugging and Troubleshooting,"6.1820[J] Mobile and Sensor Computing
", ,0,"()
(Same subject as MAS.453[J])
Prereq: 6.1800 or permission of instructor
Units: 3-0-9

Focuses on ""Internet of Things"" (IoT) systems and technologies, sensing, computing, and communication. Explores fundamental design and implementation issues in the engineering of mobile and sensor computing systems. Topics include battery-free sensors, seeing through wall, robotic sensors, vital sign sensors (breathing, heartbeats, emotions), sensing in cars and autonomous vehicles, subsea IoT, sensor security, positioning technologies (including GPS and indoor WiFi), inertial sensing (accelerometers, gyroscopes, inertial measurement units, dead-reckoning), embedded and distributed system architectures, sensing with radio signals, sensing with microphones and cameras, wireless sensor networks, embedded and distributed system architectures, mobile libraries and APIs to sensors, and application case studies. Includes readings from research literature, as well as laboratory assignments and a significant term project.
Staff"
Critical thinking,"Students will develop the ability to critically analyze and evaluate design decisions, case studies, and readings. This ability enhances their problem-solving skills and enables them to make informed judgments.","6.1850 Computer Systems and Society
",1,Fall 2023,Thinking Skills,"6.1850 Computer Systems and Society
", ,0,"()
Prereq: 6.1800
Units: 3-0-9
Lecture: TR11-12.30 (34-301)

Explores the impact of computer systems on individual humans, society, and the environment. Examines large- and small-scale power structures that stem from low-level technical design decisions, the consequences of those structures on society, and how they can limit or provide access to certain technologies. Students learn to assess design decisions within an ethical framework and consider the impact of their decisions on non-users. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Possible topics include the implications of hierarchical designs (e.g., DNS) for scale; how layered models influence what parts of a network have the power to take certain actions; and the environmental impact of proof-of-work-based systems such as Bitcoin. Enrollment may be limited.
K. LacurtsNo textbook information available"
Ethical decision-making,Students will enhance their ability to make ethical decisions by considering the impact of their design choices on non-users. This ability is crucial in ensuring responsible and socially conscious computer system development.,"6.1850 Computer Systems and Society
",1,Fall 2023,,"6.1850 Computer Systems and Society
", ,0,"()
Prereq: 6.1800
Units: 3-0-9
Lecture: TR11-12.30 (34-301)

Explores the impact of computer systems on individual humans, society, and the environment. Examines large- and small-scale power structures that stem from low-level technical design decisions, the consequences of those structures on society, and how they can limit or provide access to certain technologies. Students learn to assess design decisions within an ethical framework and consider the impact of their decisions on non-users. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Possible topics include the implications of hierarchical designs (e.g., DNS) for scale; how layered models influence what parts of a network have the power to take certain actions; and the environmental impact of proof-of-work-based systems such as Bitcoin. Enrollment may be limited.
K. LacurtsNo textbook information available"
Communication,"Students will improve their ability to communicate effectively, both verbally and in writing. This ability is essential for presenting their ideas, analysis, and findings related to computer systems and society.","6.1850 Computer Systems and Society
",1,Fall 2023,Communication,"6.1850 Computer Systems and Society
", ,0,"()
Prereq: 6.1800
Units: 3-0-9
Lecture: TR11-12.30 (34-301)

Explores the impact of computer systems on individual humans, society, and the environment. Examines large- and small-scale power structures that stem from low-level technical design decisions, the consequences of those structures on society, and how they can limit or provide access to certain technologies. Students learn to assess design decisions within an ethical framework and consider the impact of their decisions on non-users. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Possible topics include the implications of hierarchical designs (e.g., DNS) for scale; how layered models influence what parts of a network have the power to take certain actions; and the environmental impact of proof-of-work-based systems such as Bitcoin. Enrollment may be limited.
K. LacurtsNo textbook information available"
Problem-solving,Students will develop the ability to solve complex problems related to computer systems and society. This ability is honed through programming projects and case study analysis.,"6.1850 Computer Systems and Society
",1,Fall 2023,Problem-solving,"6.1850 Computer Systems and Society
", ,0,"()
Prereq: 6.1800
Units: 3-0-9
Lecture: TR11-12.30 (34-301)

Explores the impact of computer systems on individual humans, society, and the environment. Examines large- and small-scale power structures that stem from low-level technical design decisions, the consequences of those structures on society, and how they can limit or provide access to certain technologies. Students learn to assess design decisions within an ethical framework and consider the impact of their decisions on non-users. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Possible topics include the implications of hierarchical designs (e.g., DNS) for scale; how layered models influence what parts of a network have the power to take certain actions; and the environmental impact of proof-of-work-based systems such as Bitcoin. Enrollment may be limited.
K. LacurtsNo textbook information available"
Organizational skills,"Students will enhance their ability to organize and manage information, data, and resources related to computer systems and society. This ability is important for efficient project management and research.","6.1850 Computer Systems and Society
",1,Fall 2023,Organizational skills,"6.1850 Computer Systems and Society
", ,0,"()
Prereq: 6.1800
Units: 3-0-9
Lecture: TR11-12.30 (34-301)

Explores the impact of computer systems on individual humans, society, and the environment. Examines large- and small-scale power structures that stem from low-level technical design decisions, the consequences of those structures on society, and how they can limit or provide access to certain technologies. Students learn to assess design decisions within an ethical framework and consider the impact of their decisions on non-users. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Possible topics include the implications of hierarchical designs (e.g., DNS) for scale; how layered models influence what parts of a network have the power to take certain actions; and the environmental impact of proof-of-work-based systems such as Bitcoin. Enrollment may be limited.
K. LacurtsNo textbook information available"
Problem-solving,Students will develop strong problem-solving abilities as they tackle various design and implementation challenges in operating system engineering.,"6.5810 Operating System Engineering
",1,Fall 2023,Problem-solving,"6.5810 Operating System Engineering
", ,0,"()
Prereq: 6.1020 and 6.1800
Units: 3-6-3
Lecture: MW1-2.30 (3-370) Recitation: TBA

Fundamental design and implementation issues in the engineering of operating systems. Lectures based on the study of a symmetric multiprocessor version of UNIX version 6 and research papers. Topics include virtual memory; file system; threads; context switches; kernels; interrupts; system calls; interprocess communication; coordination, and interaction between software and hardware. Individual laboratory assignments accumulate in the construction of a minimal operating system (for an x86-based personal computer) that implements the basic operating system abstractions and a shell. Knowledge of programming in the C language is a prerequisite.
M. KaashoekNo textbook information available"
Communication,Students will enhance their communication abilities through the presentation and documentation of their operating system projects.,"6.5810 Operating System Engineering
",1,Fall 2023,Communication,"6.5810 Operating System Engineering
", ,0,"()
Prereq: 6.1020 and 6.1800
Units: 3-6-3
Lecture: MW1-2.30 (3-370) Recitation: TBA

Fundamental design and implementation issues in the engineering of operating systems. Lectures based on the study of a symmetric multiprocessor version of UNIX version 6 and research papers. Topics include virtual memory; file system; threads; context switches; kernels; interrupts; system calls; interprocess communication; coordination, and interaction between software and hardware. Individual laboratory assignments accumulate in the construction of a minimal operating system (for an x86-based personal computer) that implements the basic operating system abstractions and a shell. Knowledge of programming in the C language is a prerequisite.
M. KaashoekNo textbook information available"
Analytical thinking,Students will develop the ability to analyze complex issues related to operating system design and implementation.,"6.5810 Operating System Engineering
",1,Fall 2023,Thinking Skills,"6.5810 Operating System Engineering
", ,0,"()
Prereq: 6.1020 and 6.1800
Units: 3-6-3
Lecture: MW1-2.30 (3-370) Recitation: TBA

Fundamental design and implementation issues in the engineering of operating systems. Lectures based on the study of a symmetric multiprocessor version of UNIX version 6 and research papers. Topics include virtual memory; file system; threads; context switches; kernels; interrupts; system calls; interprocess communication; coordination, and interaction between software and hardware. Individual laboratory assignments accumulate in the construction of a minimal operating system (for an x86-based personal computer) that implements the basic operating system abstractions and a shell. Knowledge of programming in the C language is a prerequisite.
M. KaashoekNo textbook information available"
Collaboration,"Students will enhance their ability to work collaboratively in teams, as the construction of a minimal operating system requires coordination and teamwork.","6.5810 Operating System Engineering
",1,Fall 2023,Collaboration and Teamwork,"6.5810 Operating System Engineering
", ,0,"()
Prereq: 6.1020 and 6.1800
Units: 3-6-3
Lecture: MW1-2.30 (3-370) Recitation: TBA

Fundamental design and implementation issues in the engineering of operating systems. Lectures based on the study of a symmetric multiprocessor version of UNIX version 6 and research papers. Topics include virtual memory; file system; threads; context switches; kernels; interrupts; system calls; interprocess communication; coordination, and interaction between software and hardware. Individual laboratory assignments accumulate in the construction of a minimal operating system (for an x86-based personal computer) that implements the basic operating system abstractions and a shell. Knowledge of programming in the C language is a prerequisite.
M. KaashoekNo textbook information available"
Time management,"Students will improve their ability to manage their time effectively, as the course involves individual laboratory assignments that accumulate towards the completion of the operating system project.","6.5810 Operating System Engineering
",1,Fall 2023,Time management,"6.5810 Operating System Engineering
", ,0,"()
Prereq: 6.1020 and 6.1800
Units: 3-6-3
Lecture: MW1-2.30 (3-370) Recitation: TBA

Fundamental design and implementation issues in the engineering of operating systems. Lectures based on the study of a symmetric multiprocessor version of UNIX version 6 and research papers. Topics include virtual memory; file system; threads; context switches; kernels; interrupts; system calls; interprocess communication; coordination, and interaction between software and hardware. Individual laboratory assignments accumulate in the construction of a minimal operating system (for an x86-based personal computer) that implements the basic operating system abstractions and a shell. Knowledge of programming in the C language is a prerequisite.
M. KaashoekNo textbook information available"
Problem-solving,Students will develop the ability to analyze and solve complex problems related to network protocols and architecture.,"6.5820 Computer Networks
",1,Fall 2023,Problem-solving,"6.5820 Computer Networks
", ,0,"()
Prereq: 6.1800 or permission of instructor
Units: 4-0-8
Lecture: TR1-2.30 (32-124)

Topics on the engineering and analysis of network protocols and architecture, including architectural principles for designing heterogeneous networks; transport protocols; Internet routing; router design; congestion control and network resource management; wireless networks; network security; naming; overlay and peer-to-peer networks. Readings from original research papers. Semester-long project and paper.
M. Alizadeh AttarNo textbook information available"
Communication,Students will enhance their ability to effectively communicate technical concepts and ideas related to computer networks.,"6.5820 Computer Networks
",1,Fall 2023,Communication,"6.5820 Computer Networks
", ,0,"()
Prereq: 6.1800 or permission of instructor
Units: 4-0-8
Lecture: TR1-2.30 (32-124)

Topics on the engineering and analysis of network protocols and architecture, including architectural principles for designing heterogeneous networks; transport protocols; Internet routing; router design; congestion control and network resource management; wireless networks; network security; naming; overlay and peer-to-peer networks. Readings from original research papers. Semester-long project and paper.
M. Alizadeh AttarNo textbook information available"
Analytical thinking,Students will develop the ability to analyze network performance and identify areas for improvement.,"6.5820 Computer Networks
",1,Fall 2023,Thinking Skills,"6.5820 Computer Networks
", ,0,"()
Prereq: 6.1800 or permission of instructor
Units: 4-0-8
Lecture: TR1-2.30 (32-124)

Topics on the engineering and analysis of network protocols and architecture, including architectural principles for designing heterogeneous networks; transport protocols; Internet routing; router design; congestion control and network resource management; wireless networks; network security; naming; overlay and peer-to-peer networks. Readings from original research papers. Semester-long project and paper.
M. Alizadeh AttarNo textbook information available"
Collaboration,Students will learn how to work effectively in teams to design and implement network protocols and architectures.,"6.5820 Computer Networks
",1,Fall 2023,Collaboration and Teamwork,"6.5820 Computer Networks
", ,0,"()
Prereq: 6.1800 or permission of instructor
Units: 4-0-8
Lecture: TR1-2.30 (32-124)

Topics on the engineering and analysis of network protocols and architecture, including architectural principles for designing heterogeneous networks; transport protocols; Internet routing; router design; congestion control and network resource management; wireless networks; network security; naming; overlay and peer-to-peer networks. Readings from original research papers. Semester-long project and paper.
M. Alizadeh AttarNo textbook information available"
Research skills,Students will develop the ability to find and evaluate research papers related to computer networks and apply the findings to their own projects.,"6.5820 Computer Networks
",1,Fall 2023,Skills in Research and Technical Skills,"6.5820 Computer Networks
", ,0,"()
Prereq: 6.1800 or permission of instructor
Units: 4-0-8
Lecture: TR1-2.30 (32-124)

Topics on the engineering and analysis of network protocols and architecture, including architectural principles for designing heterogeneous networks; transport protocols; Internet routing; router design; congestion control and network resource management; wireless networks; network security; naming; overlay and peer-to-peer networks. Readings from original research papers. Semester-long project and paper.
M. Alizadeh AttarNo textbook information available"
Problem-solving,"Students will develop the ability to solve complex problems related to database systems, such as query optimization, concurrency control, and transaction management. This ability is crucial for designing and maintaining efficient and reliable database systems.","6.5830 Database Systems
",1,Fall 2023,Problem-solving,"6.5830 Database Systems
", ,0,"()
(Subject meets with 6.5831)
Prereq: (6.1800 and (6.1210 or 6.1220)) or permission of instructor
Units: 3-0-9
Lecture: MW2.30-4 (32-155)

Topics related to the engineering and design of database systems, including data models; database and schema design; schema normalization and integrity constraints; query processing; query optimization and cost estimation; transactions; recovery; concurrency control; isolation and consistency; distributed, parallel and heterogeneous databases; adaptive databases; trigger systems; pub-sub systems; semi structured data and XML querying. Lecture and readings from original research papers. Semester-long project and paper. Students taking graduate version complete different assignments. Enrollment may be limited.
S. R. MaddenNo textbook information available"
Communication,"Students will enhance their communication skills through the semester-long project and paper. They will learn how to effectively communicate their ideas, findings, and research in the field of database systems.","6.5830 Database Systems
",1,Fall 2023,Communication,"6.5830 Database Systems
", ,0,"()
(Subject meets with 6.5831)
Prereq: (6.1800 and (6.1210 or 6.1220)) or permission of instructor
Units: 3-0-9
Lecture: MW2.30-4 (32-155)

Topics related to the engineering and design of database systems, including data models; database and schema design; schema normalization and integrity constraints; query processing; query optimization and cost estimation; transactions; recovery; concurrency control; isolation and consistency; distributed, parallel and heterogeneous databases; adaptive databases; trigger systems; pub-sub systems; semi structured data and XML querying. Lecture and readings from original research papers. Semester-long project and paper. Students taking graduate version complete different assignments. Enrollment may be limited.
S. R. MaddenNo textbook information available"
Problem-solving,"Students will develop the ability to solve complex problems related to database systems, such as query optimization, concurrency control, and transaction management.","6.5831 Database Systems
",1,Fall 2023,Problem-solving,"6.5831 Database Systems
", ,0,"()
(Subject meets with 6.5830)
Prereq: (6.1800 and (6.1210 or 6.1220)) or permission of instructor
Units: 3-0-9
Lecture: MW2.30-4 (32-155)

Topics related to the engineering and design of database systems, including data models; database and schema design; schema normalization and integrity constraints; query processing; query optimization and cost estimation; transactions; recovery; concurrency control; isolation and consistency; distributed, parallel and heterogeneous databases; adaptive databases; trigger systems; pub-sub systems; semi structured data and XML querying. Lecture and readings from original research papers. Semester-long project and paper. Students taking graduate version complete different assignments. Enrollment may be limited.
S. MaddenNo textbook information available"
Communication,"Students will enhance their communication skills through the semester-long project and paper, as well as through discussions and presentations of research papers. Effective communication is crucial for conveying ideas and findings in the field of database systems.","6.5831 Database Systems
",1,Fall 2023,Communication,"6.5831 Database Systems
", ,0,"()
(Subject meets with 6.5830)
Prereq: (6.1800 and (6.1210 or 6.1220)) or permission of instructor
Units: 3-0-9
Lecture: MW2.30-4 (32-155)

Topics related to the engineering and design of database systems, including data models; database and schema design; schema normalization and integrity constraints; query processing; query optimization and cost estimation; transactions; recovery; concurrency control; isolation and consistency; distributed, parallel and heterogeneous databases; adaptive databases; trigger systems; pub-sub systems; semi structured data and XML querying. Lecture and readings from original research papers. Semester-long project and paper. Students taking graduate version complete different assignments. Enrollment may be limited.
S. MaddenNo textbook information available"
Problem-solving,Students will develop the ability to analyze and solve complex problems encountered in the design and implementation of distributed systems.,"6.5840 Distributed Computer Systems Engineering
",1,Fall 2023,Problem-solving,"6.5840 Distributed Computer Systems Engineering
", ,0,"()
Prereq: 6.1800 and permission of instructor
Units: 3-0-9

Abstractions and implementation techniques for engineering distributed systems: remote procedure call, threads and locking, client/server, peer-to-peer, consistency, fault tolerance, and security. Readings from current literature. Individual laboratory assignments culminate in the construction of a fault-tolerant and scalable network file system. Programming experience with C/C++ required. Enrollment limited.
Staff"
Communication,"Students will enhance their ability to effectively communicate their ideas, designs, and solutions to peers and instructors.","6.5840 Distributed Computer Systems Engineering
",1,Fall 2023,Communication,"6.5840 Distributed Computer Systems Engineering
", ,0,"()
Prereq: 6.1800 and permission of instructor
Units: 3-0-9

Abstractions and implementation techniques for engineering distributed systems: remote procedure call, threads and locking, client/server, peer-to-peer, consistency, fault tolerance, and security. Readings from current literature. Individual laboratory assignments culminate in the construction of a fault-tolerant and scalable network file system. Programming experience with C/C++ required. Enrollment limited.
Staff"
Programming with C/C++,Students will further enhance their programming abilities in C/C++ through hands-on laboratory assignments and projects.,"6.5840 Distributed Computer Systems Engineering
",1,Fall 2023,Programming with C/C++,"6.5840 Distributed Computer Systems Engineering
", ,0,"()
Prereq: 6.1800 and permission of instructor
Units: 3-0-9

Abstractions and implementation techniques for engineering distributed systems: remote procedure call, threads and locking, client/server, peer-to-peer, consistency, fault tolerance, and security. Readings from current literature. Individual laboratory assignments culminate in the construction of a fault-tolerant and scalable network file system. Programming experience with C/C++ required. Enrollment limited.
Staff"
System scalability,Students will develop the ability to design and implement distributed systems that can scale to handle increasing workloads and user demands.,"6.5840 Distributed Computer Systems Engineering
",1,Fall 2023,System scalability,"6.5840 Distributed Computer Systems Engineering
", ,0,"()
Prereq: 6.1800 and permission of instructor
Units: 3-0-9

Abstractions and implementation techniques for engineering distributed systems: remote procedure call, threads and locking, client/server, peer-to-peer, consistency, fault tolerance, and security. Readings from current literature. Individual laboratory assignments culminate in the construction of a fault-tolerant and scalable network file system. Programming experience with C/C++ required. Enrollment limited.
Staff"
System fault tolerance,Students will gain the ability to design and implement fault-tolerant distributed systems that can withstand failures and ensure system reliability.,"6.5840 Distributed Computer Systems Engineering
",1,Fall 2023,System fault tolerance,"6.5840 Distributed Computer Systems Engineering
", ,0,"()
Prereq: 6.1800 and permission of instructor
Units: 3-0-9

Abstractions and implementation techniques for engineering distributed systems: remote procedure call, threads and locking, client/server, peer-to-peer, consistency, fault tolerance, and security. Readings from current literature. Individual laboratory assignments culminate in the construction of a fault-tolerant and scalable network file system. Programming experience with C/C++ required. Enrollment limited.
Staff"
Problem-solving,"Students will develop the ability to analyze and solve complex problems related to computer systems, applying their knowledge and skills to identify and implement effective solutions.","6.5850 Principles of Computer Systems
",1,Fall 2023,Problem-solving,"6.5850 Principles of Computer Systems
", ,0,"()Not offered regularly; consult department
Prereq: Permission of instructor
Units: 3-0-9
 Subject Cancelled 

Introduction to the basic principles of computer systems with emphasis on the use of rigorous techniques as an aid to understanding and building modern computing systems. Particular attention paid to concurrent and distributed systems. Topics include: specification and verification, concurrent algorithms, synchronization, naming, Networking, replication techniques (including distributed cache management), and principles and algorithms for achieving reliability.
M. F. Kaashoek, B. Lampson, N. B. Zeldovich

Computer Architecture"
Communication,"Students will enhance their ability to effectively communicate technical concepts and ideas related to computer systems, both verbally and in written form.","6.5850 Principles of Computer Systems
",1,Fall 2023,Communication,"6.5850 Principles of Computer Systems
", ,0,"()Not offered regularly; consult department
Prereq: Permission of instructor
Units: 3-0-9
 Subject Cancelled 

Introduction to the basic principles of computer systems with emphasis on the use of rigorous techniques as an aid to understanding and building modern computing systems. Particular attention paid to concurrent and distributed systems. Topics include: specification and verification, concurrent algorithms, synchronization, naming, Networking, replication techniques (including distributed cache management), and principles and algorithms for achieving reliability.
M. F. Kaashoek, B. Lampson, N. B. Zeldovich

Computer Architecture"
Analytical thinking,"Students will develop the ability to analyze and evaluate different aspects of computer systems, including performance, scalability, and reliability, to make informed decisions and optimizations.","6.5850 Principles of Computer Systems
",1,Fall 2023,Thinking Skills,"6.5850 Principles of Computer Systems
", ,0,"()Not offered regularly; consult department
Prereq: Permission of instructor
Units: 3-0-9
 Subject Cancelled 

Introduction to the basic principles of computer systems with emphasis on the use of rigorous techniques as an aid to understanding and building modern computing systems. Particular attention paid to concurrent and distributed systems. Topics include: specification and verification, concurrent algorithms, synchronization, naming, Networking, replication techniques (including distributed cache management), and principles and algorithms for achieving reliability.
M. F. Kaashoek, B. Lampson, N. B. Zeldovich

Computer Architecture"
Collaboration,"Students will learn how to work effectively in teams and collaborate with others in designing and implementing computer systems, recognizing the importance of teamwork in complex projects.","6.5850 Principles of Computer Systems
",1,Fall 2023,Collaboration and Teamwork,"6.5850 Principles of Computer Systems
", ,0,"()Not offered regularly; consult department
Prereq: Permission of instructor
Units: 3-0-9
 Subject Cancelled 

Introduction to the basic principles of computer systems with emphasis on the use of rigorous techniques as an aid to understanding and building modern computing systems. Particular attention paid to concurrent and distributed systems. Topics include: specification and verification, concurrent algorithms, synchronization, naming, Networking, replication techniques (including distributed cache management), and principles and algorithms for achieving reliability.
M. F. Kaashoek, B. Lampson, N. B. Zeldovich

Computer Architecture"
Adaptability,"Students will develop the ability to adapt to new technologies, methodologies, and challenges in the field of computer systems, as the industry evolves rapidly.","6.5850 Principles of Computer Systems
",1,Fall 2023,Adaptability,"6.5850 Principles of Computer Systems
", ,0,"()Not offered regularly; consult department
Prereq: Permission of instructor
Units: 3-0-9
 Subject Cancelled 

Introduction to the basic principles of computer systems with emphasis on the use of rigorous techniques as an aid to understanding and building modern computing systems. Particular attention paid to concurrent and distributed systems. Topics include: specification and verification, concurrent algorithms, synchronization, naming, Networking, replication techniques (including distributed cache management), and principles and algorithms for achieving reliability.
M. F. Kaashoek, B. Lampson, N. B. Zeldovich

Computer Architecture"
Problem-solving,Students will develop the ability to solve programming problems in the context of low-level programming.,"6.1903 Introduction to Low-level Programming in C and Assembly
(6.1900)
",1,Fall 2023,Problem-solving,"6.1903 Introduction to Low-level Programming in C and Assembly
(6.1900)
", ,0,"(); second half of term
Prereq: 6.100A
Units: 2-2-2
Credit cannot also be received for 6.1904

Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, and how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.
J. D. Steinmeyer, S. Hanono Wachman"
Communication,"Students will enhance their ability to communicate effectively, both verbally and in writing, about low-level programming concepts and techniques.","6.1903 Introduction to Low-level Programming in C and Assembly
(6.1900)
",1,Fall 2023,Communication,"6.1903 Introduction to Low-level Programming in C and Assembly
(6.1900)
", ,0,"(); second half of term
Prereq: 6.100A
Units: 2-2-2
Credit cannot also be received for 6.1904

Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, and how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.
J. D. Steinmeyer, S. Hanono Wachman"
Analytical thinking,Students will develop the ability to analyze and understand complex data structures and their manipulation in low-level programming.,"6.1903 Introduction to Low-level Programming in C and Assembly
(6.1900)
",1,Fall 2023,Thinking Skills,"6.1903 Introduction to Low-level Programming in C and Assembly
(6.1900)
", ,0,"(); second half of term
Prereq: 6.100A
Units: 2-2-2
Credit cannot also be received for 6.1904

Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, and how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.
J. D. Steinmeyer, S. Hanono Wachman"
Memory management,Students will acquire the ability to effectively manage memory and understand the constraints involved in memory allocation and deallocation.,"6.1903 Introduction to Low-level Programming in C and Assembly
(6.1900)
",1,Fall 2023,Memory management,"6.1903 Introduction to Low-level Programming in C and Assembly
(6.1900)
", ,0,"(); second half of term
Prereq: 6.100A
Units: 2-2-2
Credit cannot also be received for 6.1904

Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, and how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.
J. D. Steinmeyer, S. Hanono Wachman"
Debugging,"Students will develop the ability to debug and troubleshoot low-level programming code, identifying and fixing errors in their programs.","6.1903 Introduction to Low-level Programming in C and Assembly
(6.1900)
",1,Fall 2023,Software Debugging and Troubleshooting,"6.1903 Introduction to Low-level Programming in C and Assembly
(6.1900)
", ,0,"(); second half of term
Prereq: 6.100A
Units: 2-2-2
Credit cannot also be received for 6.1904

Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, and how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.
J. D. Steinmeyer, S. Hanono Wachman"
Analytical thinking,Students will develop the ability to analyze and understand complex programming concepts in low-level programming.,"6.1904 Introduction to Low-level Programming in C and Assembly
(New)
",1,Fall 2023,Thinking Skills,"6.1904 Introduction to Low-level Programming in C and Assembly
(New)
", ,0,"(); second half of term
Prereq: 6.100A
Units: 2-2-2
Credit cannot also be received for 6.1903

Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, and how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.
J. D. Steinmeyer, S. Hanono Wachman"
Problem-solving,Students will enhance their problem-solving abilities as they tackle programming challenges in low-level programming.,"6.1904 Introduction to Low-level Programming in C and Assembly
(New)
",1,Fall 2023,Problem-solving,"6.1904 Introduction to Low-level Programming in C and Assembly
(New)
", ,0,"(); second half of term
Prereq: 6.100A
Units: 2-2-2
Credit cannot also be received for 6.1903

Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, and how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.
J. D. Steinmeyer, S. Hanono Wachman"
Communication,Students will improve their ability to communicate their ideas and programming solutions verbally and in writing.,"6.1904 Introduction to Low-level Programming in C and Assembly
(New)
",1,Fall 2023,Communication,"6.1904 Introduction to Low-level Programming in C and Assembly
(New)
", ,0,"(); second half of term
Prereq: 6.100A
Units: 2-2-2
Credit cannot also be received for 6.1903

Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, and how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.
J. D. Steinmeyer, S. Hanono Wachman"
Organization,Students will develop organizational skills to effectively manage and structure their low-level programming projects.,"6.1904 Introduction to Low-level Programming in C and Assembly
(New)
",1,Fall 2023,Organization,"6.1904 Introduction to Low-level Programming in C and Assembly
(New)
", ,0,"(); second half of term
Prereq: 6.100A
Units: 2-2-2
Credit cannot also be received for 6.1903

Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, and how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.
J. D. Steinmeyer, S. Hanono Wachman"
Attention to detail,"Students will cultivate the ability to pay close attention to detail, as precision is crucial in low-level programming.","6.1904 Introduction to Low-level Programming in C and Assembly
(New)
",1,Fall 2023,Attention to detail,"6.1904 Introduction to Low-level Programming in C and Assembly
(New)
", ,0,"(); second half of term
Prereq: 6.100A
Units: 2-2-2
Credit cannot also be received for 6.1903

Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, and how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.
J. D. Steinmeyer, S. Hanono Wachman"
Problem-solving,Students will develop the ability to solve complex problems related to digital systems and computer architecture.,"6.1910 Computation Structures
",1,Fall 2023,Problem-solving,"6.1910 Computation Structures
", ,0,"(, ) 
Prereq: Physics II (GIR), 6.100A, and (6.1900 or 6.9010)
Units: 4-0-8
Lecture: TR1 (32-123) Recitation: WF10 (34-301) or WF2 (34-304, 34-303) or WF3 (34-303) or WF10 (34-302) or WF11 (34-301, 36-112) or WF12 (35-310, 36-155) or WF1 (35-308, 36-155, 34-303)

Provides an introduction to the design of digital systems and computer architecture. Emphasizes expressing all hardware designs in a high-level hardware language and synthesizing the designs. Topics include combinational and sequential circuits, instruction set abstraction for programmable hardware, single-cycle and pipelined processor implementations, multi-level memory hierarchies, virtual memory, exceptions and I/O, and parallel systems.
S. Hanono WachmanNo textbook information available"
Communication,Students will enhance their ability to effectively communicate their ideas and findings related to hardware design.,"6.1910 Computation Structures
",1,Fall 2023,Communication,"6.1910 Computation Structures
", ,0,"(, ) 
Prereq: Physics II (GIR), 6.100A, and (6.1900 or 6.9010)
Units: 4-0-8
Lecture: TR1 (32-123) Recitation: WF10 (34-301) or WF2 (34-304, 34-303) or WF3 (34-303) or WF10 (34-302) or WF11 (34-301, 36-112) or WF12 (35-310, 36-155) or WF1 (35-308, 36-155, 34-303)

Provides an introduction to the design of digital systems and computer architecture. Emphasizes expressing all hardware designs in a high-level hardware language and synthesizing the designs. Topics include combinational and sequential circuits, instruction set abstraction for programmable hardware, single-cycle and pipelined processor implementations, multi-level memory hierarchies, virtual memory, exceptions and I/O, and parallel systems.
S. Hanono WachmanNo textbook information available"
Analytical thinking,Students will develop the ability to analyze and evaluate different design options and make informed decisions.,"6.1910 Computation Structures
",1,Fall 2023,Thinking Skills,"6.1910 Computation Structures
", ,0,"(, ) 
Prereq: Physics II (GIR), 6.100A, and (6.1900 or 6.9010)
Units: 4-0-8
Lecture: TR1 (32-123) Recitation: WF10 (34-301) or WF2 (34-304, 34-303) or WF3 (34-303) or WF10 (34-302) or WF11 (34-301, 36-112) or WF12 (35-310, 36-155) or WF1 (35-308, 36-155, 34-303)

Provides an introduction to the design of digital systems and computer architecture. Emphasizes expressing all hardware designs in a high-level hardware language and synthesizing the designs. Topics include combinational and sequential circuits, instruction set abstraction for programmable hardware, single-cycle and pipelined processor implementations, multi-level memory hierarchies, virtual memory, exceptions and I/O, and parallel systems.
S. Hanono WachmanNo textbook information available"
Teamwork,Students will learn to collaborate effectively with others in designing and implementing digital systems.,"6.1910 Computation Structures
",1,Fall 2023,Collaboration and Teamwork,"6.1910 Computation Structures
", ,0,"(, ) 
Prereq: Physics II (GIR), 6.100A, and (6.1900 or 6.9010)
Units: 4-0-8
Lecture: TR1 (32-123) Recitation: WF10 (34-301) or WF2 (34-304, 34-303) or WF3 (34-303) or WF10 (34-302) or WF11 (34-301, 36-112) or WF12 (35-310, 36-155) or WF1 (35-308, 36-155, 34-303)

Provides an introduction to the design of digital systems and computer architecture. Emphasizes expressing all hardware designs in a high-level hardware language and synthesizing the designs. Topics include combinational and sequential circuits, instruction set abstraction for programmable hardware, single-cycle and pipelined processor implementations, multi-level memory hierarchies, virtual memory, exceptions and I/O, and parallel systems.
S. Hanono WachmanNo textbook information available"
Time management,Students will develop the ability to manage their time efficiently to meet project deadlines and complete tasks in a timely manner.,"6.1910 Computation Structures
",1,Fall 2023,Time management,"6.1910 Computation Structures
", ,0,"(, ) 
Prereq: Physics II (GIR), 6.100A, and (6.1900 or 6.9010)
Units: 4-0-8
Lecture: TR1 (32-123) Recitation: WF10 (34-301) or WF2 (34-304, 34-303) or WF3 (34-303) or WF10 (34-302) or WF11 (34-301, 36-112) or WF12 (35-310, 36-155) or WF1 (35-308, 36-155, 34-303)

Provides an introduction to the design of digital systems and computer architecture. Emphasizes expressing all hardware designs in a high-level hardware language and synthesizing the designs. Topics include combinational and sequential circuits, instruction set abstraction for programmable hardware, single-cycle and pipelined processor implementations, multi-level memory hierarchies, virtual memory, exceptions and I/O, and parallel systems.
S. Hanono WachmanNo textbook information available"
Problem-solving,Students will develop the ability to solve complex problems related to computer architecture.,"6.1920 Constructive Computer Architecture
",1,Fall 2023,Problem-solving,"6.1920 Constructive Computer Architecture
", ,0,"()
Prereq: 6.1910
Units: 3-8-1

Illustrates a constructive (as opposed to a descriptive) approach to computer architecture. Topics include combinational and pipelined arithmetic-logic units (ALU), in-order pipelined microarchitectures, branch prediction, blocking and unblocking caches, interrupts, virtual memory support, cache coherence and multicore architectures. Labs in a modern Hardware Design Language (HDL) illustrate various aspects of microprocessor design, culminating in a term project in which students present a multicore design running on an FPGA board.
Staff"
Communication,Students will enhance their communication skills through presentations and discussions of their term projects.,"6.1920 Constructive Computer Architecture
",1,Fall 2023,Communication,"6.1920 Constructive Computer Architecture
", ,0,"()
Prereq: 6.1910
Units: 3-8-1

Illustrates a constructive (as opposed to a descriptive) approach to computer architecture. Topics include combinational and pipelined arithmetic-logic units (ALU), in-order pipelined microarchitectures, branch prediction, blocking and unblocking caches, interrupts, virtual memory support, cache coherence and multicore architectures. Labs in a modern Hardware Design Language (HDL) illustrate various aspects of microprocessor design, culminating in a term project in which students present a multicore design running on an FPGA board.
Staff"
Analytical Thinking,Students will develop the ability to analyze and evaluate different aspects of computer architecture.,"6.1920 Constructive Computer Architecture
",1,Fall 2023,Thinking Skills,"6.1920 Constructive Computer Architecture
", ,0,"()
Prereq: 6.1910
Units: 3-8-1

Illustrates a constructive (as opposed to a descriptive) approach to computer architecture. Topics include combinational and pipelined arithmetic-logic units (ALU), in-order pipelined microarchitectures, branch prediction, blocking and unblocking caches, interrupts, virtual memory support, cache coherence and multicore architectures. Labs in a modern Hardware Design Language (HDL) illustrate various aspects of microprocessor design, culminating in a term project in which students present a multicore design running on an FPGA board.
Staff"
Design Thinking,Students will learn how to apply design thinking principles in the context of computer architecture.,"6.1920 Constructive Computer Architecture
",1,Fall 2023,Thinking Methods,"6.1920 Constructive Computer Architecture
", ,0,"()
Prereq: 6.1910
Units: 3-8-1

Illustrates a constructive (as opposed to a descriptive) approach to computer architecture. Topics include combinational and pipelined arithmetic-logic units (ALU), in-order pipelined microarchitectures, branch prediction, blocking and unblocking caches, interrupts, virtual memory support, cache coherence and multicore architectures. Labs in a modern Hardware Design Language (HDL) illustrate various aspects of microprocessor design, culminating in a term project in which students present a multicore design running on an FPGA board.
Staff"
Collaboration,Students will develop the ability to work effectively in teams while designing and implementing microprocessors.,"6.1920 Constructive Computer Architecture
",1,Fall 2023,Collaboration and Teamwork,"6.1920 Constructive Computer Architecture
", ,0,"()
Prereq: 6.1910
Units: 3-8-1

Illustrates a constructive (as opposed to a descriptive) approach to computer architecture. Topics include combinational and pipelined arithmetic-logic units (ALU), in-order pipelined microarchitectures, branch prediction, blocking and unblocking caches, interrupts, virtual memory support, cache coherence and multicore architectures. Labs in a modern Hardware Design Language (HDL) illustrate various aspects of microprocessor design, culminating in a term project in which students present a multicore design running on an FPGA board.
Staff"
Analytical thinking,Students will develop the ability to analyze complex problems and make informed decisions related to computer architecture.,"6.5900 Computer System Architecture
",1,Fall 2023,Thinking Skills,"6.5900 Computer System Architecture
", ,0,"()
Prereq: 6.1910
Units: 4-0-8
Lecture: MW1-2.30 (32-141) Recitation: F1-2.30 (32-141)

Introduction to the principles underlying modern computer architecture. Emphasizes the relationship among technology, hardware organization, and programming systems in the evolution of computer architecture. Topics include pipelined, out-of-order, and speculative execution; caches, virtual memory and exception handling, superscalar, very long instruction word (VLIW), vector, and multithreaded processors; on-chip networks, memory models, synchronization, and cache coherence protocols for multiprocessors.
D. Sanchez MartinNo textbook information available"
Critical thinking,Students will enhance their ability to evaluate and assess different approaches and solutions in the field of computer architecture.,"6.5900 Computer System Architecture
",1,Fall 2023,Thinking Skills,"6.5900 Computer System Architecture
", ,0,"()
Prereq: 6.1910
Units: 4-0-8
Lecture: MW1-2.30 (32-141) Recitation: F1-2.30 (32-141)

Introduction to the principles underlying modern computer architecture. Emphasizes the relationship among technology, hardware organization, and programming systems in the evolution of computer architecture. Topics include pipelined, out-of-order, and speculative execution; caches, virtual memory and exception handling, superscalar, very long instruction word (VLIW), vector, and multithreaded processors; on-chip networks, memory models, synchronization, and cache coherence protocols for multiprocessors.
D. Sanchez MartinNo textbook information available"
Collaboration,Students will develop the ability to work effectively in teams and collaborate with others on computer architecture projects.,"6.5900 Computer System Architecture
",1,Fall 2023,Collaboration and Teamwork,"6.5900 Computer System Architecture
", ,0,"()
Prereq: 6.1910
Units: 4-0-8
Lecture: MW1-2.30 (32-141) Recitation: F1-2.30 (32-141)

Introduction to the principles underlying modern computer architecture. Emphasizes the relationship among technology, hardware organization, and programming systems in the evolution of computer architecture. Topics include pipelined, out-of-order, and speculative execution; caches, virtual memory and exception handling, superscalar, very long instruction word (VLIW), vector, and multithreaded processors; on-chip networks, memory models, synchronization, and cache coherence protocols for multiprocessors.
D. Sanchez MartinNo textbook information available"
Attention to detail,Students will enhance their ability to pay attention to detail and ensure accuracy in the design and implementation of computer systems.,"6.5900 Computer System Architecture
",1,Fall 2023,Attention to detail,"6.5900 Computer System Architecture
", ,0,"()
Prereq: 6.1910
Units: 4-0-8
Lecture: MW1-2.30 (32-141) Recitation: F1-2.30 (32-141)

Introduction to the principles underlying modern computer architecture. Emphasizes the relationship among technology, hardware organization, and programming systems in the evolution of computer architecture. Topics include pipelined, out-of-order, and speculative execution; caches, virtual memory and exception handling, superscalar, very long instruction word (VLIW), vector, and multithreaded processors; on-chip networks, memory models, synchronization, and cache coherence protocols for multiprocessors.
D. Sanchez MartinNo textbook information available"
Adaptability,Students will develop the ability to adapt to new technologies and advancements in computer architecture.,"6.5900 Computer System Architecture
",1,Fall 2023,Adaptability,"6.5900 Computer System Architecture
", ,0,"()
Prereq: 6.1910
Units: 4-0-8
Lecture: MW1-2.30 (32-141) Recitation: F1-2.30 (32-141)

Introduction to the principles underlying modern computer architecture. Emphasizes the relationship among technology, hardware organization, and programming systems in the evolution of computer architecture. Topics include pipelined, out-of-order, and speculative execution; caches, virtual memory and exception handling, superscalar, very long instruction word (VLIW), vector, and multithreaded processors; on-chip networks, memory models, synchronization, and cache coherence protocols for multiprocessors.
D. Sanchez MartinNo textbook information available"
Problem-solving,Students will develop problem-solving abilities as they work on designing and implementing complex digital systems.,"6.5910 Complex Digital Systems Design
",1,Fall 2023,Problem-solving,"6.5910 Complex Digital Systems Design
", ,0,"()Not offered regularly; consult department
Prereq: 6.1910
Units: 5-5-2

Introduction to the design and implementation of large-scale digital systems using hardware description languages and high-level synthesis tools in conjunction with standard commercial electronic design automation (EDA) tools. Emphasizes modular and robust designs, reusable modules, correctness by construction, architectural exploration, meeting area and timing constraints, and developing functional field-programmable gate array (FPGA) prototypes. Extensive use of CAD tools in weekly labs serve as preparation for a multi-person design project on multi-million gate FPGAs. Enrollment may be limited.
Staff"
Communication,Students will enhance their communication abilities through project presentations and collaboration with team members.,"6.5910 Complex Digital Systems Design
",1,Fall 2023,Communication,"6.5910 Complex Digital Systems Design
", ,0,"()Not offered regularly; consult department
Prereq: 6.1910
Units: 5-5-2

Introduction to the design and implementation of large-scale digital systems using hardware description languages and high-level synthesis tools in conjunction with standard commercial electronic design automation (EDA) tools. Emphasizes modular and robust designs, reusable modules, correctness by construction, architectural exploration, meeting area and timing constraints, and developing functional field-programmable gate array (FPGA) prototypes. Extensive use of CAD tools in weekly labs serve as preparation for a multi-person design project on multi-million gate FPGAs. Enrollment may be limited.
Staff"
Organization,Students will develop the ability to organize their work and manage project timelines effectively.,"6.5910 Complex Digital Systems Design
",1,Fall 2023,Organization,"6.5910 Complex Digital Systems Design
", ,0,"()Not offered regularly; consult department
Prereq: 6.1910
Units: 5-5-2

Introduction to the design and implementation of large-scale digital systems using hardware description languages and high-level synthesis tools in conjunction with standard commercial electronic design automation (EDA) tools. Emphasizes modular and robust designs, reusable modules, correctness by construction, architectural exploration, meeting area and timing constraints, and developing functional field-programmable gate array (FPGA) prototypes. Extensive use of CAD tools in weekly labs serve as preparation for a multi-person design project on multi-million gate FPGAs. Enrollment may be limited.
Staff"
Analytical thinking,Students will enhance their ability to analyze and evaluate different design options for digital systems.,"6.5910 Complex Digital Systems Design
",1,Fall 2023,Thinking Skills,"6.5910 Complex Digital Systems Design
", ,0,"()Not offered regularly; consult department
Prereq: 6.1910
Units: 5-5-2

Introduction to the design and implementation of large-scale digital systems using hardware description languages and high-level synthesis tools in conjunction with standard commercial electronic design automation (EDA) tools. Emphasizes modular and robust designs, reusable modules, correctness by construction, architectural exploration, meeting area and timing constraints, and developing functional field-programmable gate array (FPGA) prototypes. Extensive use of CAD tools in weekly labs serve as preparation for a multi-person design project on multi-million gate FPGAs. Enrollment may be limited.
Staff"
Attention to detail,Students will develop the ability to pay attention to detail in order to ensure the correctness and reliability of their designs.,"6.5910 Complex Digital Systems Design
",1,Fall 2023,Attention to detail,"6.5910 Complex Digital Systems Design
", ,0,"()Not offered regularly; consult department
Prereq: 6.1910
Units: 5-5-2

Introduction to the design and implementation of large-scale digital systems using hardware description languages and high-level synthesis tools in conjunction with standard commercial electronic design automation (EDA) tools. Emphasizes modular and robust designs, reusable modules, correctness by construction, architectural exploration, meeting area and timing constraints, and developing functional field-programmable gate array (FPGA) prototypes. Extensive use of CAD tools in weekly labs serve as preparation for a multi-person design project on multi-million gate FPGAs. Enrollment may be limited.
Staff"
Problem-solving,Students will develop the ability to solve complex problems related to parallel computing.,"6.5920 Parallel Computing
",1,Fall 2023,Problem-solving,"6.5920 Parallel Computing
", ,0,"()Not offered regularly; consult department
Prereq: 6.1910 or permission of instructor
Units: 3-0-9

Introduction to parallel and multicore computer architecture and programming. Topics include the design and implementation of multicore processors; networking, video, continuum, particle and graph applications for multicores; communication and synchronization algorithms and mechanisms; locality in parallel computations; computational models, including shared memory, streams, message passing, and data parallel; multicore mechanisms for synchronization, cache coherence, and multithreading. Performance evaluation of multicores; compilation and runtime systems for parallel computing. Substantial project required.
Staff"
Communication,Students will enhance their ability to effectively communicate their ideas and findings related to parallel computing.,"6.5920 Parallel Computing
",1,Fall 2023,Communication,"6.5920 Parallel Computing
", ,0,"()Not offered regularly; consult department
Prereq: 6.1910 or permission of instructor
Units: 3-0-9

Introduction to parallel and multicore computer architecture and programming. Topics include the design and implementation of multicore processors; networking, video, continuum, particle and graph applications for multicores; communication and synchronization algorithms and mechanisms; locality in parallel computations; computational models, including shared memory, streams, message passing, and data parallel; multicore mechanisms for synchronization, cache coherence, and multithreading. Performance evaluation of multicores; compilation and runtime systems for parallel computing. Substantial project required.
Staff"
Analytical thinking,Students will develop the ability to analyze and evaluate different parallel computing algorithms and mechanisms.,"6.5920 Parallel Computing
",1,Fall 2023,Thinking Skills,"6.5920 Parallel Computing
", ,0,"()Not offered regularly; consult department
Prereq: 6.1910 or permission of instructor
Units: 3-0-9

Introduction to parallel and multicore computer architecture and programming. Topics include the design and implementation of multicore processors; networking, video, continuum, particle and graph applications for multicores; communication and synchronization algorithms and mechanisms; locality in parallel computations; computational models, including shared memory, streams, message passing, and data parallel; multicore mechanisms for synchronization, cache coherence, and multithreading. Performance evaluation of multicores; compilation and runtime systems for parallel computing. Substantial project required.
Staff"
Organization,Students will gain the ability to organize and manage parallel computing projects effectively.,"6.5920 Parallel Computing
",1,Fall 2023,Organization,"6.5920 Parallel Computing
", ,0,"()Not offered regularly; consult department
Prereq: 6.1910 or permission of instructor
Units: 3-0-9

Introduction to parallel and multicore computer architecture and programming. Topics include the design and implementation of multicore processors; networking, video, continuum, particle and graph applications for multicores; communication and synchronization algorithms and mechanisms; locality in parallel computations; computational models, including shared memory, streams, message passing, and data parallel; multicore mechanisms for synchronization, cache coherence, and multithreading. Performance evaluation of multicores; compilation and runtime systems for parallel computing. Substantial project required.
Staff"
Multithreading,Students will learn the ability to implement and manage multithreading in parallel computing systems.,"6.5920 Parallel Computing
",1,Fall 2023,Multithreading,"6.5920 Parallel Computing
", ,0,"()Not offered regularly; consult department
Prereq: 6.1910 or permission of instructor
Units: 3-0-9

Introduction to parallel and multicore computer architecture and programming. Topics include the design and implementation of multicore processors; networking, video, continuum, particle and graph applications for multicores; communication and synchronization algorithms and mechanisms; locality in parallel computations; computational models, including shared memory, streams, message passing, and data parallel; multicore mechanisms for synchronization, cache coherence, and multithreading. Performance evaluation of multicores; compilation and runtime systems for parallel computing. Substantial project required.
Staff"
Problem-solving,Students will develop the ability to solve complex problems related to the design and implementation of hardware architectures for deep learning.,"6.5930 Hardware Architecture for Deep Learning
",1,Fall 2023,Problem-solving,"6.5930 Hardware Architecture for Deep Learning
", ,0,"()
(Subject meets with 6.5931)
Prereq: 6.1910 and (6.3000 or 6.3900)
Units: 3-3-6

Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.
V. Sze, J. Emer"
Communication,Students will enhance their ability to effectively communicate their ideas and findings related to hardware architecture design and optimization.,"6.5930 Hardware Architecture for Deep Learning
",1,Fall 2023,Communication,"6.5930 Hardware Architecture for Deep Learning
", ,0,"()
(Subject meets with 6.5931)
Prereq: 6.1910 and (6.3000 or 6.3900)
Units: 3-3-6

Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.
V. Sze, J. Emer"
Analytical thinking,Students will develop the ability to analyze and evaluate different hardware architectures and optimization techniques for deep learning algorithms.,"6.5930 Hardware Architecture for Deep Learning
",1,Fall 2023,Thinking Skills,"6.5930 Hardware Architecture for Deep Learning
", ,0,"()
(Subject meets with 6.5931)
Prereq: 6.1910 and (6.3000 or 6.3900)
Units: 3-3-6

Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.
V. Sze, J. Emer"
Project management,Students will acquire the ability to manage and execute an open-ended design project related to hardware architecture for deep learning.,"6.5930 Hardware Architecture for Deep Learning
",1,Fall 2023,Project Management and Design Project,"6.5930 Hardware Architecture for Deep Learning
", ,0,"()
(Subject meets with 6.5931)
Prereq: 6.1910 and (6.3000 or 6.3900)
Units: 3-3-6

Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.
V. Sze, J. Emer"
Collaboration,Students will enhance their ability to work collaboratively in labs and projects involving modeling and analysis of hardware architectures.,"6.5930 Hardware Architecture for Deep Learning
",1,Fall 2023,Collaboration and Teamwork,"6.5930 Hardware Architecture for Deep Learning
", ,0,"()
(Subject meets with 6.5931)
Prereq: 6.1910 and (6.3000 or 6.3900)
Units: 3-3-6

Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.
V. Sze, J. Emer"
Problem-solving,Students will develop the ability to solve complex problems related to hardware architecture design and optimization in deep learning systems.,"6.5931 Hardware Architecture for Deep Learning
",1,Fall 2023,Problem-solving,"6.5931 Hardware Architecture for Deep Learning
", ,0,"()
(Subject meets with 6.5930)
Prereq: 6.1910 and (6.3000 or 6.3900)
Units: 3-3-6

Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.
V. Sze, J. Emer"
Communication,Students will enhance their ability to effectively communicate their ideas and findings related to hardware architecture design and optimization.,"6.5931 Hardware Architecture for Deep Learning
",1,Fall 2023,Communication,"6.5931 Hardware Architecture for Deep Learning
", ,0,"()
(Subject meets with 6.5930)
Prereq: 6.1910 and (6.3000 or 6.3900)
Units: 3-3-6

Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.
V. Sze, J. Emer"
Analytical thinking,Students will develop the ability to analyze and evaluate different hardware architecture options for deep learning systems.,"6.5931 Hardware Architecture for Deep Learning
",1,Fall 2023,Thinking Skills,"6.5931 Hardware Architecture for Deep Learning
", ,0,"()
(Subject meets with 6.5930)
Prereq: 6.1910 and (6.3000 or 6.3900)
Units: 3-3-6

Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.
V. Sze, J. Emer"
Teamwork,"Students will have the opportunity to work in teams during labs and design projects, enhancing their ability to collaborate and work effectively in a team setting.","6.5931 Hardware Architecture for Deep Learning
",1,Fall 2023,Collaboration and Teamwork,"6.5931 Hardware Architecture for Deep Learning
", ,0,"()
(Subject meets with 6.5930)
Prereq: 6.1910 and (6.3000 or 6.3900)
Units: 3-3-6

Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.
V. Sze, J. Emer"
Project management,Students will develop the ability to manage and organize their time and resources effectively to complete the open-ended design project.,"6.5931 Hardware Architecture for Deep Learning
",1,Fall 2023,Project Management and Design Project,"6.5931 Hardware Architecture for Deep Learning
", ,0,"()
(Subject meets with 6.5930)
Prereq: 6.1910 and (6.3000 or 6.3900)
Units: 3-3-6

Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.
V. Sze, J. Emer"
Problem-solving,Students will develop the ability to solve complex problems related to deep learning computing techniques and optimization.,"6.5940 TinyML and Efficient Deep Learning Computing
(New)
",1,Fall 2023,Problem-solving,"6.5940 TinyML and Efficient Deep Learning Computing
(New)
", ,0,"()
Prereq: 6.1910 and 6.3900
Units: 3-0-9
Lecture: TR3.30-5 (36-156)

Introduces efficient deep learning computing techniques that enable powerful deep learning applications on resource-constrained devices. Topics include model compression, pruning, quantization, neural architecture search, distributed training, data/model parallellism, gradient compression, on-device fine-tuning. It also introduces application-specific acceleration techniques for video recognition, point cloud, and generative AI (diffusion model, LLM). Students will get hands-on experience accelerating deep learning applications with an open-ended design project.
S. HanNo textbook information available

Artificial Intelligence"
Communication,Students will enhance their ability to effectively communicate their ideas and findings related to deep learning applications and techniques.,"6.5940 TinyML and Efficient Deep Learning Computing
(New)
",1,Fall 2023,Communication,"6.5940 TinyML and Efficient Deep Learning Computing
(New)
", ,0,"()
Prereq: 6.1910 and 6.3900
Units: 3-0-9
Lecture: TR3.30-5 (36-156)

Introduces efficient deep learning computing techniques that enable powerful deep learning applications on resource-constrained devices. Topics include model compression, pruning, quantization, neural architecture search, distributed training, data/model parallellism, gradient compression, on-device fine-tuning. It also introduces application-specific acceleration techniques for video recognition, point cloud, and generative AI (diffusion model, LLM). Students will get hands-on experience accelerating deep learning applications with an open-ended design project.
S. HanNo textbook information available

Artificial Intelligence"
Analytical thinking,Students will develop the ability to analyze and evaluate the performance and efficiency of deep learning models and techniques.,"6.5940 TinyML and Efficient Deep Learning Computing
(New)
",1,Fall 2023,Thinking Skills,"6.5940 TinyML and Efficient Deep Learning Computing
(New)
", ,0,"()
Prereq: 6.1910 and 6.3900
Units: 3-0-9
Lecture: TR3.30-5 (36-156)

Introduces efficient deep learning computing techniques that enable powerful deep learning applications on resource-constrained devices. Topics include model compression, pruning, quantization, neural architecture search, distributed training, data/model parallellism, gradient compression, on-device fine-tuning. It also introduces application-specific acceleration techniques for video recognition, point cloud, and generative AI (diffusion model, LLM). Students will get hands-on experience accelerating deep learning applications with an open-ended design project.
S. HanNo textbook information available

Artificial Intelligence"
Design project,Students will gain the ability to design and implement deep learning applications with a focus on efficiency and resource-constrained devices.,"6.5940 TinyML and Efficient Deep Learning Computing
(New)
",1,Fall 2023,Project Management and Design Project,"6.5940 TinyML and Efficient Deep Learning Computing
(New)
", ,0,"()
Prereq: 6.1910 and 6.3900
Units: 3-0-9
Lecture: TR3.30-5 (36-156)

Introduces efficient deep learning computing techniques that enable powerful deep learning applications on resource-constrained devices. Topics include model compression, pruning, quantization, neural architecture search, distributed training, data/model parallellism, gradient compression, on-device fine-tuning. It also introduces application-specific acceleration techniques for video recognition, point cloud, and generative AI (diffusion model, LLM). Students will get hands-on experience accelerating deep learning applications with an open-ended design project.
S. HanNo textbook information available

Artificial Intelligence"
Technical skills,Students will acquire technical skills in implementing and optimizing deep learning models using efficient computing techniques.,"6.5940 TinyML and Efficient Deep Learning Computing
(New)
",1,Fall 2023,Technical Skills and Proficiency,"6.5940 TinyML and Efficient Deep Learning Computing
(New)
", ,0,"()
Prereq: 6.1910 and 6.3900
Units: 3-0-9
Lecture: TR3.30-5 (36-156)

Introduces efficient deep learning computing techniques that enable powerful deep learning applications on resource-constrained devices. Topics include model compression, pruning, quantization, neural architecture search, distributed training, data/model parallellism, gradient compression, on-device fine-tuning. It also introduces application-specific acceleration techniques for video recognition, point cloud, and generative AI (diffusion model, LLM). Students will get hands-on experience accelerating deep learning applications with an open-ended design project.
S. HanNo textbook information available

Artificial Intelligence"
Problem-solving,Students will enhance their ability to solve complex computational problems using different problem-solving paradigms and techniques.,"6.4100 Artificial Intelligence
",1,Fall 2023,Problem-solving,"6.4100 Artificial Intelligence
", ,0,"()Not offered regularly; consult department
Prereq: 6.100A
Units: 4-3-5

Introduces representations, methods, and architectures used to build applications and to account for human intelligence from a computational point of view. Covers applications of rule chaining, constraint propagation, constrained search, inheritance, statistical inference, and other problem-solving paradigms. Also addresses applications of identification trees, neural nets, genetic algorithms, support-vector machines, boosting, and other learning paradigms. Considers what separates human intelligence from that of other animals.
Consult Department"
Communication,Students will develop the ability to effectively communicate their ideas and findings related to artificial intelligence and computational problem-solving.,"6.4100 Artificial Intelligence
",1,Fall 2023,Communication,"6.4100 Artificial Intelligence
", ,0,"()Not offered regularly; consult department
Prereq: 6.100A
Units: 4-3-5

Introduces representations, methods, and architectures used to build applications and to account for human intelligence from a computational point of view. Covers applications of rule chaining, constraint propagation, constrained search, inheritance, statistical inference, and other problem-solving paradigms. Also addresses applications of identification trees, neural nets, genetic algorithms, support-vector machines, boosting, and other learning paradigms. Considers what separates human intelligence from that of other animals.
Consult Department"
Analytical thinking,Students will improve their ability to analyze and evaluate different approaches and algorithms used in artificial intelligence and computational problem-solving.,"6.4100 Artificial Intelligence
",1,Fall 2023,Thinking Skills,"6.4100 Artificial Intelligence
", ,0,"()Not offered regularly; consult department
Prereq: 6.100A
Units: 4-3-5

Introduces representations, methods, and architectures used to build applications and to account for human intelligence from a computational point of view. Covers applications of rule chaining, constraint propagation, constrained search, inheritance, statistical inference, and other problem-solving paradigms. Also addresses applications of identification trees, neural nets, genetic algorithms, support-vector machines, boosting, and other learning paradigms. Considers what separates human intelligence from that of other animals.
Consult Department"
Research skills,Students will develop the ability to conduct research and gather relevant information in the field of artificial intelligence.,"6.4100 Artificial Intelligence
",1,Fall 2023,Skills in Research and Technical Skills,"6.4100 Artificial Intelligence
", ,0,"()Not offered regularly; consult department
Prereq: 6.100A
Units: 4-3-5

Introduces representations, methods, and architectures used to build applications and to account for human intelligence from a computational point of view. Covers applications of rule chaining, constraint propagation, constrained search, inheritance, statistical inference, and other problem-solving paradigms. Also addresses applications of identification trees, neural nets, genetic algorithms, support-vector machines, boosting, and other learning paradigms. Considers what separates human intelligence from that of other animals.
Consult Department"
Critical thinking,Students will enhance their ability to think critically and evaluate the strengths and limitations of different computational approaches and paradigms.,"6.4100 Artificial Intelligence
",1,Fall 2023,Thinking Skills,"6.4100 Artificial Intelligence
", ,0,"()Not offered regularly; consult department
Prereq: 6.100A
Units: 4-3-5

Introduces representations, methods, and architectures used to build applications and to account for human intelligence from a computational point of view. Covers applications of rule chaining, constraint propagation, constrained search, inheritance, statistical inference, and other problem-solving paradigms. Also addresses applications of identification trees, neural nets, genetic algorithms, support-vector machines, boosting, and other learning paradigms. Considers what separates human intelligence from that of other animals.
Consult Department"
Analytical thinking,Students will enhance their ability to analyze complex problems and develop effective solutions.,"6.4102 Artificial Intelligence
",1,Fall 2023,Thinking Skills,"6.4102 Artificial Intelligence
", ,0,"()Not offered regularly; consult department
Prereq: 6.100A
Units: 4-3-5

Introduces representations, methods, and architectures used to build applications and to account for human intelligence from a computational point of view. Covers applications of rule chaining, constraint propagation, constrained search, inheritance, statistical inference, and other problem-solving paradigms. Also addresses applications of identification trees, neural nets, genetic algorithms, support-vector machines, boosting, and other learning paradigms. Considers what separates human intelligence from that of other animals. Students taking  graduate version complete additional assignments.
Consult Department"
Communication,Students will improve their ability to communicate complex ideas and concepts related to artificial intelligence.,"6.4102 Artificial Intelligence
",1,Fall 2023,Communication,"6.4102 Artificial Intelligence
", ,0,"()Not offered regularly; consult department
Prereq: 6.100A
Units: 4-3-5

Introduces representations, methods, and architectures used to build applications and to account for human intelligence from a computational point of view. Covers applications of rule chaining, constraint propagation, constrained search, inheritance, statistical inference, and other problem-solving paradigms. Also addresses applications of identification trees, neural nets, genetic algorithms, support-vector machines, boosting, and other learning paradigms. Considers what separates human intelligence from that of other animals. Students taking  graduate version complete additional assignments.
Consult Department"
Problem-solving,Students will develop the ability to identify and solve problems using artificial intelligence techniques.,"6.4102 Artificial Intelligence
",1,Fall 2023,Problem-solving,"6.4102 Artificial Intelligence
", ,0,"()Not offered regularly; consult department
Prereq: 6.100A
Units: 4-3-5

Introduces representations, methods, and architectures used to build applications and to account for human intelligence from a computational point of view. Covers applications of rule chaining, constraint propagation, constrained search, inheritance, statistical inference, and other problem-solving paradigms. Also addresses applications of identification trees, neural nets, genetic algorithms, support-vector machines, boosting, and other learning paradigms. Considers what separates human intelligence from that of other animals. Students taking  graduate version complete additional assignments.
Consult Department"
Critical thinking,Students will enhance their ability to think critically and evaluate different approaches to problem-solving.,"6.4102 Artificial Intelligence
",1,Fall 2023,Thinking Skills,"6.4102 Artificial Intelligence
", ,0,"()Not offered regularly; consult department
Prereq: 6.100A
Units: 4-3-5

Introduces representations, methods, and architectures used to build applications and to account for human intelligence from a computational point of view. Covers applications of rule chaining, constraint propagation, constrained search, inheritance, statistical inference, and other problem-solving paradigms. Also addresses applications of identification trees, neural nets, genetic algorithms, support-vector machines, boosting, and other learning paradigms. Considers what separates human intelligence from that of other animals. Students taking  graduate version complete additional assignments.
Consult Department"
Computational reasoning,Students will develop the ability to reason and make decisions based on computational principles and algorithms.,"6.4102 Artificial Intelligence
",1,Fall 2023,Reasoning and Problem Solving,"6.4102 Artificial Intelligence
", ,0,"()Not offered regularly; consult department
Prereq: 6.100A
Units: 4-3-5

Introduces representations, methods, and architectures used to build applications and to account for human intelligence from a computational point of view. Covers applications of rule chaining, constraint propagation, constrained search, inheritance, statistical inference, and other problem-solving paradigms. Also addresses applications of identification trees, neural nets, genetic algorithms, support-vector machines, boosting, and other learning paradigms. Considers what separates human intelligence from that of other animals. Students taking  graduate version complete additional assignments.
Consult Department"
Problem-solving,Students will develop the ability to solve complex problems in artificial intelligence by applying the learned skills and knowledge.,"6.4110 Representation, Inference, and Reasoning in AI
",1,Fall 2023,Problem-solving,"6.4110 Representation, Inference, and Reasoning in AI
", ,0,"()
(Subject meets with 16.420)
Prereq: (16.09 and 16.410) or (6.1010, 6.1210, and (6.3700 or 6.3800))
Units: 3-0-9
Lecture: MW9.30-11 (4-370) +final

An introduction to representations and algorithms for artificial intelligence. Topics covered include: constraint satisfaction in discrete and continuous problems, logical representation and inference, Monte Carlo tree search, probabilistic graphical models and inference, planning in discrete and continuous deterministic and probabilistic models including MDPs and POMDPs.
L. KaelblingTextbooks (Fall 2023)"
Analytical thinking,Students will enhance their ability to analyze and evaluate different approaches and algorithms in AI.,"6.4110 Representation, Inference, and Reasoning in AI
",1,Fall 2023,Thinking Skills,"6.4110 Representation, Inference, and Reasoning in AI
", ,0,"()
(Subject meets with 16.420)
Prereq: (16.09 and 16.410) or (6.1010, 6.1210, and (6.3700 or 6.3800))
Units: 3-0-9
Lecture: MW9.30-11 (4-370) +final

An introduction to representations and algorithms for artificial intelligence. Topics covered include: constraint satisfaction in discrete and continuous problems, logical representation and inference, Monte Carlo tree search, probabilistic graphical models and inference, planning in discrete and continuous deterministic and probabilistic models including MDPs and POMDPs.
L. KaelblingTextbooks (Fall 2023)"
Critical reasoning,Students will develop the ability to critically evaluate and reason about different representations and algorithms in AI.,"6.4110 Representation, Inference, and Reasoning in AI
",1,Fall 2023,Reasoning and Problem Solving,"6.4110 Representation, Inference, and Reasoning in AI
", ,0,"()
(Subject meets with 16.420)
Prereq: (16.09 and 16.410) or (6.1010, 6.1210, and (6.3700 or 6.3800))
Units: 3-0-9
Lecture: MW9.30-11 (4-370) +final

An introduction to representations and algorithms for artificial intelligence. Topics covered include: constraint satisfaction in discrete and continuous problems, logical representation and inference, Monte Carlo tree search, probabilistic graphical models and inference, planning in discrete and continuous deterministic and probabilistic models including MDPs and POMDPs.
L. KaelblingTextbooks (Fall 2023)"
Communication,Students will enhance their ability to effectively communicate their ideas and findings related to AI.,"6.4110 Representation, Inference, and Reasoning in AI
",1,Fall 2023,Communication,"6.4110 Representation, Inference, and Reasoning in AI
", ,0,"()
(Subject meets with 16.420)
Prereq: (16.09 and 16.410) or (6.1010, 6.1210, and (6.3700 or 6.3800))
Units: 3-0-9
Lecture: MW9.30-11 (4-370) +final

An introduction to representations and algorithms for artificial intelligence. Topics covered include: constraint satisfaction in discrete and continuous problems, logical representation and inference, Monte Carlo tree search, probabilistic graphical models and inference, planning in discrete and continuous deterministic and probabilistic models including MDPs and POMDPs.
L. KaelblingTextbooks (Fall 2023)"
Collaboration,Students will develop the ability to work collaboratively in teams to solve AI problems and projects.,"6.4110 Representation, Inference, and Reasoning in AI
",1,Fall 2023,Collaboration and Teamwork,"6.4110 Representation, Inference, and Reasoning in AI
", ,0,"()
(Subject meets with 16.420)
Prereq: (16.09 and 16.410) or (6.1010, 6.1210, and (6.3700 or 6.3800))
Units: 3-0-9
Lecture: MW9.30-11 (4-370) +final

An introduction to representations and algorithms for artificial intelligence. Topics covered include: constraint satisfaction in discrete and continuous problems, logical representation and inference, Monte Carlo tree search, probabilistic graphical models and inference, planning in discrete and continuous deterministic and probabilistic models including MDPs and POMDPs.
L. KaelblingTextbooks (Fall 2023)"
Problem-solving,Students will develop the ability to apply computational techniques and models to solve problems related to cognition and learning.,"6.4120[J] Computational Cognitive Science
",1,Fall 2023,Problem-solving,"6.4120[J] Computational Cognitive Science
", ,0,"()
(Same subject as 9.66[J])(Subject meets with 9.660)
Prereq: 6.3700, 6.3800, 9.40, 18.05, 6.3900, or permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (46-3002)

Introduction to computational theories of human cognition. Focus on principles of inductive learning and inference, and the representation of knowledge. Computational frameworks covered include Bayesian and hierarchical Bayesian models; probabilistic graphical models; nonparametric statistical models and the Bayesian Occam's razor; sampling algorithms for approximate learning and inference; and probabilistic models defined over structured representations such as first-order logic, grammars, or relational schemas. Applications to understanding core aspects of cognition, such as concept learning and categorization, causal reasoning, theory formation, language acquisition, and social inference. Graduate students complete a final project.
J. TenenbaumNo textbook information available"
Critical thinking,Students will enhance their ability to think critically and evaluate different computational approaches to understanding human cognition.,"6.4120[J] Computational Cognitive Science
",1,Fall 2023,Thinking Skills,"6.4120[J] Computational Cognitive Science
", ,0,"()
(Same subject as 9.66[J])(Subject meets with 9.660)
Prereq: 6.3700, 6.3800, 9.40, 18.05, 6.3900, or permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (46-3002)

Introduction to computational theories of human cognition. Focus on principles of inductive learning and inference, and the representation of knowledge. Computational frameworks covered include Bayesian and hierarchical Bayesian models; probabilistic graphical models; nonparametric statistical models and the Bayesian Occam's razor; sampling algorithms for approximate learning and inference; and probabilistic models defined over structured representations such as first-order logic, grammars, or relational schemas. Applications to understanding core aspects of cognition, such as concept learning and categorization, causal reasoning, theory formation, language acquisition, and social inference. Graduate students complete a final project.
J. TenenbaumNo textbook information available"
Analytical reasoning,Students will develop the ability to analyze and reason about complex systems and models.,"6.4120[J] Computational Cognitive Science
",1,Fall 2023,Thinking Skills,"6.4120[J] Computational Cognitive Science
", ,0,"()
(Same subject as 9.66[J])(Subject meets with 9.660)
Prereq: 6.3700, 6.3800, 9.40, 18.05, 6.3900, or permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (46-3002)

Introduction to computational theories of human cognition. Focus on principles of inductive learning and inference, and the representation of knowledge. Computational frameworks covered include Bayesian and hierarchical Bayesian models; probabilistic graphical models; nonparametric statistical models and the Bayesian Occam's razor; sampling algorithms for approximate learning and inference; and probabilistic models defined over structured representations such as first-order logic, grammars, or relational schemas. Applications to understanding core aspects of cognition, such as concept learning and categorization, causal reasoning, theory formation, language acquisition, and social inference. Graduate students complete a final project.
J. TenenbaumNo textbook information available"
Communication,"Students will enhance their ability to communicate their ideas and findings effectively, both verbally and in written form.","6.4120[J] Computational Cognitive Science
",1,Fall 2023,Communication,"6.4120[J] Computational Cognitive Science
", ,0,"()
(Same subject as 9.66[J])(Subject meets with 9.660)
Prereq: 6.3700, 6.3800, 9.40, 18.05, 6.3900, or permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (46-3002)

Introduction to computational theories of human cognition. Focus on principles of inductive learning and inference, and the representation of knowledge. Computational frameworks covered include Bayesian and hierarchical Bayesian models; probabilistic graphical models; nonparametric statistical models and the Bayesian Occam's razor; sampling algorithms for approximate learning and inference; and probabilistic models defined over structured representations such as first-order logic, grammars, or relational schemas. Applications to understanding core aspects of cognition, such as concept learning and categorization, causal reasoning, theory formation, language acquisition, and social inference. Graduate students complete a final project.
J. TenenbaumNo textbook information available"
Project management,"Students will develop the ability to plan and manage a final project, demonstrating their understanding of computational cognitive science concepts.","6.4120[J] Computational Cognitive Science
",1,Fall 2023,Project Management and Design Project,"6.4120[J] Computational Cognitive Science
", ,0,"()
(Same subject as 9.66[J])(Subject meets with 9.660)
Prereq: 6.3700, 6.3800, 9.40, 18.05, 6.3900, or permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (46-3002)

Introduction to computational theories of human cognition. Focus on principles of inductive learning and inference, and the representation of knowledge. Computational frameworks covered include Bayesian and hierarchical Bayesian models; probabilistic graphical models; nonparametric statistical models and the Bayesian Occam's razor; sampling algorithms for approximate learning and inference; and probabilistic models defined over structured representations such as first-order logic, grammars, or relational schemas. Applications to understanding core aspects of cognition, such as concept learning and categorization, causal reasoning, theory formation, language acquisition, and social inference. Graduate students complete a final project.
J. TenenbaumNo textbook information available"
Problem-solving,Students will develop the ability to solve complex problems related to autonomy and decision-making using programming and AI techniques.,"6.4130[J] Principles of Autonomy and Decision Making
",1,Fall 2023,Problem-solving,"6.4130[J] Principles of Autonomy and Decision Making
", ,0,"()
(Same subject as 16.410[J])(Subject meets with 6.4132[J], 16.413[J])
Prereq: 6.100B or 6.9080
Units: 4-0-8
Lecture: MW9.30-11 (32-141) Recitation: F10 (33-319) or F3 (33-319) +final

Surveys decision making methods used to create highly autonomous systems and decision aids. Applies models, principles and algorithms taken from artificial intelligence and operations research. Focuses on planning as state-space search, including uninformed, informed and stochastic search, activity and motion planning, probabilistic and adversarial planning, Markov models and decision processes, and Bayesian filtering. Also emphasizes planning with real-world constraints using constraint programming. Includes methods for satisfiability and optimization of logical, temporal and finite domain constraints, graphical models, and linear and integer programs, as well as methods for search, inference, and conflict-learning. Students taking graduate version complete additional assignments.
B.C. WilliamsNo textbook information available"
Communication,Students will enhance their communication skills through assignments and projects that require clear explanation and presentation of their work.,"6.4130[J] Principles of Autonomy and Decision Making
",1,Fall 2023,Communication,"6.4130[J] Principles of Autonomy and Decision Making
", ,0,"()
(Same subject as 16.410[J])(Subject meets with 6.4132[J], 16.413[J])
Prereq: 6.100B or 6.9080
Units: 4-0-8
Lecture: MW9.30-11 (32-141) Recitation: F10 (33-319) or F3 (33-319) +final

Surveys decision making methods used to create highly autonomous systems and decision aids. Applies models, principles and algorithms taken from artificial intelligence and operations research. Focuses on planning as state-space search, including uninformed, informed and stochastic search, activity and motion planning, probabilistic and adversarial planning, Markov models and decision processes, and Bayesian filtering. Also emphasizes planning with real-world constraints using constraint programming. Includes methods for satisfiability and optimization of logical, temporal and finite domain constraints, graphical models, and linear and integer programs, as well as methods for search, inference, and conflict-learning. Students taking graduate version complete additional assignments.
B.C. WilliamsNo textbook information available"
Problem-solving,Students will develop the ability to solve complex problems related to autonomy and decision making using programming and analytical skills.,"6.4132[J] Principles of Autonomy and Decision Making
",1,Fall 2023,Problem-solving,"6.4132[J] Principles of Autonomy and Decision Making
", ,0,"()
(Same subject as 16.413[J])(Subject meets with 6.4130[J], 16.410[J])
Prereq: 6.100B, 6.9080, or permission of instructor
Units: 3-0-9
Lecture: MW9.30-11 (32-141) +final

Surveys decision making methods used to create highly autonomous systems and decision aids. Applies models, principles and algorithms taken from artificial intelligence and operations research. Focuses on planning as state-space search, including uninformed, informed and stochastic search, activity and motion planning, probabilistic and adversarial planning, Markov models and decision processes, and Bayesian filtering. Also emphasizes planning with real-world constraints using constraint programming. Includes methods for satisfiability and optimization of logical, temporal and finite domain constraints, graphical models, and linear and integer programs, as well as methods for search, inference, and conflict-learning. Students taking graduate version complete additional assignments.
B.C. WilliamsNo textbook information available"
Communication,Students will enhance their communication skills through assignments and projects that require presenting and explaining their solutions and findings.,"6.4132[J] Principles of Autonomy and Decision Making
",1,Fall 2023,Communication,"6.4132[J] Principles of Autonomy and Decision Making
", ,0,"()
(Same subject as 16.413[J])(Subject meets with 6.4130[J], 16.410[J])
Prereq: 6.100B, 6.9080, or permission of instructor
Units: 3-0-9
Lecture: MW9.30-11 (32-141) +final

Surveys decision making methods used to create highly autonomous systems and decision aids. Applies models, principles and algorithms taken from artificial intelligence and operations research. Focuses on planning as state-space search, including uninformed, informed and stochastic search, activity and motion planning, probabilistic and adversarial planning, Markov models and decision processes, and Bayesian filtering. Also emphasizes planning with real-world constraints using constraint programming. Includes methods for satisfiability and optimization of logical, temporal and finite domain constraints, graphical models, and linear and integer programs, as well as methods for search, inference, and conflict-learning. Students taking graduate version complete additional assignments.
B.C. WilliamsNo textbook information available"
Problem-solving,Students will develop the ability to solve complex problems related to cognitive robotics.,"6.8110[J] Cognitive Robotics
",1,Fall 2023,Problem-solving,"6.8110[J] Cognitive Robotics
", ,0,"()
(Same subject as 16.412[J])
Prereq: (6.4100 or 16.413) and (6.1200, 6.3700, or 16.09)
Units: 3-0-9

Highlights algorithms and paradigms for creating human-robot systems that act intelligently and robustly, by reasoning from models of themselves, their counterparts and their world. Examples include space and undersea explorers, cooperative vehicles, manufacturing robot teams and everyday embedded devices. Themes include architectures for goal-directed systems; decision-theoretic programming and robust execution; state-space programming, activity and path planning; risk-bounded programming and risk-bounded planners; self-monitoring and self-diagnosing systems, and human-robot collaboration. Student teams explore recent advances in cognitive robots through delivery of advanced lectures and final projects, in support of a class-wide grand challenge. Enrollment may be limited.
B. C. Williams

Robotics"
Communication,Students will enhance their ability to effectively communicate their ideas and findings in the field of cognitive robotics.,"6.8110[J] Cognitive Robotics
",1,Fall 2023,Communication,"6.8110[J] Cognitive Robotics
", ,0,"()
(Same subject as 16.412[J])
Prereq: (6.4100 or 16.413) and (6.1200, 6.3700, or 16.09)
Units: 3-0-9

Highlights algorithms and paradigms for creating human-robot systems that act intelligently and robustly, by reasoning from models of themselves, their counterparts and their world. Examples include space and undersea explorers, cooperative vehicles, manufacturing robot teams and everyday embedded devices. Themes include architectures for goal-directed systems; decision-theoretic programming and robust execution; state-space programming, activity and path planning; risk-bounded programming and risk-bounded planners; self-monitoring and self-diagnosing systems, and human-robot collaboration. Student teams explore recent advances in cognitive robots through delivery of advanced lectures and final projects, in support of a class-wide grand challenge. Enrollment may be limited.
B. C. Williams

Robotics"
Analytical thinking,Students will develop the ability to analyze and evaluate different approaches and algorithms in cognitive robotics.,"6.8110[J] Cognitive Robotics
",1,Fall 2023,Thinking Skills,"6.8110[J] Cognitive Robotics
", ,0,"()
(Same subject as 16.412[J])
Prereq: (6.4100 or 16.413) and (6.1200, 6.3700, or 16.09)
Units: 3-0-9

Highlights algorithms and paradigms for creating human-robot systems that act intelligently and robustly, by reasoning from models of themselves, their counterparts and their world. Examples include space and undersea explorers, cooperative vehicles, manufacturing robot teams and everyday embedded devices. Themes include architectures for goal-directed systems; decision-theoretic programming and robust execution; state-space programming, activity and path planning; risk-bounded programming and risk-bounded planners; self-monitoring and self-diagnosing systems, and human-robot collaboration. Student teams explore recent advances in cognitive robots through delivery of advanced lectures and final projects, in support of a class-wide grand challenge. Enrollment may be limited.
B. C. Williams

Robotics"
Teamwork,Students will learn how to work effectively in teams to tackle challenges in cognitive robotics.,"6.8110[J] Cognitive Robotics
",1,Fall 2023,Collaboration and Teamwork,"6.8110[J] Cognitive Robotics
", ,0,"()
(Same subject as 16.412[J])
Prereq: (6.4100 or 16.413) and (6.1200, 6.3700, or 16.09)
Units: 3-0-9

Highlights algorithms and paradigms for creating human-robot systems that act intelligently and robustly, by reasoning from models of themselves, their counterparts and their world. Examples include space and undersea explorers, cooperative vehicles, manufacturing robot teams and everyday embedded devices. Themes include architectures for goal-directed systems; decision-theoretic programming and robust execution; state-space programming, activity and path planning; risk-bounded programming and risk-bounded planners; self-monitoring and self-diagnosing systems, and human-robot collaboration. Student teams explore recent advances in cognitive robots through delivery of advanced lectures and final projects, in support of a class-wide grand challenge. Enrollment may be limited.
B. C. Williams

Robotics"
Adaptability,Students will develop the ability to adapt to new technologies and advancements in the field of cognitive robotics.,"6.8110[J] Cognitive Robotics
",1,Fall 2023,Adaptability,"6.8110[J] Cognitive Robotics
", ,0,"()
(Same subject as 16.412[J])
Prereq: (6.4100 or 16.413) and (6.1200, 6.3700, or 16.09)
Units: 3-0-9

Highlights algorithms and paradigms for creating human-robot systems that act intelligently and robustly, by reasoning from models of themselves, their counterparts and their world. Examples include space and undersea explorers, cooperative vehicles, manufacturing robot teams and everyday embedded devices. Themes include architectures for goal-directed systems; decision-theoretic programming and robust execution; state-space programming, activity and path planning; risk-bounded programming and risk-bounded planners; self-monitoring and self-diagnosing systems, and human-robot collaboration. Student teams explore recent advances in cognitive robots through delivery of advanced lectures and final projects, in support of a class-wide grand challenge. Enrollment may be limited.
B. C. Williams

Robotics"
Problem-solving,Students will develop the ability to solve complex problems related to robotics and autonomous systems.,"6.4200[J] Robotics: Science and Systems
",1,Fall 2023,Problem-solving,"6.4200[J] Robotics: Science and Systems
", ,0,"() 
(Same subject as 2.124[J], 16.405[J])
Prereq: ((1.00 or 6.100A) and (2.003, 6.1010, 6.1210, or 16.06)) or permission of instructor
Units: 2-6-4

Presents concepts, principles, and algorithmic foundations for robots and autonomous vehicles operating in the physical world. Topics include sensing, kinematics and dynamics, state estimation, computer vision, perception, learning, control, motion planning, and embedded system development. Students design and implement advanced algorithms on complex robotic platforms capable of agile autonomous navigation and real-time interaction with the physical word. Students engage in extensive written and oral communication exercises. Enrollment limited.
Staff"
Communication,Students will enhance their ability to effectively communicate their ideas and findings related to robotics and autonomous systems.,"6.4200[J] Robotics: Science and Systems
",1,Fall 2023,Communication,"6.4200[J] Robotics: Science and Systems
", ,0,"() 
(Same subject as 2.124[J], 16.405[J])
Prereq: ((1.00 or 6.100A) and (2.003, 6.1010, 6.1210, or 16.06)) or permission of instructor
Units: 2-6-4

Presents concepts, principles, and algorithmic foundations for robots and autonomous vehicles operating in the physical world. Topics include sensing, kinematics and dynamics, state estimation, computer vision, perception, learning, control, motion planning, and embedded system development. Students design and implement advanced algorithms on complex robotic platforms capable of agile autonomous navigation and real-time interaction with the physical word. Students engage in extensive written and oral communication exercises. Enrollment limited.
Staff"
Planning,Students will develop the ability to plan and strategize the actions of robots and autonomous vehicles.,"6.4200[J] Robotics: Science and Systems
",1,Fall 2023,Planning,"6.4200[J] Robotics: Science and Systems
", ,0,"() 
(Same subject as 2.124[J], 16.405[J])
Prereq: ((1.00 or 6.100A) and (2.003, 6.1010, 6.1210, or 16.06)) or permission of instructor
Units: 2-6-4

Presents concepts, principles, and algorithmic foundations for robots and autonomous vehicles operating in the physical world. Topics include sensing, kinematics and dynamics, state estimation, computer vision, perception, learning, control, motion planning, and embedded system development. Students design and implement advanced algorithms on complex robotic platforms capable of agile autonomous navigation and real-time interaction with the physical word. Students engage in extensive written and oral communication exercises. Enrollment limited.
Staff"
Analytical thinking,Students will enhance their ability to analyze and evaluate different approaches and algorithms for robotics and autonomous systems.,"6.4200[J] Robotics: Science and Systems
",1,Fall 2023,Thinking Skills,"6.4200[J] Robotics: Science and Systems
", ,0,"() 
(Same subject as 2.124[J], 16.405[J])
Prereq: ((1.00 or 6.100A) and (2.003, 6.1010, 6.1210, or 16.06)) or permission of instructor
Units: 2-6-4

Presents concepts, principles, and algorithmic foundations for robots and autonomous vehicles operating in the physical world. Topics include sensing, kinematics and dynamics, state estimation, computer vision, perception, learning, control, motion planning, and embedded system development. Students design and implement advanced algorithms on complex robotic platforms capable of agile autonomous navigation and real-time interaction with the physical word. Students engage in extensive written and oral communication exercises. Enrollment limited.
Staff"
Teamwork,Students will develop the ability to work collaboratively in designing and implementing advanced algorithms for robotics and autonomous systems.,"6.4200[J] Robotics: Science and Systems
",1,Fall 2023,Collaboration and Teamwork,"6.4200[J] Robotics: Science and Systems
", ,0,"() 
(Same subject as 2.124[J], 16.405[J])
Prereq: ((1.00 or 6.100A) and (2.003, 6.1010, 6.1210, or 16.06)) or permission of instructor
Units: 2-6-4

Presents concepts, principles, and algorithmic foundations for robots and autonomous vehicles operating in the physical world. Topics include sensing, kinematics and dynamics, state estimation, computer vision, perception, learning, control, motion planning, and embedded system development. Students design and implement advanced algorithms on complex robotic platforms capable of agile autonomous navigation and real-time interaction with the physical word. Students engage in extensive written and oral communication exercises. Enrollment limited.
Staff"
Written and oral communication,"Students will engage in extensive written and oral communication exercises. This ability is selected because it involves the capacity to express ideas and concepts effectively, both verbally and in writing.","6.4210 Robotic Manipulation
",1,Fall 2023,Communication Methods,"6.4210 Robotic Manipulation
", ,0,"()
(Subject meets with 6.4212)
Prereq: (6.100A and 6.3900) or permission of instructor
Units: 4-2-9
http://manipulation.mit.edu
Lecture: TR2.30-4 (E25-111) Lab: F1 (4-159) or F2 (4-159) or F1 (4-153)

Introduces the fundamental algorithmic approaches for creating robot systems that can autonomously manipulate physical objects in unstructured environments such as homes and restaurants. Topics include perception (including approaches based on deep learning and approaches based on 3D geometry), planning (robot kinematics and trajectory generation, collision-free motion planning, task-and-motion planning, and planning under uncertainty), as well as dynamics and control (both model-based and learning-based). Students taking graduate version complete additional assignments. Students engage in extensive written and oral communication exercises.
R. TedrakeNo textbook information available"
Problem-solving,Students will develop problem-solving abilities as they work on programming projects in the course. This ability is selected because it involves the capacity to analyze and solve complex problems related to robot manipulation tasks.,"6.4210 Robotic Manipulation
",1,Fall 2023,Problem-solving,"6.4210 Robotic Manipulation
", ,0,"()
(Subject meets with 6.4212)
Prereq: (6.100A and 6.3900) or permission of instructor
Units: 4-2-9
http://manipulation.mit.edu
Lecture: TR2.30-4 (E25-111) Lab: F1 (4-159) or F2 (4-159) or F1 (4-153)

Introduces the fundamental algorithmic approaches for creating robot systems that can autonomously manipulate physical objects in unstructured environments such as homes and restaurants. Topics include perception (including approaches based on deep learning and approaches based on 3D geometry), planning (robot kinematics and trajectory generation, collision-free motion planning, task-and-motion planning, and planning under uncertainty), as well as dynamics and control (both model-based and learning-based). Students taking graduate version complete additional assignments. Students engage in extensive written and oral communication exercises.
R. TedrakeNo textbook information available"
Problem-solving,Students will enhance their problem-solving abilities as they work on assignments and projects related to robotic manipulation.,"6.4212 Robotic Manipulation
",1,Fall 2023,Problem-solving,"6.4212 Robotic Manipulation
", ,0,"()
(Subject meets with 6.4210)
Prereq: (6.100A and 6.3900) or permission of instructor
Units: 3-0-9
http://manipulation.mit.edu
Lecture: TR2.30-4 (E25-111)

Introduces the fundamental algorithmic approaches for creating robot systems that can autonomously manipulate physical objects in unstructured environments such as homes and restaurants. Topics include perception (including approaches based on deep learning and approaches based on 3D geometry), planning (robot kinematics and trajectory generation, collision-free motion planning, task-and-motion planning, and planning under uncertainty), as well as dynamics and control (both model-based and learning-based. Students taking graduate version complete additional assignments.
R. L. TedrakeNo textbook information available"
Communication,Students will develop their communication skills through discussions and presentations related to the course material.,"6.4212 Robotic Manipulation
",1,Fall 2023,Communication,"6.4212 Robotic Manipulation
", ,0,"()
(Subject meets with 6.4210)
Prereq: (6.100A and 6.3900) or permission of instructor
Units: 3-0-9
http://manipulation.mit.edu
Lecture: TR2.30-4 (E25-111)

Introduces the fundamental algorithmic approaches for creating robot systems that can autonomously manipulate physical objects in unstructured environments such as homes and restaurants. Topics include perception (including approaches based on deep learning and approaches based on 3D geometry), planning (robot kinematics and trajectory generation, collision-free motion planning, task-and-motion planning, and planning under uncertainty), as well as dynamics and control (both model-based and learning-based. Students taking graduate version complete additional assignments.
R. L. TedrakeNo textbook information available"
Communication,"Students will enhance their ability to communicate effectively through discussions, exercises, and the group project.","6.8200 Sensorimotor Learning
",1,Fall 2023,Communication,"6.8200 Sensorimotor Learning
", ,0,"()
Prereq: 6.3900 or 6.7900
Units: 3-0-9

Provides an in-depth view of the state-of-the-art learning methods for control and the know-how of applying these techniques. Topics span reinforcement learning, self-supervised learning, imitation learning, model-based learning, and advanced deep learning architectures, and specific machine learning challenges unique to building sensorimotor systems. Discusses how to identify if learning-based control can help solve a particular problem, how to formulate the problem in the learning framework, and what algorithm to use. Applications of algorithms in robotics, logistics, recommendation systems, playing games, and other control domains covered. Instruction involves two lectures a week, practical experience through exercises, discussion of current research directions, and a group project.
Staff"
Analytical thinking,Students will develop the ability to analyze and evaluate different approaches and algorithms for sensorimotor learning.,"6.8200 Sensorimotor Learning
",1,Fall 2023,Thinking Skills,"6.8200 Sensorimotor Learning
", ,0,"()
Prereq: 6.3900 or 6.7900
Units: 3-0-9

Provides an in-depth view of the state-of-the-art learning methods for control and the know-how of applying these techniques. Topics span reinforcement learning, self-supervised learning, imitation learning, model-based learning, and advanced deep learning architectures, and specific machine learning challenges unique to building sensorimotor systems. Discusses how to identify if learning-based control can help solve a particular problem, how to formulate the problem in the learning framework, and what algorithm to use. Applications of algorithms in robotics, logistics, recommendation systems, playing games, and other control domains covered. Instruction involves two lectures a week, practical experience through exercises, discussion of current research directions, and a group project.
Staff"
Organization,Students will learn how to organize and manage their work effectively to complete programming projects and exercises.,"6.8200 Sensorimotor Learning
",1,Fall 2023,Organization,"6.8200 Sensorimotor Learning
", ,0,"()
Prereq: 6.3900 or 6.7900
Units: 3-0-9

Provides an in-depth view of the state-of-the-art learning methods for control and the know-how of applying these techniques. Topics span reinforcement learning, self-supervised learning, imitation learning, model-based learning, and advanced deep learning architectures, and specific machine learning challenges unique to building sensorimotor systems. Discusses how to identify if learning-based control can help solve a particular problem, how to formulate the problem in the learning framework, and what algorithm to use. Applications of algorithms in robotics, logistics, recommendation systems, playing games, and other control domains covered. Instruction involves two lectures a week, practical experience through exercises, discussion of current research directions, and a group project.
Staff"
Critical thinking,Students will develop critical thinking skills to evaluate the effectiveness and limitations of different learning methods for control.,"6.8200 Sensorimotor Learning
",1,Fall 2023,Thinking Skills,"6.8200 Sensorimotor Learning
", ,0,"()
Prereq: 6.3900 or 6.7900
Units: 3-0-9

Provides an in-depth view of the state-of-the-art learning methods for control and the know-how of applying these techniques. Topics span reinforcement learning, self-supervised learning, imitation learning, model-based learning, and advanced deep learning architectures, and specific machine learning challenges unique to building sensorimotor systems. Discusses how to identify if learning-based control can help solve a particular problem, how to formulate the problem in the learning framework, and what algorithm to use. Applications of algorithms in robotics, logistics, recommendation systems, playing games, and other control domains covered. Instruction involves two lectures a week, practical experience through exercises, discussion of current research directions, and a group project.
Staff"
Collaboration,"Students will enhance their ability to work collaboratively in a group project, fostering teamwork and cooperation.","6.8200 Sensorimotor Learning
",1,Fall 2023,Collaboration and Teamwork,"6.8200 Sensorimotor Learning
", ,0,"()
Prereq: 6.3900 or 6.7900
Units: 3-0-9

Provides an in-depth view of the state-of-the-art learning methods for control and the know-how of applying these techniques. Topics span reinforcement learning, self-supervised learning, imitation learning, model-based learning, and advanced deep learning architectures, and specific machine learning challenges unique to building sensorimotor systems. Discusses how to identify if learning-based control can help solve a particular problem, how to formulate the problem in the learning framework, and what algorithm to use. Applications of algorithms in robotics, logistics, recommendation systems, playing games, and other control domains covered. Instruction involves two lectures a week, practical experience through exercises, discussion of current research directions, and a group project.
Staff"
Problem-solving,Students will develop the ability to analyze and solve complex problems related to underactuated robotics.,"6.8210 Underactuated Robotics
",1,Fall 2023,Problem-solving,"6.8210 Underactuated Robotics
", ,0,"()
Prereq: 18.03 and 18.06
Units: 3-0-9

Covers nonlinear dynamics and control of underactuated mechanical systems, with an emphasis on computational methods. Topics include the nonlinear dynamics of robotic manipulators, applied optimal and robust control and motion planning. Discussions include examples from biology and applications to legged locomotion, compliant manipulation, underwater robots, and flying machines.
R. Tedrake

Graphics"
Computational modeling,Students will enhance their ability to create computational models of underactuated mechanical systems for analysis and control.,"6.8210 Underactuated Robotics
",1,Fall 2023,Computational modeling,"6.8210 Underactuated Robotics
", ,0,"()
Prereq: 18.03 and 18.06
Units: 3-0-9

Covers nonlinear dynamics and control of underactuated mechanical systems, with an emphasis on computational methods. Topics include the nonlinear dynamics of robotic manipulators, applied optimal and robust control and motion planning. Discussions include examples from biology and applications to legged locomotion, compliant manipulation, underwater robots, and flying machines.
R. Tedrake

Graphics"
Control system design,"Students will develop the ability to design control systems for underactuated robotics, considering nonlinear dynamics and constraints.","6.8210 Underactuated Robotics
",1,Fall 2023,Control system design,"6.8210 Underactuated Robotics
", ,0,"()
Prereq: 18.03 and 18.06
Units: 3-0-9

Covers nonlinear dynamics and control of underactuated mechanical systems, with an emphasis on computational methods. Topics include the nonlinear dynamics of robotic manipulators, applied optimal and robust control and motion planning. Discussions include examples from biology and applications to legged locomotion, compliant manipulation, underwater robots, and flying machines.
R. Tedrake

Graphics"
Motion trajectory planning,"Students will acquire the ability to plan and generate motion trajectories for underactuated systems, taking into account various constraints and objectives.","6.8210 Underactuated Robotics
",1,Fall 2023,Motion trajectory planning,"6.8210 Underactuated Robotics
", ,0,"()
Prereq: 18.03 and 18.06
Units: 3-0-9

Covers nonlinear dynamics and control of underactuated mechanical systems, with an emphasis on computational methods. Topics include the nonlinear dynamics of robotic manipulators, applied optimal and robust control and motion planning. Discussions include examples from biology and applications to legged locomotion, compliant manipulation, underwater robots, and flying machines.
R. Tedrake

Graphics"
Application of theory to real-world scenarios,"Students will develop the ability to apply the theoretical concepts learned in the course to real-world scenarios in underactuated robotics, such as legged locomotion, compliant manipulation, underwater robots, and flying machines.","6.8210 Underactuated Robotics
",1,Fall 2023,Application of theory to real-world scenarios,"6.8210 Underactuated Robotics
", ,0,"()
Prereq: 18.03 and 18.06
Units: 3-0-9

Covers nonlinear dynamics and control of underactuated mechanical systems, with an emphasis on computational methods. Topics include the nonlinear dynamics of robotic manipulators, applied optimal and robust control and motion planning. Discussions include examples from biology and applications to legged locomotion, compliant manipulation, underwater robots, and flying machines.
R. Tedrake

Graphics"
Problem-solving,Students will develop problem-solving abilities as they encounter challenges and complexities in implementing computer graphics algorithms and techniques.,"6.4400 Computer Graphics
",1,Fall 2023,Problem-solving,"6.4400 Computer Graphics
", ,0,"()
Prereq: 6.1010 and (18.06 or 18.C06)
Units: 3-0-9
Lecture: TR2.30-4 (4-370)

Introduction to computer graphics algorithms, software and hardware. Topics include ray tracing, the graphics pipeline, transformations, texture mapping, shadows, sampling, global illumination, splines, animation and color.
M. Konakovic LukovicNo textbook information available"
Analytical thinking,"Students will enhance their ability to analyze and understand complex graphical concepts and algorithms, enabling them to effectively solve problems and optimize performance.","6.4400 Computer Graphics
",1,Fall 2023,Thinking Skills,"6.4400 Computer Graphics
", ,0,"()
Prereq: 6.1010 and (18.06 or 18.C06)
Units: 3-0-9
Lecture: TR2.30-4 (4-370)

Introduction to computer graphics algorithms, software and hardware. Topics include ray tracing, the graphics pipeline, transformations, texture mapping, shadows, sampling, global illumination, splines, animation and color.
M. Konakovic LukovicNo textbook information available"
Communication,"Students will improve their ability to communicate their ideas and findings related to computer graphics, both verbally and in written form, facilitating collaboration and knowledge sharing.","6.4400 Computer Graphics
",1,Fall 2023,Communication,"6.4400 Computer Graphics
", ,0,"()
Prereq: 6.1010 and (18.06 or 18.C06)
Units: 3-0-9
Lecture: TR2.30-4 (4-370)

Introduction to computer graphics algorithms, software and hardware. Topics include ray tracing, the graphics pipeline, transformations, texture mapping, shadows, sampling, global illumination, splines, animation and color.
M. Konakovic LukovicNo textbook information available"
Visual perception,"Students will develop the ability to perceive and interpret visual information accurately, allowing them to create visually appealing and meaningful graphics.","6.4400 Computer Graphics
",1,Fall 2023,Visual perception,"6.4400 Computer Graphics
", ,0,"()
Prereq: 6.1010 and (18.06 or 18.C06)
Units: 3-0-9
Lecture: TR2.30-4 (4-370)

Introduction to computer graphics algorithms, software and hardware. Topics include ray tracing, the graphics pipeline, transformations, texture mapping, shadows, sampling, global illumination, splines, animation and color.
M. Konakovic LukovicNo textbook information available"
Creativity,"Students will have the opportunity to explore and express their creativity through the design and implementation of computer graphics projects, fostering innovation and artistic expression.","6.4400 Computer Graphics
",1,Fall 2023,,"6.4400 Computer Graphics
", ,0,"()
Prereq: 6.1010 and (18.06 or 18.C06)
Units: 3-0-9
Lecture: TR2.30-4 (4-370)

Introduction to computer graphics algorithms, software and hardware. Topics include ray tracing, the graphics pipeline, transformations, texture mapping, shadows, sampling, global illumination, splines, animation and color.
M. Konakovic LukovicNo textbook information available"
Problem-solving,Students will develop the ability to analyze and solve complex problems related to computational design and fabrication.,"6.4420[J] Computational Design and Fabrication
",1,Fall 2023,Problem-solving,"6.4420[J] Computational Design and Fabrication
", ,0,"()
(Same subject as 2.0911[J])(Subject meets with 6.8420)
Prereq: Calculus II (GIR) and (6.1010 or permission of instructor)
Units: 3-0-9

Introduces computational aspects of computer-aided design and manufacturing. Explores relevant methods in the context of additive manufacturing (e.g., 3D printing). Topics include computer graphics (geometry modeling, solid modeling, procedural modeling), physically-based simulation (kinematics, finite element method), 3D scanning/geometry processing, and an overview of 3D fabrication methods. Exposes students to the latest research in computational fabrication. Students taking the graduate version complete additional assignments.
W. Matusik"
Communication,Students will enhance their ability to effectively communicate their ideas and findings related to computational design and fabrication.,"6.4420[J] Computational Design and Fabrication
",1,Fall 2023,Communication,"6.4420[J] Computational Design and Fabrication
", ,0,"()
(Same subject as 2.0911[J])(Subject meets with 6.8420)
Prereq: Calculus II (GIR) and (6.1010 or permission of instructor)
Units: 3-0-9

Introduces computational aspects of computer-aided design and manufacturing. Explores relevant methods in the context of additive manufacturing (e.g., 3D printing). Topics include computer graphics (geometry modeling, solid modeling, procedural modeling), physically-based simulation (kinematics, finite element method), 3D scanning/geometry processing, and an overview of 3D fabrication methods. Exposes students to the latest research in computational fabrication. Students taking the graduate version complete additional assignments.
W. Matusik"
Analytical thinking,Students will develop the ability to think critically and analytically when approaching design and fabrication challenges.,"6.4420[J] Computational Design and Fabrication
",1,Fall 2023,Thinking Skills,"6.4420[J] Computational Design and Fabrication
", ,0,"()
(Same subject as 2.0911[J])(Subject meets with 6.8420)
Prereq: Calculus II (GIR) and (6.1010 or permission of instructor)
Units: 3-0-9

Introduces computational aspects of computer-aided design and manufacturing. Explores relevant methods in the context of additive manufacturing (e.g., 3D printing). Topics include computer graphics (geometry modeling, solid modeling, procedural modeling), physically-based simulation (kinematics, finite element method), 3D scanning/geometry processing, and an overview of 3D fabrication methods. Exposes students to the latest research in computational fabrication. Students taking the graduate version complete additional assignments.
W. Matusik"
Technical proficiency,Students will gain the ability to effectively utilize computer-aided design and manufacturing tools and software.,"6.4420[J] Computational Design and Fabrication
",1,Fall 2023,,"6.4420[J] Computational Design and Fabrication
", ,0,"()
(Same subject as 2.0911[J])(Subject meets with 6.8420)
Prereq: Calculus II (GIR) and (6.1010 or permission of instructor)
Units: 3-0-9

Introduces computational aspects of computer-aided design and manufacturing. Explores relevant methods in the context of additive manufacturing (e.g., 3D printing). Topics include computer graphics (geometry modeling, solid modeling, procedural modeling), physically-based simulation (kinematics, finite element method), 3D scanning/geometry processing, and an overview of 3D fabrication methods. Exposes students to the latest research in computational fabrication. Students taking the graduate version complete additional assignments.
W. Matusik"
Research skills,Students will develop the ability to conduct research and stay updated with the latest advancements in computational design and fabrication.,"6.4420[J] Computational Design and Fabrication
",1,Fall 2023,Skills in Research and Technical Skills,"6.4420[J] Computational Design and Fabrication
", ,0,"()
(Same subject as 2.0911[J])(Subject meets with 6.8420)
Prereq: Calculus II (GIR) and (6.1010 or permission of instructor)
Units: 3-0-9

Introduces computational aspects of computer-aided design and manufacturing. Explores relevant methods in the context of additive manufacturing (e.g., 3D printing). Topics include computer graphics (geometry modeling, solid modeling, procedural modeling), physically-based simulation (kinematics, finite element method), 3D scanning/geometry processing, and an overview of 3D fabrication methods. Exposes students to the latest research in computational fabrication. Students taking the graduate version complete additional assignments.
W. Matusik"
Problem-solving,Students will develop the ability to apply geometric techniques to solve complex problems in shape analysis.,"6.8410 Shape Analysis
",1,Fall 2023,Problem-solving,"6.8410 Shape Analysis
", ,0,"()
Prereq: Calculus II (GIR), 18.06, and (6.8300 or 6.4400)
Units: 3-0-9

Introduces mathematical, algorithmic, and statistical tools needed to analyze geometric data and to apply geometric techniques to data analysis, with applications to fields such as computer graphics, machine learning, computer vision, medical imaging, and architecture. Potential topics include applied introduction to differential geometry, discrete notions of curvature, metric embedding, geometric PDE via the finite element method (FEM) and discrete exterior calculus (DEC),; computational spectral geometry and relationship to graph-based learning, correspondence and mapping, level set method, descriptor, shape collections, optimal transport, and vector field design.
Staff"
Analytical thinking,Students will enhance their ability to analyze and interpret geometric data.,"6.8410 Shape Analysis
",1,Fall 2023,Thinking Skills,"6.8410 Shape Analysis
", ,0,"()
Prereq: Calculus II (GIR), 18.06, and (6.8300 or 6.4400)
Units: 3-0-9

Introduces mathematical, algorithmic, and statistical tools needed to analyze geometric data and to apply geometric techniques to data analysis, with applications to fields such as computer graphics, machine learning, computer vision, medical imaging, and architecture. Potential topics include applied introduction to differential geometry, discrete notions of curvature, metric embedding, geometric PDE via the finite element method (FEM) and discrete exterior calculus (DEC),; computational spectral geometry and relationship to graph-based learning, correspondence and mapping, level set method, descriptor, shape collections, optimal transport, and vector field design.
Staff"
Mathematical reasoning,Students will develop the ability to apply mathematical concepts and reasoning in shape analysis.,"6.8410 Shape Analysis
",1,Fall 2023,Reasoning and Problem Solving,"6.8410 Shape Analysis
", ,0,"()
Prereq: Calculus II (GIR), 18.06, and (6.8300 or 6.4400)
Units: 3-0-9

Introduces mathematical, algorithmic, and statistical tools needed to analyze geometric data and to apply geometric techniques to data analysis, with applications to fields such as computer graphics, machine learning, computer vision, medical imaging, and architecture. Potential topics include applied introduction to differential geometry, discrete notions of curvature, metric embedding, geometric PDE via the finite element method (FEM) and discrete exterior calculus (DEC),; computational spectral geometry and relationship to graph-based learning, correspondence and mapping, level set method, descriptor, shape collections, optimal transport, and vector field design.
Staff"
Data interpretation,Students will acquire the ability to interpret and analyze geometric data.,"6.8410 Shape Analysis
",1,Fall 2023,,"6.8410 Shape Analysis
", ,0,"()
Prereq: Calculus II (GIR), 18.06, and (6.8300 or 6.4400)
Units: 3-0-9

Introduces mathematical, algorithmic, and statistical tools needed to analyze geometric data and to apply geometric techniques to data analysis, with applications to fields such as computer graphics, machine learning, computer vision, medical imaging, and architecture. Potential topics include applied introduction to differential geometry, discrete notions of curvature, metric embedding, geometric PDE via the finite element method (FEM) and discrete exterior calculus (DEC),; computational spectral geometry and relationship to graph-based learning, correspondence and mapping, level set method, descriptor, shape collections, optimal transport, and vector field design.
Staff"
Technical communication,Students will enhance their ability to effectively communicate complex geometric concepts and analysis results.,"6.8410 Shape Analysis
",1,Fall 2023,Technical Skills and Proficiency,"6.8410 Shape Analysis
", ,0,"()
Prereq: Calculus II (GIR), 18.06, and (6.8300 or 6.4400)
Units: 3-0-9

Introduces mathematical, algorithmic, and statistical tools needed to analyze geometric data and to apply geometric techniques to data analysis, with applications to fields such as computer graphics, machine learning, computer vision, medical imaging, and architecture. Potential topics include applied introduction to differential geometry, discrete notions of curvature, metric embedding, geometric PDE via the finite element method (FEM) and discrete exterior calculus (DEC),; computational spectral geometry and relationship to graph-based learning, correspondence and mapping, level set method, descriptor, shape collections, optimal transport, and vector field design.
Staff"
Problem-solving,Students will develop the ability to analyze and solve complex problems related to computational design and fabrication.,"6.8420 Computational Design and Fabrication
",1,Fall 2023,Problem-solving,"6.8420 Computational Design and Fabrication
", ,0,"()
(Subject meets with 2.0911[J], 6.4420[J])
Prereq: Calculus II (GIR) and (6.1010 or permission of instructor)
Units: 3-0-9

Introduces computational aspects of computer-aided design and manufacturing. Explores relevant methods in the context of additive manufacturing (e.g., 3D printing). Topics include computer graphics (geometry modeling, solid modeling, procedural modeling), physically-based simulation (kinematics, finite element method), 3D scanning/geometry processing, and an overview of 3D fabrication methods. Exposes students to the latest research in computational fabrication. Students taking graduate version complete additional assignments.
W. Matusik

Human-Computer Interaction & Society"
Communication,Students will enhance their ability to effectively communicate their ideas and findings related to computational design and fabrication.,"6.8420 Computational Design and Fabrication
",1,Fall 2023,Communication,"6.8420 Computational Design and Fabrication
", ,0,"()
(Subject meets with 2.0911[J], 6.4420[J])
Prereq: Calculus II (GIR) and (6.1010 or permission of instructor)
Units: 3-0-9

Introduces computational aspects of computer-aided design and manufacturing. Explores relevant methods in the context of additive manufacturing (e.g., 3D printing). Topics include computer graphics (geometry modeling, solid modeling, procedural modeling), physically-based simulation (kinematics, finite element method), 3D scanning/geometry processing, and an overview of 3D fabrication methods. Exposes students to the latest research in computational fabrication. Students taking graduate version complete additional assignments.
W. Matusik

Human-Computer Interaction & Society"
Analytical thinking,Students will develop the ability to think critically and analyze data and information in the context of computational design and fabrication.,"6.8420 Computational Design and Fabrication
",1,Fall 2023,Thinking Skills,"6.8420 Computational Design and Fabrication
", ,0,"()
(Subject meets with 2.0911[J], 6.4420[J])
Prereq: Calculus II (GIR) and (6.1010 or permission of instructor)
Units: 3-0-9

Introduces computational aspects of computer-aided design and manufacturing. Explores relevant methods in the context of additive manufacturing (e.g., 3D printing). Topics include computer graphics (geometry modeling, solid modeling, procedural modeling), physically-based simulation (kinematics, finite element method), 3D scanning/geometry processing, and an overview of 3D fabrication methods. Exposes students to the latest research in computational fabrication. Students taking graduate version complete additional assignments.
W. Matusik

Human-Computer Interaction & Society"
Technical skills,"Students will acquire technical skills in using CAD software, 3D printers, and other tools and technologies used in computational design and fabrication.","6.8420 Computational Design and Fabrication
",1,Fall 2023,Technical Skills and Proficiency,"6.8420 Computational Design and Fabrication
", ,0,"()
(Subject meets with 2.0911[J], 6.4420[J])
Prereq: Calculus II (GIR) and (6.1010 or permission of instructor)
Units: 3-0-9

Introduces computational aspects of computer-aided design and manufacturing. Explores relevant methods in the context of additive manufacturing (e.g., 3D printing). Topics include computer graphics (geometry modeling, solid modeling, procedural modeling), physically-based simulation (kinematics, finite element method), 3D scanning/geometry processing, and an overview of 3D fabrication methods. Exposes students to the latest research in computational fabrication. Students taking graduate version complete additional assignments.
W. Matusik

Human-Computer Interaction & Society"
Collaboration,Students will develop the ability to work effectively in teams and collaborate with others on projects related to computational design and fabrication.,"6.8420 Computational Design and Fabrication
",1,Fall 2023,Collaboration and Teamwork,"6.8420 Computational Design and Fabrication
", ,0,"()
(Subject meets with 2.0911[J], 6.4420[J])
Prereq: Calculus II (GIR) and (6.1010 or permission of instructor)
Units: 3-0-9

Introduces computational aspects of computer-aided design and manufacturing. Explores relevant methods in the context of additive manufacturing (e.g., 3D printing). Topics include computer graphics (geometry modeling, solid modeling, procedural modeling), physically-based simulation (kinematics, finite element method), 3D scanning/geometry processing, and an overview of 3D fabrication methods. Exposes students to the latest research in computational fabrication. Students taking graduate version complete additional assignments.
W. Matusik

Human-Computer Interaction & Society"
Problem-solving,Students will develop the ability to solve problems encountered during the construction of interactive prototypes.,"6.4510 Engineering Interactive Technologies
",1,Fall 2023,Problem-solving,"6.4510 Engineering Interactive Technologies
", ,0,"()Not offered regularly; consult department
Prereq: 6.1020, 6.2050, 6.2060, 6.9010, or permission of instructor
Units: 1-5-6

Provides instruction in building cutting-edge interactive technologies, explains the underlying engineering concepts, and shows how those technologies evolved over time. Students use a studio format (i.e., extended periods of time) for constructing software and hardware prototypes. Topics include interactive technologies, such as multi-touch, augmented reality, haptics, wearables, and shape-changing interfaces. In a group project, students build their own interactive hardware/software prototypes and present them in a live demo at the end of term. Enrollment may be limited.
Staff"
Communication,Students will enhance their ability to effectively communicate ideas and concepts related to interactive technologies.,"6.4510 Engineering Interactive Technologies
",1,Fall 2023,Communication,"6.4510 Engineering Interactive Technologies
", ,0,"()Not offered regularly; consult department
Prereq: 6.1020, 6.2050, 6.2060, 6.9010, or permission of instructor
Units: 1-5-6

Provides instruction in building cutting-edge interactive technologies, explains the underlying engineering concepts, and shows how those technologies evolved over time. Students use a studio format (i.e., extended periods of time) for constructing software and hardware prototypes. Topics include interactive technologies, such as multi-touch, augmented reality, haptics, wearables, and shape-changing interfaces. In a group project, students build their own interactive hardware/software prototypes and present them in a live demo at the end of term. Enrollment may be limited.
Staff"
Critical Thinking,Students will develop the ability to think critically and analyze issues related to interactive technologies.,"6.4510 Engineering Interactive Technologies
",1,Fall 2023,Thinking Skills,"6.4510 Engineering Interactive Technologies
", ,0,"()Not offered regularly; consult department
Prereq: 6.1020, 6.2050, 6.2060, 6.9010, or permission of instructor
Units: 1-5-6

Provides instruction in building cutting-edge interactive technologies, explains the underlying engineering concepts, and shows how those technologies evolved over time. Students use a studio format (i.e., extended periods of time) for constructing software and hardware prototypes. Topics include interactive technologies, such as multi-touch, augmented reality, haptics, wearables, and shape-changing interfaces. In a group project, students build their own interactive hardware/software prototypes and present them in a live demo at the end of term. Enrollment may be limited.
Staff"
Creativity,Students will foster their ability to think creatively and come up with innovative solutions for interactive prototypes.,"6.4510 Engineering Interactive Technologies
",1,Fall 2023,Creativity and Creative Thinking,"6.4510 Engineering Interactive Technologies
", ,0,"()Not offered regularly; consult department
Prereq: 6.1020, 6.2050, 6.2060, 6.9010, or permission of instructor
Units: 1-5-6

Provides instruction in building cutting-edge interactive technologies, explains the underlying engineering concepts, and shows how those technologies evolved over time. Students use a studio format (i.e., extended periods of time) for constructing software and hardware prototypes. Topics include interactive technologies, such as multi-touch, augmented reality, haptics, wearables, and shape-changing interfaces. In a group project, students build their own interactive hardware/software prototypes and present them in a live demo at the end of term. Enrollment may be limited.
Staff"
Adaptability,Students will develop the ability to adapt to new technologies and changing requirements in the field of interactive technologies.,"6.4510 Engineering Interactive Technologies
",1,Fall 2023,Adaptability,"6.4510 Engineering Interactive Technologies
", ,0,"()Not offered regularly; consult department
Prereq: 6.1020, 6.2050, 6.2060, 6.9010, or permission of instructor
Units: 1-5-6

Provides instruction in building cutting-edge interactive technologies, explains the underlying engineering concepts, and shows how those technologies evolved over time. Students use a studio format (i.e., extended periods of time) for constructing software and hardware prototypes. Topics include interactive technologies, such as multi-touch, augmented reality, haptics, wearables, and shape-changing interfaces. In a group project, students build their own interactive hardware/software prototypes and present them in a live demo at the end of term. Enrollment may be limited.
Staff"
Collaboration,Students will develop the ability to work closely with people with disabilities to understand their needs and preferences in order to design effective assistive technologies.,"6.4530[J] Principles and Practice of Assistive Technology
",1,Fall 2023,Collaboration and Teamwork,"6.4530[J] Principles and Practice of Assistive Technology
", ,0,"()Not offered regularly; consult department
(Same subject as 2.78[J], HST.420[J])
Prereq: Permission of instructor
Units: 2-4-6

Students work closely with people with disabilities to develop assistive and adaptive technologies that help them live more independently. Covers design methods and problem-solving strategies; human factors; human-machine interfaces; community perspectives; social and ethical aspects; and assistive technology for motor, cognitive, perceptual, and age-related impairments. Prior knowledge of one or more of the following areas useful: software; electronics; human-computer interaction; cognitive science; mechanical engineering; control; or MIT hobby shop, MIT PSC, or other relevant independent project experience. Enrollment may be limited.
Staff"
Critical thinking,Students will enhance their critical thinking skills to analyze and evaluate the effectiveness of different assistive technology solutions.,"6.4530[J] Principles and Practice of Assistive Technology
",1,Fall 2023,Thinking Skills,"6.4530[J] Principles and Practice of Assistive Technology
", ,0,"()Not offered regularly; consult department
(Same subject as 2.78[J], HST.420[J])
Prereq: Permission of instructor
Units: 2-4-6

Students work closely with people with disabilities to develop assistive and adaptive technologies that help them live more independently. Covers design methods and problem-solving strategies; human factors; human-machine interfaces; community perspectives; social and ethical aspects; and assistive technology for motor, cognitive, perceptual, and age-related impairments. Prior knowledge of one or more of the following areas useful: software; electronics; human-computer interaction; cognitive science; mechanical engineering; control; or MIT hobby shop, MIT PSC, or other relevant independent project experience. Enrollment may be limited.
Staff"
Communication,Students will improve their communication skills to effectively convey ideas and collaborate with team members and stakeholders in the development of assistive technologies.,"6.4530[J] Principles and Practice of Assistive Technology
",1,Fall 2023,Communication,"6.4530[J] Principles and Practice of Assistive Technology
", ,0,"()Not offered regularly; consult department
(Same subject as 2.78[J], HST.420[J])
Prereq: Permission of instructor
Units: 2-4-6

Students work closely with people with disabilities to develop assistive and adaptive technologies that help them live more independently. Covers design methods and problem-solving strategies; human factors; human-machine interfaces; community perspectives; social and ethical aspects; and assistive technology for motor, cognitive, perceptual, and age-related impairments. Prior knowledge of one or more of the following areas useful: software; electronics; human-computer interaction; cognitive science; mechanical engineering; control; or MIT hobby shop, MIT PSC, or other relevant independent project experience. Enrollment may be limited.
Staff"
Adaptability,Students will develop the ability to adapt their designs and solutions based on feedback and evolving needs of individuals with disabilities.,"6.4530[J] Principles and Practice of Assistive Technology
",1,Fall 2023,Adaptability,"6.4530[J] Principles and Practice of Assistive Technology
", ,0,"()Not offered regularly; consult department
(Same subject as 2.78[J], HST.420[J])
Prereq: Permission of instructor
Units: 2-4-6

Students work closely with people with disabilities to develop assistive and adaptive technologies that help them live more independently. Covers design methods and problem-solving strategies; human factors; human-machine interfaces; community perspectives; social and ethical aspects; and assistive technology for motor, cognitive, perceptual, and age-related impairments. Prior knowledge of one or more of the following areas useful: software; electronics; human-computer interaction; cognitive science; mechanical engineering; control; or MIT hobby shop, MIT PSC, or other relevant independent project experience. Enrollment may be limited.
Staff"
User-centered design,Students will learn to prioritize the needs and preferences of individuals with disabilities in the design and development of assistive technologies.,"6.4530[J] Principles and Practice of Assistive Technology
",1,Fall 2023,User-centered design,"6.4530[J] Principles and Practice of Assistive Technology
", ,0,"()Not offered regularly; consult department
(Same subject as 2.78[J], HST.420[J])
Prereq: Permission of instructor
Units: 2-4-6

Students work closely with people with disabilities to develop assistive and adaptive technologies that help them live more independently. Covers design methods and problem-solving strategies; human factors; human-machine interfaces; community perspectives; social and ethical aspects; and assistive technology for motor, cognitive, perceptual, and age-related impairments. Prior knowledge of one or more of the following areas useful: software; electronics; human-computer interaction; cognitive science; mechanical engineering; control; or MIT hobby shop, MIT PSC, or other relevant independent project experience. Enrollment may be limited.
Staff"
Problem-solving,Students will develop the ability to solve programming challenges and troubleshoot issues that arise during the development of interactive music systems.,"6.4550[J] Interactive Music Systems
",1,Fall 2023,Problem-solving,"6.4550[J] Interactive Music Systems
", ,0,"(, ) 
(Same subject as 21M.385[J])(Subject meets with 21M.585)
Prereq: (6.1010 and 21M.301) or permission of instructor
Units: 3-0-9
http://mta.mit.edu/music/class-schedule
Lecture: MW11-12.30 (4-270)

Explores audio synthesis, musical structure, human computer interaction (HCI), and visual presentation for the creation of interactive musical experiences. Topics include audio synthesis; mixing and looping; MIDI sequencing; generative composition; motion sensors; music games; and graphics for UI, visualization, and aesthetics. Includes weekly programming assignments in python. Teams build an original, dynamic, and engaging interactive music system for their final project. Students taking graduate version complete different assignments. Limited to 36.
Fall: E. Egozy, L. KaelblingSpring: E. Egozy, L. KaelblingNo required or recommended textbooks"
Communication,Students will enhance their ability to effectively communicate their ideas and concepts related to interactive music systems.,"6.4550[J] Interactive Music Systems
",1,Fall 2023,Communication,"6.4550[J] Interactive Music Systems
", ,0,"(, ) 
(Same subject as 21M.385[J])(Subject meets with 21M.585)
Prereq: (6.1010 and 21M.301) or permission of instructor
Units: 3-0-9
http://mta.mit.edu/music/class-schedule
Lecture: MW11-12.30 (4-270)

Explores audio synthesis, musical structure, human computer interaction (HCI), and visual presentation for the creation of interactive musical experiences. Topics include audio synthesis; mixing and looping; MIDI sequencing; generative composition; motion sensors; music games; and graphics for UI, visualization, and aesthetics. Includes weekly programming assignments in python. Teams build an original, dynamic, and engaging interactive music system for their final project. Students taking graduate version complete different assignments. Limited to 36.
Fall: E. Egozy, L. KaelblingSpring: E. Egozy, L. KaelblingNo required or recommended textbooks"
Teamwork,Students will develop the ability to work collaboratively in teams to build an original and engaging interactive music system for their final project.,"6.4550[J] Interactive Music Systems
",1,Fall 2023,Collaboration and Teamwork,"6.4550[J] Interactive Music Systems
", ,0,"(, ) 
(Same subject as 21M.385[J])(Subject meets with 21M.585)
Prereq: (6.1010 and 21M.301) or permission of instructor
Units: 3-0-9
http://mta.mit.edu/music/class-schedule
Lecture: MW11-12.30 (4-270)

Explores audio synthesis, musical structure, human computer interaction (HCI), and visual presentation for the creation of interactive musical experiences. Topics include audio synthesis; mixing and looping; MIDI sequencing; generative composition; motion sensors; music games; and graphics for UI, visualization, and aesthetics. Includes weekly programming assignments in python. Teams build an original, dynamic, and engaging interactive music system for their final project. Students taking graduate version complete different assignments. Limited to 36.
Fall: E. Egozy, L. KaelblingSpring: E. Egozy, L. KaelblingNo required or recommended textbooks"
Analytical thinking,Students will develop the ability to analyze and evaluate different approaches and techniques in designing interactive music systems.,"6.4550[J] Interactive Music Systems
",1,Fall 2023,Thinking Skills,"6.4550[J] Interactive Music Systems
", ,0,"(, ) 
(Same subject as 21M.385[J])(Subject meets with 21M.585)
Prereq: (6.1010 and 21M.301) or permission of instructor
Units: 3-0-9
http://mta.mit.edu/music/class-schedule
Lecture: MW11-12.30 (4-270)

Explores audio synthesis, musical structure, human computer interaction (HCI), and visual presentation for the creation of interactive musical experiences. Topics include audio synthesis; mixing and looping; MIDI sequencing; generative composition; motion sensors; music games; and graphics for UI, visualization, and aesthetics. Includes weekly programming assignments in python. Teams build an original, dynamic, and engaging interactive music system for their final project. Students taking graduate version complete different assignments. Limited to 36.
Fall: E. Egozy, L. KaelblingSpring: E. Egozy, L. KaelblingNo required or recommended textbooks"
Creative thinking,Students will enhance their ability to think creatively and come up with innovative ideas for interactive music systems.,"6.4550[J] Interactive Music Systems
",1,Fall 2023,Creativity and Creative Thinking,"6.4550[J] Interactive Music Systems
", ,0,"(, ) 
(Same subject as 21M.385[J])(Subject meets with 21M.585)
Prereq: (6.1010 and 21M.301) or permission of instructor
Units: 3-0-9
http://mta.mit.edu/music/class-schedule
Lecture: MW11-12.30 (4-270)

Explores audio synthesis, musical structure, human computer interaction (HCI), and visual presentation for the creation of interactive musical experiences. Topics include audio synthesis; mixing and looping; MIDI sequencing; generative composition; motion sensors; music games; and graphics for UI, visualization, and aesthetics. Includes weekly programming assignments in python. Teams build an original, dynamic, and engaging interactive music system for their final project. Students taking graduate version complete different assignments. Limited to 36.
Fall: E. Egozy, L. KaelblingSpring: E. Egozy, L. KaelblingNo required or recommended textbooks"
Problem-solving,"Students will develop the ability to solve problems that arise during game development, such as debugging code or addressing design challenges.","6.4570[J] Creating Video Games
",1,Fall 2023,Problem-solving,"6.4570[J] Creating Video Games
", ,0,"() 
(Same subject as CMS.611[J])
Prereq: 6.100A or CMS.301
Units: 3-3-6
Lecture: TR2-5 (24-115)

Introduces students to the complexities of working in small, multidisciplinary teams to develop video games. Covers creative design and production methods, stressing design iteration and regular testing across all aspects of game development (design, visual arts, music, fiction, and programming). Assumes a familiarity with current video games, and the ability to discuss games critically. Previous experience in audio design, visual arts, or project management recommended. Limited to 36.
P. Tan, S. Verrilli, R. Eberhardt, A. GrantNo textbook information available"
Communication,"Students will enhance their ability to effectively communicate ideas and feedback to team members, stakeholders, and players.","6.4570[J] Creating Video Games
",1,Fall 2023,Communication,"6.4570[J] Creating Video Games
", ,0,"() 
(Same subject as CMS.611[J])
Prereq: 6.100A or CMS.301
Units: 3-3-6
Lecture: TR2-5 (24-115)

Introduces students to the complexities of working in small, multidisciplinary teams to develop video games. Covers creative design and production methods, stressing design iteration and regular testing across all aspects of game development (design, visual arts, music, fiction, and programming). Assumes a familiarity with current video games, and the ability to discuss games critically. Previous experience in audio design, visual arts, or project management recommended. Limited to 36.
P. Tan, S. Verrilli, R. Eberhardt, A. GrantNo textbook information available"
Creativity,"Students will develop their creative abilities, exploring innovative ideas and solutions in game design and development.","6.4570[J] Creating Video Games
",1,Fall 2023,Creativity and Creative Thinking,"6.4570[J] Creating Video Games
", ,0,"() 
(Same subject as CMS.611[J])
Prereq: 6.100A or CMS.301
Units: 3-3-6
Lecture: TR2-5 (24-115)

Introduces students to the complexities of working in small, multidisciplinary teams to develop video games. Covers creative design and production methods, stressing design iteration and regular testing across all aspects of game development (design, visual arts, music, fiction, and programming). Assumes a familiarity with current video games, and the ability to discuss games critically. Previous experience in audio design, visual arts, or project management recommended. Limited to 36.
P. Tan, S. Verrilli, R. Eberhardt, A. GrantNo textbook information available"
Adaptability,"Students will learn to adapt to changing project requirements and constraints, adjusting their approach as needed.","6.4570[J] Creating Video Games
",1,Fall 2023,Adaptability,"6.4570[J] Creating Video Games
", ,0,"() 
(Same subject as CMS.611[J])
Prereq: 6.100A or CMS.301
Units: 3-3-6
Lecture: TR2-5 (24-115)

Introduces students to the complexities of working in small, multidisciplinary teams to develop video games. Covers creative design and production methods, stressing design iteration and regular testing across all aspects of game development (design, visual arts, music, fiction, and programming). Assumes a familiarity with current video games, and the ability to discuss games critically. Previous experience in audio design, visual arts, or project management recommended. Limited to 36.
P. Tan, S. Verrilli, R. Eberhardt, A. GrantNo textbook information available"
Time management,"Students will develop the ability to manage their time effectively, meeting project deadlines and balancing multiple tasks in a game development environment.","6.4570[J] Creating Video Games
",1,Fall 2023,Time management,"6.4570[J] Creating Video Games
", ,0,"() 
(Same subject as CMS.611[J])
Prereq: 6.100A or CMS.301
Units: 3-3-6
Lecture: TR2-5 (24-115)

Introduces students to the complexities of working in small, multidisciplinary teams to develop video games. Covers creative design and production methods, stressing design iteration and regular testing across all aspects of game development (design, visual arts, music, fiction, and programming). Assumes a familiarity with current video games, and the ability to discuss games critically. Previous experience in audio design, visual arts, or project management recommended. Limited to 36.
P. Tan, S. Verrilli, R. Eberhardt, A. GrantNo textbook information available"
Questioning,"Students will develop the ability to ask thoughtful and relevant questions during discussions with technologists, activists, law enforcement agents, journalists, and legal experts.","6.4590[J] Foundations of Information Policy
",1,Fall 2023,Questioning,"6.4590[J] Foundations of Information Policy
", ,0,"() 
(Same subject as STS.085[J])(Subject meets with STS.487)
Prereq: Permission of instructor
Units: 3-0-9

Studies the growth of computer and communications technology and the new legal and ethical challenges that reflect tensions between individual rights and societal needs. Topics include computer crime; intellectual property restrictions on software; encryption, privacy, and national security; academic freedom and free speech. Students meet and question technologists, activists, law enforcement agents, journalists, and legal experts. Instruction and practice in oral and written communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
H. Abelson, M. Fischer, D. Weitzner"
Analytical thinking,"Students will enhance their ability to analyze complex issues and arguments related to information policy, considering different perspectives and evaluating their validity.","6.4590[J] Foundations of Information Policy
",1,Fall 2023,Thinking Skills,"6.4590[J] Foundations of Information Policy
", ,0,"() 
(Same subject as STS.085[J])(Subject meets with STS.487)
Prereq: Permission of instructor
Units: 3-0-9

Studies the growth of computer and communications technology and the new legal and ethical challenges that reflect tensions between individual rights and societal needs. Topics include computer crime; intellectual property restrictions on software; encryption, privacy, and national security; academic freedom and free speech. Students meet and question technologists, activists, law enforcement agents, journalists, and legal experts. Instruction and practice in oral and written communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
H. Abelson, M. Fischer, D. Weitzner"
Collaboration,"Although not explicitly mentioned in the course description, students are likely to develop their ability to collaborate with their peers during discussions, group assignments, and projects.","6.4590[J] Foundations of Information Policy
",1,Fall 2023,Collaboration and Teamwork,"6.4590[J] Foundations of Information Policy
", ,0,"() 
(Same subject as STS.085[J])(Subject meets with STS.487)
Prereq: Permission of instructor
Units: 3-0-9

Studies the growth of computer and communications technology and the new legal and ethical challenges that reflect tensions between individual rights and societal needs. Topics include computer crime; intellectual property restrictions on software; encryption, privacy, and national security; academic freedom and free speech. Students meet and question technologists, activists, law enforcement agents, journalists, and legal experts. Instruction and practice in oral and written communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
H. Abelson, M. Fischer, D. Weitzner"
Ethical reasoning,Students will develop their ability to apply ethical principles and reasoning to the legal and ethical challenges discussed in the course.,"6.4590[J] Foundations of Information Policy
",1,Fall 2023,Ethical Decision-Making and Reasoning,"6.4590[J] Foundations of Information Policy
", ,0,"() 
(Same subject as STS.085[J])(Subject meets with STS.487)
Prereq: Permission of instructor
Units: 3-0-9

Studies the growth of computer and communications technology and the new legal and ethical challenges that reflect tensions between individual rights and societal needs. Topics include computer crime; intellectual property restrictions on software; encryption, privacy, and national security; academic freedom and free speech. Students meet and question technologists, activists, law enforcement agents, journalists, and legal experts. Instruction and practice in oral and written communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
H. Abelson, M. Fischer, D. Weitzner"
Adaptability,"Given the rapidly evolving nature of computer and communications technology, students will likely develop the ability to adapt to new technologies, legal frameworks, and ethical dilemmas.","6.4590[J] Foundations of Information Policy
",1,Fall 2023,Adaptability,"6.4590[J] Foundations of Information Policy
", ,0,"() 
(Same subject as STS.085[J])(Subject meets with STS.487)
Prereq: Permission of instructor
Units: 3-0-9

Studies the growth of computer and communications technology and the new legal and ethical challenges that reflect tensions between individual rights and societal needs. Topics include computer crime; intellectual property restrictions on software; encryption, privacy, and national security; academic freedom and free speech. Students meet and question technologists, activists, law enforcement agents, journalists, and legal experts. Instruction and practice in oral and written communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
H. Abelson, M. Fischer, D. Weitzner"
Problem-solving,Students will develop the ability to analyze and solve problems related to the implementation and evaluation of intelligent multimodal user interfaces.,"6.8510 Intelligent Multimodal User Interfaces
",1,Fall 2023,Problem-solving,"6.8510 Intelligent Multimodal User Interfaces
", ,0,"()
Prereq: (6.1020 and 6.4100) or permission of instructor
Units: 3-0-9

Implementation and evaluation of intelligent multi-modal user interfaces, taught from a combination of hands-on exercises and papers from the original literature. Topics include basic technologies for handling speech, vision, pen-based interaction, and other modalities, as well as various techniques for combining modalities. Substantial readings and a term project, where students build a program that illustrates one or more of the themes of the course.
Staff"
Critical thinking,Students will enhance their critical thinking skills through the analysis and evaluation of research papers and hands-on exercises.,"6.8510 Intelligent Multimodal User Interfaces
",1,Fall 2023,Thinking Skills,"6.8510 Intelligent Multimodal User Interfaces
", ,0,"()
Prereq: (6.1020 and 6.4100) or permission of instructor
Units: 3-0-9

Implementation and evaluation of intelligent multi-modal user interfaces, taught from a combination of hands-on exercises and papers from the original literature. Topics include basic technologies for handling speech, vision, pen-based interaction, and other modalities, as well as various techniques for combining modalities. Substantial readings and a term project, where students build a program that illustrates one or more of the themes of the course.
Staff"
Communication,"Students will improve their ability to effectively communicate their ideas, findings, and project outcomes related to intelligent multimodal user interfaces.","6.8510 Intelligent Multimodal User Interfaces
",1,Fall 2023,Communication,"6.8510 Intelligent Multimodal User Interfaces
", ,0,"()
Prereq: (6.1020 and 6.4100) or permission of instructor
Units: 3-0-9

Implementation and evaluation of intelligent multi-modal user interfaces, taught from a combination of hands-on exercises and papers from the original literature. Topics include basic technologies for handling speech, vision, pen-based interaction, and other modalities, as well as various techniques for combining modalities. Substantial readings and a term project, where students build a program that illustrates one or more of the themes of the course.
Staff"
Project management,"Students will develop the ability to plan, organize, and manage a term project that demonstrates the themes and concepts covered in the course.","6.8510 Intelligent Multimodal User Interfaces
",1,Fall 2023,Project Management and Design Project,"6.8510 Intelligent Multimodal User Interfaces
", ,0,"()
Prereq: (6.1020 and 6.4100) or permission of instructor
Units: 3-0-9

Implementation and evaluation of intelligent multi-modal user interfaces, taught from a combination of hands-on exercises and papers from the original literature. Topics include basic technologies for handling speech, vision, pen-based interaction, and other modalities, as well as various techniques for combining modalities. Substantial readings and a term project, where students build a program that illustrates one or more of the themes of the course.
Staff"
Research skills,"Students will acquire the ability to conduct literature reviews, identify relevant research papers, and synthesize information from multiple sources to support their understanding and implementation of intelligent multimodal user interfaces.","6.8510 Intelligent Multimodal User Interfaces
",1,Fall 2023,Skills in Research and Technical Skills,"6.8510 Intelligent Multimodal User Interfaces
", ,0,"()
Prereq: (6.1020 and 6.4100) or permission of instructor
Units: 3-0-9

Implementation and evaluation of intelligent multi-modal user interfaces, taught from a combination of hands-on exercises and papers from the original literature. Topics include basic technologies for handling speech, vision, pen-based interaction, and other modalities, as well as various techniques for combining modalities. Substantial readings and a term project, where students build a program that illustrates one or more of the themes of the course.
Staff"
Problem-solving,Students will develop the ability to solve complex problems related to data analysis and visualization.,"6.8530 Interactive Data Visualization
",1,Fall 2023,Problem-solving,"6.8530 Interactive Data Visualization
", ,0,"()
Prereq: 6.1020
Units: 3-0-9
Credit cannot also be received for 6.C35, 6.C85, 11.154, 11.454, 11.C35, 11.C85

Interactive visualization provides a means of making sense of a world awash in data. Covers the techniques and algorithms for creating effective visualizations, using principles from graphic design, perceptual psychology, and cognitive science. Short assignments build familiarity with the data analysis and visualization design process, and a final project provides experience designing, implementing, and deploying an explanatory narrative visualization or visual analysis tool to address a concrete challenge.
Staff

Computational Biology"
Communication,Students will enhance their ability to effectively communicate their findings and insights through visualizations.,"6.8530 Interactive Data Visualization
",1,Fall 2023,Communication,"6.8530 Interactive Data Visualization
", ,0,"()
Prereq: 6.1020
Units: 3-0-9
Credit cannot also be received for 6.C35, 6.C85, 11.154, 11.454, 11.C35, 11.C85

Interactive visualization provides a means of making sense of a world awash in data. Covers the techniques and algorithms for creating effective visualizations, using principles from graphic design, perceptual psychology, and cognitive science. Short assignments build familiarity with the data analysis and visualization design process, and a final project provides experience designing, implementing, and deploying an explanatory narrative visualization or visual analysis tool to address a concrete challenge.
Staff

Computational Biology"
Design thinking,Students will develop the ability to think critically and creatively in designing interactive visualizations.,"6.8530 Interactive Data Visualization
",1,Fall 2023,Thinking Methods,"6.8530 Interactive Data Visualization
", ,0,"()
Prereq: 6.1020
Units: 3-0-9
Credit cannot also be received for 6.C35, 6.C85, 11.154, 11.454, 11.C35, 11.C85

Interactive visualization provides a means of making sense of a world awash in data. Covers the techniques and algorithms for creating effective visualizations, using principles from graphic design, perceptual psychology, and cognitive science. Short assignments build familiarity with the data analysis and visualization design process, and a final project provides experience designing, implementing, and deploying an explanatory narrative visualization or visual analysis tool to address a concrete challenge.
Staff

Computational Biology"
Project management,"Students will acquire the ability to manage and organize their projects effectively, from initial design to final deployment.","6.8530 Interactive Data Visualization
",1,Fall 2023,Project Management and Design Project,"6.8530 Interactive Data Visualization
", ,0,"()
Prereq: 6.1020
Units: 3-0-9
Credit cannot also be received for 6.C35, 6.C85, 11.154, 11.454, 11.C35, 11.C85

Interactive visualization provides a means of making sense of a world awash in data. Covers the techniques and algorithms for creating effective visualizations, using principles from graphic design, perceptual psychology, and cognitive science. Short assignments build familiarity with the data analysis and visualization design process, and a final project provides experience designing, implementing, and deploying an explanatory narrative visualization or visual analysis tool to address a concrete challenge.
Staff

Computational Biology"
Adaptability,Students will develop the ability to adapt their visualization designs and approaches based on the specific challenges and requirements of different data analysis tasks.,"6.8530 Interactive Data Visualization
",1,Fall 2023,Adaptability,"6.8530 Interactive Data Visualization
", ,0,"()
Prereq: 6.1020
Units: 3-0-9
Credit cannot also be received for 6.C35, 6.C85, 11.154, 11.454, 11.C35, 11.C85

Interactive visualization provides a means of making sense of a world awash in data. Covers the techniques and algorithms for creating effective visualizations, using principles from graphic design, perceptual psychology, and cognitive science. Short assignments build familiarity with the data analysis and visualization design process, and a final project provides experience designing, implementing, and deploying an explanatory narrative visualization or visual analysis tool to address a concrete challenge.
Staff

Computational Biology"
Problem-solving,Students will develop problem-solving abilities as they work on computational modeling and data analysis tasks in the field of evolutionary biology. This ability is selected because it is essential for effectively addressing challenges and finding solutions in the field.,"6.4710[J] Evolutionary Biology: Concepts, Models and Computation
",1,Fall 2023,Problem-solving,"6.4710[J] Evolutionary Biology: Concepts, Models and Computation
", ,0,"()
(Same subject as 7.33[J])
Prereq: (6.100A and 7.03) or permission of instructor
Units: 3-0-9

Explores and illustrates how evolution explains biology, with an emphasis on computational model building for analyzing evolutionary data. Covers key concepts of biological evolution, including adaptive evolution, neutral evolution, evolution of sex, genomic conflict, speciation, phylogeny and comparative methods, life's history, coevolution, human evolution, and evolution of disease.
R. Berwick, D. Bartel"
Communication,"Students will enhance their communication abilities, both verbally and in writing, as they learn to effectively convey their findings and ideas related to evolutionary biology. This ability is selected because effective communication is crucial for sharing scientific knowledge and collaborating with others in the field.","6.4710[J] Evolutionary Biology: Concepts, Models and Computation
",1,Fall 2023,Communication,"6.4710[J] Evolutionary Biology: Concepts, Models and Computation
", ,0,"()
(Same subject as 7.33[J])
Prereq: (6.100A and 7.03) or permission of instructor
Units: 3-0-9

Explores and illustrates how evolution explains biology, with an emphasis on computational model building for analyzing evolutionary data. Covers key concepts of biological evolution, including adaptive evolution, neutral evolution, evolution of sex, genomic conflict, speciation, phylogeny and comparative methods, life's history, coevolution, human evolution, and evolution of disease.
R. Berwick, D. Bartel"
Data interpretation,Students will develop the ability to interpret and analyze complex biological data sets.,"6.8700[J] Advanced Computational Biology: Genomes, Networks, Evolution
",1,Fall 2023,Data Analysis and Interpretation,"6.8700[J] Advanced Computational Biology: Genomes, Networks, Evolution
", ,0,"()
(Same subject as HST.507[J])(Subject meets with 6.8701)
Prereq: (Biology (GIR), 6.1210, and 6.3700) or permission of instructor
Units: 4-0-8
Lecture: TR1-2.30 (32-144) Recitation: F3 (32-144)

See description for 6.047. Additionally examines recent publications in the areas covered, with research-style assignments. A more substantial final project is expected, which can lead to a thesis and publication.
M. KellisNo textbook information available"
Critical thinking,Students will enhance their critical thinking skills through the analysis and interpretation of computational biology research.,"6.8700[J] Advanced Computational Biology: Genomes, Networks, Evolution
",1,Fall 2023,Thinking Skills,"6.8700[J] Advanced Computational Biology: Genomes, Networks, Evolution
", ,0,"()
(Same subject as HST.507[J])(Subject meets with 6.8701)
Prereq: (Biology (GIR), 6.1210, and 6.3700) or permission of instructor
Units: 4-0-8
Lecture: TR1-2.30 (32-144) Recitation: F3 (32-144)

See description for 6.047. Additionally examines recent publications in the areas covered, with research-style assignments. A more substantial final project is expected, which can lead to a thesis and publication.
M. KellisNo textbook information available"
Research skills,Students will gain the ability to conduct independent research in computational biology.,"6.8700[J] Advanced Computational Biology: Genomes, Networks, Evolution
",1,Fall 2023,Skills in Research and Technical Skills,"6.8700[J] Advanced Computational Biology: Genomes, Networks, Evolution
", ,0,"()
(Same subject as HST.507[J])(Subject meets with 6.8701)
Prereq: (Biology (GIR), 6.1210, and 6.3700) or permission of instructor
Units: 4-0-8
Lecture: TR1-2.30 (32-144) Recitation: F3 (32-144)

See description for 6.047. Additionally examines recent publications in the areas covered, with research-style assignments. A more substantial final project is expected, which can lead to a thesis and publication.
M. KellisNo textbook information available"
Scientific writing,Students will improve their ability to communicate scientific findings through written reports and research papers.,"6.8700[J] Advanced Computational Biology: Genomes, Networks, Evolution
",1,Fall 2023,Scientific writing,"6.8700[J] Advanced Computational Biology: Genomes, Networks, Evolution
", ,0,"()
(Same subject as HST.507[J])(Subject meets with 6.8701)
Prereq: (Biology (GIR), 6.1210, and 6.3700) or permission of instructor
Units: 4-0-8
Lecture: TR1-2.30 (32-144) Recitation: F3 (32-144)

See description for 6.047. Additionally examines recent publications in the areas covered, with research-style assignments. A more substantial final project is expected, which can lead to a thesis and publication.
M. KellisNo textbook information available"
Collaboration,Students will develop teamwork and collaboration skills through group projects and discussions in the field of computational biology.,"6.8700[J] Advanced Computational Biology: Genomes, Networks, Evolution
",1,Fall 2023,Collaboration and Teamwork,"6.8700[J] Advanced Computational Biology: Genomes, Networks, Evolution
", ,0,"()
(Same subject as HST.507[J])(Subject meets with 6.8701)
Prereq: (Biology (GIR), 6.1210, and 6.3700) or permission of instructor
Units: 4-0-8
Lecture: TR1-2.30 (32-144) Recitation: F3 (32-144)

See description for 6.047. Additionally examines recent publications in the areas covered, with research-style assignments. A more substantial final project is expected, which can lead to a thesis and publication.
M. KellisNo textbook information available"
Problem-solving,Students will develop the ability to apply computational algorithms and techniques to solve complex problems in computational biology.,"6.8701 Computational Biology: Genomes, Networks, Evolution
",1,Fall 2023,Problem-solving,"6.8701 Computational Biology: Genomes, Networks, Evolution
", ,0,"()
(Subject meets with 6.8700[J], HST.507[J])
Prereq: (Biology (GIR), 6.1210, and 6.3700) or permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (32-144) Recitation: F3 (32-144)

Covers the algorithmic and machine learning foundations of computational biology, combining theory with practice. Principles of algorithm design, influential problems and techniques, and analysis of large-scale biological datasets. Topics include (a) genomes: sequence analysis, gene finding, RNA folding, genome alignment and assembly, database search; (b) networks: gene expression analysis, regulatory motifs, biological network analysis; (c) evolution: comparative genomics, phylogenetics, genome duplication, genome rearrangements, evolutionary theory. These are coupled with fundamental algorithmic techniques including: dynamic programming, hashing, Gibbs sampling, expectation maximization, hidden Markov models, stochastic context-free grammars, graph clustering, dimensionality reduction, Bayesian networks.
M. KellisNo textbook information available"
Data analysis,Students will enhance their ability to analyze large-scale biological datasets and extract meaningful insights.,"6.8701 Computational Biology: Genomes, Networks, Evolution
",1,Fall 2023,Data Analysis and Interpretation,"6.8701 Computational Biology: Genomes, Networks, Evolution
", ,0,"()
(Subject meets with 6.8700[J], HST.507[J])
Prereq: (Biology (GIR), 6.1210, and 6.3700) or permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (32-144) Recitation: F3 (32-144)

Covers the algorithmic and machine learning foundations of computational biology, combining theory with practice. Principles of algorithm design, influential problems and techniques, and analysis of large-scale biological datasets. Topics include (a) genomes: sequence analysis, gene finding, RNA folding, genome alignment and assembly, database search; (b) networks: gene expression analysis, regulatory motifs, biological network analysis; (c) evolution: comparative genomics, phylogenetics, genome duplication, genome rearrangements, evolutionary theory. These are coupled with fundamental algorithmic techniques including: dynamic programming, hashing, Gibbs sampling, expectation maximization, hidden Markov models, stochastic context-free grammars, graph clustering, dimensionality reduction, Bayesian networks.
M. KellisNo textbook information available"
Critical thinking,Students will develop the ability to think critically and evaluate the effectiveness of different computational approaches in solving biological problems.,"6.8701 Computational Biology: Genomes, Networks, Evolution
",1,Fall 2023,Thinking Skills,"6.8701 Computational Biology: Genomes, Networks, Evolution
", ,0,"()
(Subject meets with 6.8700[J], HST.507[J])
Prereq: (Biology (GIR), 6.1210, and 6.3700) or permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (32-144) Recitation: F3 (32-144)

Covers the algorithmic and machine learning foundations of computational biology, combining theory with practice. Principles of algorithm design, influential problems and techniques, and analysis of large-scale biological datasets. Topics include (a) genomes: sequence analysis, gene finding, RNA folding, genome alignment and assembly, database search; (b) networks: gene expression analysis, regulatory motifs, biological network analysis; (c) evolution: comparative genomics, phylogenetics, genome duplication, genome rearrangements, evolutionary theory. These are coupled with fundamental algorithmic techniques including: dynamic programming, hashing, Gibbs sampling, expectation maximization, hidden Markov models, stochastic context-free grammars, graph clustering, dimensionality reduction, Bayesian networks.
M. KellisNo textbook information available"
Research skills,"Students will acquire the ability to conduct research in computational biology, including literature review, experimental design, and data interpretation.","6.8701 Computational Biology: Genomes, Networks, Evolution
",1,Fall 2023,Skills in Research and Technical Skills,"6.8701 Computational Biology: Genomes, Networks, Evolution
", ,0,"()
(Subject meets with 6.8700[J], HST.507[J])
Prereq: (Biology (GIR), 6.1210, and 6.3700) or permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (32-144) Recitation: F3 (32-144)

Covers the algorithmic and machine learning foundations of computational biology, combining theory with practice. Principles of algorithm design, influential problems and techniques, and analysis of large-scale biological datasets. Topics include (a) genomes: sequence analysis, gene finding, RNA folding, genome alignment and assembly, database search; (b) networks: gene expression analysis, regulatory motifs, biological network analysis; (c) evolution: comparative genomics, phylogenetics, genome duplication, genome rearrangements, evolutionary theory. These are coupled with fundamental algorithmic techniques including: dynamic programming, hashing, Gibbs sampling, expectation maximization, hidden Markov models, stochastic context-free grammars, graph clustering, dimensionality reduction, Bayesian networks.
M. KellisNo textbook information available"
Collaboration,Students will enhance their ability to work collaboratively in interdisciplinary teams to tackle computational biology challenges.,"6.8701 Computational Biology: Genomes, Networks, Evolution
",1,Fall 2023,Collaboration and Teamwork,"6.8701 Computational Biology: Genomes, Networks, Evolution
", ,0,"()
(Subject meets with 6.8700[J], HST.507[J])
Prereq: (Biology (GIR), 6.1210, and 6.3700) or permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (32-144) Recitation: F3 (32-144)

Covers the algorithmic and machine learning foundations of computational biology, combining theory with practice. Principles of algorithm design, influential problems and techniques, and analysis of large-scale biological datasets. Topics include (a) genomes: sequence analysis, gene finding, RNA folding, genome alignment and assembly, database search; (b) networks: gene expression analysis, regulatory motifs, biological network analysis; (c) evolution: comparative genomics, phylogenetics, genome duplication, genome rearrangements, evolutionary theory. These are coupled with fundamental algorithmic techniques including: dynamic programming, hashing, Gibbs sampling, expectation maximization, hidden Markov models, stochastic context-free grammars, graph clustering, dimensionality reduction, Bayesian networks.
M. KellisNo textbook information available"
Problem-solving,Students will develop the ability to solve complex problems related to computational systems biology using deep learning approaches.,"6.8710[J] Computational Systems Biology: Deep Learning in the Life Sciences
",1,Fall 2023,Problem-solving,"6.8710[J] Computational Systems Biology: Deep Learning in the Life Sciences
", ,0,"()
(Same subject as HST.506[J])(Subject meets with 6.8711[J], 20.390[J], 20.490)
Prereq: Biology (GIR) and (6.3700 or 18.600)
Units: 3-0-9

Presents innovative approaches to computational problems in the life sciences, focusing on deep learning-based approaches with comparisons to conventional methods. Topics include protein-DNA interaction, chromatin accessibility, regulatory variant interpretation, medical image understanding, medical record understanding, therapeutic design, and experiment design (the choice and interpretation of interventions). Focuses on machine learning model selection, robustness, and interpretation. Teams complete a multidisciplinary final research project using TensorFlow or other framework. Provides a comprehensive introduction to each life sciences problem, but relies upon students understanding probabilistic problem formulations. Students taking graduate version complete additional assignments.
Staff"
Communication,Students will enhance their ability to effectively communicate their research findings and ideas in the field of computational systems biology.,"6.8710[J] Computational Systems Biology: Deep Learning in the Life Sciences
",1,Fall 2023,Communication,"6.8710[J] Computational Systems Biology: Deep Learning in the Life Sciences
", ,0,"()
(Same subject as HST.506[J])(Subject meets with 6.8711[J], 20.390[J], 20.490)
Prereq: Biology (GIR) and (6.3700 or 18.600)
Units: 3-0-9

Presents innovative approaches to computational problems in the life sciences, focusing on deep learning-based approaches with comparisons to conventional methods. Topics include protein-DNA interaction, chromatin accessibility, regulatory variant interpretation, medical image understanding, medical record understanding, therapeutic design, and experiment design (the choice and interpretation of interventions). Focuses on machine learning model selection, robustness, and interpretation. Teams complete a multidisciplinary final research project using TensorFlow or other framework. Provides a comprehensive introduction to each life sciences problem, but relies upon students understanding probabilistic problem formulations. Students taking graduate version complete additional assignments.
Staff"
Multidisciplinary collaboration,Students will develop the ability to work effectively in multidisciplinary teams to complete a final research project.,"6.8710[J] Computational Systems Biology: Deep Learning in the Life Sciences
",1,Fall 2023,Collaboration and Teamwork,"6.8710[J] Computational Systems Biology: Deep Learning in the Life Sciences
", ,0,"()
(Same subject as HST.506[J])(Subject meets with 6.8711[J], 20.390[J], 20.490)
Prereq: Biology (GIR) and (6.3700 or 18.600)
Units: 3-0-9

Presents innovative approaches to computational problems in the life sciences, focusing on deep learning-based approaches with comparisons to conventional methods. Topics include protein-DNA interaction, chromatin accessibility, regulatory variant interpretation, medical image understanding, medical record understanding, therapeutic design, and experiment design (the choice and interpretation of interventions). Focuses on machine learning model selection, robustness, and interpretation. Teams complete a multidisciplinary final research project using TensorFlow or other framework. Provides a comprehensive introduction to each life sciences problem, but relies upon students understanding probabilistic problem formulations. Students taking graduate version complete additional assignments.
Staff"
Data analysis,Students will gain the ability to analyze and interpret large datasets in the context of life sciences research.,"6.8710[J] Computational Systems Biology: Deep Learning in the Life Sciences
",1,Fall 2023,Data Analysis and Interpretation,"6.8710[J] Computational Systems Biology: Deep Learning in the Life Sciences
", ,0,"()
(Same subject as HST.506[J])(Subject meets with 6.8711[J], 20.390[J], 20.490)
Prereq: Biology (GIR) and (6.3700 or 18.600)
Units: 3-0-9

Presents innovative approaches to computational problems in the life sciences, focusing on deep learning-based approaches with comparisons to conventional methods. Topics include protein-DNA interaction, chromatin accessibility, regulatory variant interpretation, medical image understanding, medical record understanding, therapeutic design, and experiment design (the choice and interpretation of interventions). Focuses on machine learning model selection, robustness, and interpretation. Teams complete a multidisciplinary final research project using TensorFlow or other framework. Provides a comprehensive introduction to each life sciences problem, but relies upon students understanding probabilistic problem formulations. Students taking graduate version complete additional assignments.
Staff"
Probabilistic problem formulations,"Students will learn how to formulate life sciences problems using probabilistic approaches, enhancing their ability to tackle complex research questions.","6.8710[J] Computational Systems Biology: Deep Learning in the Life Sciences
",1,Fall 2023,Probabilistic problem formulations,"6.8710[J] Computational Systems Biology: Deep Learning in the Life Sciences
", ,0,"()
(Same subject as HST.506[J])(Subject meets with 6.8711[J], 20.390[J], 20.490)
Prereq: Biology (GIR) and (6.3700 or 18.600)
Units: 3-0-9

Presents innovative approaches to computational problems in the life sciences, focusing on deep learning-based approaches with comparisons to conventional methods. Topics include protein-DNA interaction, chromatin accessibility, regulatory variant interpretation, medical image understanding, medical record understanding, therapeutic design, and experiment design (the choice and interpretation of interventions). Focuses on machine learning model selection, robustness, and interpretation. Teams complete a multidisciplinary final research project using TensorFlow or other framework. Provides a comprehensive introduction to each life sciences problem, but relies upon students understanding probabilistic problem formulations. Students taking graduate version complete additional assignments.
Staff"
Problem-solving,Students will develop the ability to solve complex problems related to computational systems biology using deep learning approaches.,"6.8711[J] Computational Systems Biology: Deep Learning in the Life Sciences
",1,Fall 2023,Problem-solving,"6.8711[J] Computational Systems Biology: Deep Learning in the Life Sciences
", ,0,"()
(Same subject as 20.390[J])(Subject meets with 6.8710[J], 20.490, HST.506[J])
Prereq: (7.05 and (6.100B or 6.9080)) or permission of instructor
Units: 3-0-9

Presents innovative approaches to computational problems in the life sciences, focusing on deep learning-based approaches with comparisons to conventional methods. Topics include protein-DNA interaction, chromatin accessibility, regulatory variant interpretation, medical image understanding, medical record understanding, therapeutic design, and experiment design (the choice and interpretation of interventions). Focuses on machine learning model selection, robustness, and interpretation. Teams complete a multidisciplinary final research project using TensorFlow or other framework. Provides a comprehensive introduction to each life sciences problem, but relies upon students understanding probabilistic problem formulations. Students taking graduate version complete additional assignments.
Staff"
Communication,Students will enhance their ability to effectively communicate their research findings and ideas in the field of computational systems biology.,"6.8711[J] Computational Systems Biology: Deep Learning in the Life Sciences
",1,Fall 2023,Communication,"6.8711[J] Computational Systems Biology: Deep Learning in the Life Sciences
", ,0,"()
(Same subject as 20.390[J])(Subject meets with 6.8710[J], 20.490, HST.506[J])
Prereq: (7.05 and (6.100B or 6.9080)) or permission of instructor
Units: 3-0-9

Presents innovative approaches to computational problems in the life sciences, focusing on deep learning-based approaches with comparisons to conventional methods. Topics include protein-DNA interaction, chromatin accessibility, regulatory variant interpretation, medical image understanding, medical record understanding, therapeutic design, and experiment design (the choice and interpretation of interventions). Focuses on machine learning model selection, robustness, and interpretation. Teams complete a multidisciplinary final research project using TensorFlow or other framework. Provides a comprehensive introduction to each life sciences problem, but relies upon students understanding probabilistic problem formulations. Students taking graduate version complete additional assignments.
Staff"
Multidisciplinary collaboration,Students will develop the ability to work in multidisciplinary teams to complete a final research project.,"6.8711[J] Computational Systems Biology: Deep Learning in the Life Sciences
",1,Fall 2023,Collaboration and Teamwork,"6.8711[J] Computational Systems Biology: Deep Learning in the Life Sciences
", ,0,"()
(Same subject as 20.390[J])(Subject meets with 6.8710[J], 20.490, HST.506[J])
Prereq: (7.05 and (6.100B or 6.9080)) or permission of instructor
Units: 3-0-9

Presents innovative approaches to computational problems in the life sciences, focusing on deep learning-based approaches with comparisons to conventional methods. Topics include protein-DNA interaction, chromatin accessibility, regulatory variant interpretation, medical image understanding, medical record understanding, therapeutic design, and experiment design (the choice and interpretation of interventions). Focuses on machine learning model selection, robustness, and interpretation. Teams complete a multidisciplinary final research project using TensorFlow or other framework. Provides a comprehensive introduction to each life sciences problem, but relies upon students understanding probabilistic problem formulations. Students taking graduate version complete additional assignments.
Staff"
Data analysis,Students will gain the ability to analyze and interpret large datasets in the life sciences field.,"6.8711[J] Computational Systems Biology: Deep Learning in the Life Sciences
",1,Fall 2023,Data Analysis and Interpretation,"6.8711[J] Computational Systems Biology: Deep Learning in the Life Sciences
", ,0,"()
(Same subject as 20.390[J])(Subject meets with 6.8710[J], 20.490, HST.506[J])
Prereq: (7.05 and (6.100B or 6.9080)) or permission of instructor
Units: 3-0-9

Presents innovative approaches to computational problems in the life sciences, focusing on deep learning-based approaches with comparisons to conventional methods. Topics include protein-DNA interaction, chromatin accessibility, regulatory variant interpretation, medical image understanding, medical record understanding, therapeutic design, and experiment design (the choice and interpretation of interventions). Focuses on machine learning model selection, robustness, and interpretation. Teams complete a multidisciplinary final research project using TensorFlow or other framework. Provides a comprehensive introduction to each life sciences problem, but relies upon students understanding probabilistic problem formulations. Students taking graduate version complete additional assignments.
Staff"
Research skills,Students will develop the ability to conduct research in computational systems biology using deep learning techniques.,"6.8711[J] Computational Systems Biology: Deep Learning in the Life Sciences
",1,Fall 2023,Skills in Research and Technical Skills,"6.8711[J] Computational Systems Biology: Deep Learning in the Life Sciences
", ,0,"()
(Same subject as 20.390[J])(Subject meets with 6.8710[J], 20.490, HST.506[J])
Prereq: (7.05 and (6.100B or 6.9080)) or permission of instructor
Units: 3-0-9

Presents innovative approaches to computational problems in the life sciences, focusing on deep learning-based approaches with comparisons to conventional methods. Topics include protein-DNA interaction, chromatin accessibility, regulatory variant interpretation, medical image understanding, medical record understanding, therapeutic design, and experiment design (the choice and interpretation of interventions). Focuses on machine learning model selection, robustness, and interpretation. Teams complete a multidisciplinary final research project using TensorFlow or other framework. Provides a comprehensive introduction to each life sciences problem, but relies upon students understanding probabilistic problem formulations. Students taking graduate version complete additional assignments.
Staff"
Analysis,Students will develop the ability to analyze and evaluate synthetic biological systems and their performance.,"6.8720[J] Principles of Synthetic Biology
",1,Fall 2023,,"6.8720[J] Principles of Synthetic Biology
", ,0,"()
(Same subject as 20.405[J])(Subject meets with 6.8721[J], 20.305[J])
Prereq: None
Units: 3-0-9
Lecture: TR2 (3-333)

Introduces the basics of synthetic biology, including quantitative cellular network characterization and modeling. Considers the discovery and genetic factoring of useful cellular activities into reusable functions for design. Emphasizes the principles of biomolecular system design and diagnosis of designed systems. Illustrates cutting-edge applications in synthetic biology and enhances skills in analysis and design of synthetic biological applications. Students taking graduate version complete additional assignments.
R. WeissNo textbook information available"
Design,Students will enhance their ability to design and create biomolecular systems for specific applications in synthetic biology.,"6.8720[J] Principles of Synthetic Biology
",1,Fall 2023,Design,"6.8720[J] Principles of Synthetic Biology
", ,0,"()
(Same subject as 20.405[J])(Subject meets with 6.8721[J], 20.305[J])
Prereq: None
Units: 3-0-9
Lecture: TR2 (3-333)

Introduces the basics of synthetic biology, including quantitative cellular network characterization and modeling. Considers the discovery and genetic factoring of useful cellular activities into reusable functions for design. Emphasizes the principles of biomolecular system design and diagnosis of designed systems. Illustrates cutting-edge applications in synthetic biology and enhances skills in analysis and design of synthetic biological applications. Students taking graduate version complete additional assignments.
R. WeissNo textbook information available"
Communication,"Students will improve their ability to communicate their ideas and findings related to synthetic biology, both verbally and in writing.","6.8720[J] Principles of Synthetic Biology
",1,Fall 2023,Communication,"6.8720[J] Principles of Synthetic Biology
", ,0,"()
(Same subject as 20.405[J])(Subject meets with 6.8721[J], 20.305[J])
Prereq: None
Units: 3-0-9
Lecture: TR2 (3-333)

Introduces the basics of synthetic biology, including quantitative cellular network characterization and modeling. Considers the discovery and genetic factoring of useful cellular activities into reusable functions for design. Emphasizes the principles of biomolecular system design and diagnosis of designed systems. Illustrates cutting-edge applications in synthetic biology and enhances skills in analysis and design of synthetic biological applications. Students taking graduate version complete additional assignments.
R. WeissNo textbook information available"
Collaboration,Students will develop the ability to work effectively in teams and collaborate with others on synthetic biology projects.,"6.8720[J] Principles of Synthetic Biology
",1,Fall 2023,Collaboration and Teamwork,"6.8720[J] Principles of Synthetic Biology
", ,0,"()
(Same subject as 20.405[J])(Subject meets with 6.8721[J], 20.305[J])
Prereq: None
Units: 3-0-9
Lecture: TR2 (3-333)

Introduces the basics of synthetic biology, including quantitative cellular network characterization and modeling. Considers the discovery and genetic factoring of useful cellular activities into reusable functions for design. Emphasizes the principles of biomolecular system design and diagnosis of designed systems. Illustrates cutting-edge applications in synthetic biology and enhances skills in analysis and design of synthetic biological applications. Students taking graduate version complete additional assignments.
R. WeissNo textbook information available"
Critical thinking,Students will enhance their ability to think critically and evaluate the effectiveness and feasibility of different approaches in synthetic biology.,"6.8720[J] Principles of Synthetic Biology
",1,Fall 2023,Thinking Skills,"6.8720[J] Principles of Synthetic Biology
", ,0,"()
(Same subject as 20.405[J])(Subject meets with 6.8721[J], 20.305[J])
Prereq: None
Units: 3-0-9
Lecture: TR2 (3-333)

Introduces the basics of synthetic biology, including quantitative cellular network characterization and modeling. Considers the discovery and genetic factoring of useful cellular activities into reusable functions for design. Emphasizes the principles of biomolecular system design and diagnosis of designed systems. Illustrates cutting-edge applications in synthetic biology and enhances skills in analysis and design of synthetic biological applications. Students taking graduate version complete additional assignments.
R. WeissNo textbook information available"
Analysis,Students will develop the ability to analyze cellular networks and biomolecular systems in synthetic biology.,"6.8721[J] Principles of Synthetic Biology
",1,Fall 2023,Analysis,"6.8721[J] Principles of Synthetic Biology
", ,0,"()
(Same subject as 20.305[J])(Subject meets with 6.8720[J], 20.405[J])
Prereq: None
Units: 3-0-9
Lecture: TR2 (3-333)

Introduces the basics of synthetic biology, including quantitative cellular network characterization and modeling. Considers the discovery and genetic factoring of useful cellular activities into reusable functions for design. Emphasizes the principles of biomolecular system design and diagnosis of designed systems. Illustrates cutting-edge applications in synthetic biology and enhances skills in analysis and design of synthetic biological applications. Students taking graduate version complete additional assignments.
R. WeissNo textbook information available

Biomedical & Health"
Design,Students will enhance their ability to design biomolecular systems for synthetic biological applications.,"6.8721[J] Principles of Synthetic Biology
",1,Fall 2023,Design,"6.8721[J] Principles of Synthetic Biology
", ,0,"()
(Same subject as 20.305[J])(Subject meets with 6.8720[J], 20.405[J])
Prereq: None
Units: 3-0-9
Lecture: TR2 (3-333)

Introduces the basics of synthetic biology, including quantitative cellular network characterization and modeling. Considers the discovery and genetic factoring of useful cellular activities into reusable functions for design. Emphasizes the principles of biomolecular system design and diagnosis of designed systems. Illustrates cutting-edge applications in synthetic biology and enhances skills in analysis and design of synthetic biological applications. Students taking graduate version complete additional assignments.
R. WeissNo textbook information available

Biomedical & Health"
Communication,Students will improve their ability to communicate their analysis and design of synthetic biological systems verbally and in writing.,"6.8721[J] Principles of Synthetic Biology
",1,Fall 2023,Communication,"6.8721[J] Principles of Synthetic Biology
", ,0,"()
(Same subject as 20.305[J])(Subject meets with 6.8720[J], 20.405[J])
Prereq: None
Units: 3-0-9
Lecture: TR2 (3-333)

Introduces the basics of synthetic biology, including quantitative cellular network characterization and modeling. Considers the discovery and genetic factoring of useful cellular activities into reusable functions for design. Emphasizes the principles of biomolecular system design and diagnosis of designed systems. Illustrates cutting-edge applications in synthetic biology and enhances skills in analysis and design of synthetic biological applications. Students taking graduate version complete additional assignments.
R. WeissNo textbook information available

Biomedical & Health"
Research,Students will develop the ability to conduct research in the field of synthetic biology.,"6.8721[J] Principles of Synthetic Biology
",1,Fall 2023,Research,"6.8721[J] Principles of Synthetic Biology
", ,0,"()
(Same subject as 20.305[J])(Subject meets with 6.8720[J], 20.405[J])
Prereq: None
Units: 3-0-9
Lecture: TR2 (3-333)

Introduces the basics of synthetic biology, including quantitative cellular network characterization and modeling. Considers the discovery and genetic factoring of useful cellular activities into reusable functions for design. Emphasizes the principles of biomolecular system design and diagnosis of designed systems. Illustrates cutting-edge applications in synthetic biology and enhances skills in analysis and design of synthetic biological applications. Students taking graduate version complete additional assignments.
R. WeissNo textbook information available

Biomedical & Health"
Collaboration,Students will enhance their ability to collaborate with others in analyzing and designing synthetic biological applications.,"6.8721[J] Principles of Synthetic Biology
",1,Fall 2023,Collaboration and Teamwork,"6.8721[J] Principles of Synthetic Biology
", ,0,"()
(Same subject as 20.305[J])(Subject meets with 6.8720[J], 20.405[J])
Prereq: None
Units: 3-0-9
Lecture: TR2 (3-333)

Introduces the basics of synthetic biology, including quantitative cellular network characterization and modeling. Considers the discovery and genetic factoring of useful cellular activities into reusable functions for design. Emphasizes the principles of biomolecular system design and diagnosis of designed systems. Illustrates cutting-edge applications in synthetic biology and enhances skills in analysis and design of synthetic biological applications. Students taking graduate version complete additional assignments.
R. WeissNo textbook information available

Biomedical & Health"
Problem-solving,"Students will develop the ability to solve complex problems related to biomedical systems, including identifying and addressing challenges in data analysis and image reconstruction.","6.4800[J] Biomedical Systems: Modeling and Inference
",1,Fall 2023,Problem-solving,"6.4800[J] Biomedical Systems: Modeling and Inference
", ,0,"()
(Same subject as 22.54[J])
Prereq: (6.3100 and (18.06 or 18.C06)) or permission of instructor
Units: 4-4-4

Medically motivated examples of problems in human health that engage students in systems modeling, signal analysis and inference, and design. Content draws on two domains, first by establishing a model of the human cardiovascular system with signal analysis and inference applications of electrocardiograms in health and disease. In a second topic, medical imaging by MRI is motivated by examples of common clinical decision making, followed by laboratory work with technology and instrumentation with the functionality of commercial diagnostic scanners. Students apply concepts from lectures in labs for data collection for image reconstruction, image analysis, and inference by their own design. Labs further include kits for interactive and portable low-cost devices that can be assembled by the students to demonstrate fundamental building blocks of an MRI system.
Staff"
Communication,"Students will enhance their ability to effectively communicate their findings and ideas related to biomedical systems, both verbally and in writing.","6.4800[J] Biomedical Systems: Modeling and Inference
",1,Fall 2023,Communication,"6.4800[J] Biomedical Systems: Modeling and Inference
", ,0,"()
(Same subject as 22.54[J])
Prereq: (6.3100 and (18.06 or 18.C06)) or permission of instructor
Units: 4-4-4

Medically motivated examples of problems in human health that engage students in systems modeling, signal analysis and inference, and design. Content draws on two domains, first by establishing a model of the human cardiovascular system with signal analysis and inference applications of electrocardiograms in health and disease. In a second topic, medical imaging by MRI is motivated by examples of common clinical decision making, followed by laboratory work with technology and instrumentation with the functionality of commercial diagnostic scanners. Students apply concepts from lectures in labs for data collection for image reconstruction, image analysis, and inference by their own design. Labs further include kits for interactive and portable low-cost devices that can be assembled by the students to demonstrate fundamental building blocks of an MRI system.
Staff"
Analytical thinking,"Students will develop the ability to analyze and interpret data from biomedical systems, including identifying patterns and trends.","6.4800[J] Biomedical Systems: Modeling and Inference
",1,Fall 2023,Thinking Skills,"6.4800[J] Biomedical Systems: Modeling and Inference
", ,0,"()
(Same subject as 22.54[J])
Prereq: (6.3100 and (18.06 or 18.C06)) or permission of instructor
Units: 4-4-4

Medically motivated examples of problems in human health that engage students in systems modeling, signal analysis and inference, and design. Content draws on two domains, first by establishing a model of the human cardiovascular system with signal analysis and inference applications of electrocardiograms in health and disease. In a second topic, medical imaging by MRI is motivated by examples of common clinical decision making, followed by laboratory work with technology and instrumentation with the functionality of commercial diagnostic scanners. Students apply concepts from lectures in labs for data collection for image reconstruction, image analysis, and inference by their own design. Labs further include kits for interactive and portable low-cost devices that can be assembled by the students to demonstrate fundamental building blocks of an MRI system.
Staff"
Experimental design,"Students will acquire the ability to design experiments and projects related to biomedical systems, considering factors such as data collection methods and variables.","6.4800[J] Biomedical Systems: Modeling and Inference
",1,Fall 2023,Experimental design,"6.4800[J] Biomedical Systems: Modeling and Inference
", ,0,"()
(Same subject as 22.54[J])
Prereq: (6.3100 and (18.06 or 18.C06)) or permission of instructor
Units: 4-4-4

Medically motivated examples of problems in human health that engage students in systems modeling, signal analysis and inference, and design. Content draws on two domains, first by establishing a model of the human cardiovascular system with signal analysis and inference applications of electrocardiograms in health and disease. In a second topic, medical imaging by MRI is motivated by examples of common clinical decision making, followed by laboratory work with technology and instrumentation with the functionality of commercial diagnostic scanners. Students apply concepts from lectures in labs for data collection for image reconstruction, image analysis, and inference by their own design. Labs further include kits for interactive and portable low-cost devices that can be assembled by the students to demonstrate fundamental building blocks of an MRI system.
Staff"
Critical thinking,Students will enhance their ability to think critically and evaluate the validity and reliability of results obtained from biomedical systems experiments and analyses.,"6.4800[J] Biomedical Systems: Modeling and Inference
",1,Fall 2023,Thinking Skills,"6.4800[J] Biomedical Systems: Modeling and Inference
", ,0,"()
(Same subject as 22.54[J])
Prereq: (6.3100 and (18.06 or 18.C06)) or permission of instructor
Units: 4-4-4

Medically motivated examples of problems in human health that engage students in systems modeling, signal analysis and inference, and design. Content draws on two domains, first by establishing a model of the human cardiovascular system with signal analysis and inference applications of electrocardiograms in health and disease. In a second topic, medical imaging by MRI is motivated by examples of common clinical decision making, followed by laboratory work with technology and instrumentation with the functionality of commercial diagnostic scanners. Students apply concepts from lectures in labs for data collection for image reconstruction, image analysis, and inference by their own design. Labs further include kits for interactive and portable low-cost devices that can be assembled by the students to demonstrate fundamental building blocks of an MRI system.
Staff"
Problem-solving,Students will develop the ability to analyze and solve problems related to cellular neurophysiology and computing.,"6.4810[J] Cellular Neurophysiology and Computing
",1,Fall 2023,Problem-solving,"6.4810[J] Cellular Neurophysiology and Computing
", ,0,"()
(Same subject as 2.791[J], 9.21[J], 20.370[J])(Subject meets with 2.794[J], 6.4812[J], 9.021[J], 20.470[J], HST.541[J])
Prereq: (Physics II (GIR), 18.03, and (2.005, 6.2000, 6.3000, 10.301, or 20.110)) or permission of instructor
Units: 5-2-5

Integrated overview of the biophysics of cells from prokaryotes to neurons, with a focus on mass transport and electrical signal generation across cell membrane. First third of course focuses on mass transport through membranes: diffusion, osmosis, chemically mediated, and active transport. Second third focuses on electrical properties of cells: ion transport to action potential generation and propagation in electrically excitable cells. Synaptic transmission. Electrical properties interpreted via kinetic and molecular properties of single voltage-gated ion channels. Final third focuses on biophysics of synaptic transmission and introduction to neural computing. Laboratory and computer exercises illustrate the concepts. Students taking graduate version complete different assignments. Preference to juniors and seniors.
Staff"
Communication,Students will enhance their ability to effectively communicate their findings and ideas related to cellular neurophysiology and computing.,"6.4810[J] Cellular Neurophysiology and Computing
",1,Fall 2023,Communication,"6.4810[J] Cellular Neurophysiology and Computing
", ,0,"()
(Same subject as 2.791[J], 9.21[J], 20.370[J])(Subject meets with 2.794[J], 6.4812[J], 9.021[J], 20.470[J], HST.541[J])
Prereq: (Physics II (GIR), 18.03, and (2.005, 6.2000, 6.3000, 10.301, or 20.110)) or permission of instructor
Units: 5-2-5

Integrated overview of the biophysics of cells from prokaryotes to neurons, with a focus on mass transport and electrical signal generation across cell membrane. First third of course focuses on mass transport through membranes: diffusion, osmosis, chemically mediated, and active transport. Second third focuses on electrical properties of cells: ion transport to action potential generation and propagation in electrically excitable cells. Synaptic transmission. Electrical properties interpreted via kinetic and molecular properties of single voltage-gated ion channels. Final third focuses on biophysics of synaptic transmission and introduction to neural computing. Laboratory and computer exercises illustrate the concepts. Students taking graduate version complete different assignments. Preference to juniors and seniors.
Staff"
Problem-solving,Students will develop the ability to apply their knowledge and skills to solve problems related to cellular neurophysiology and biophysics.,"6.4812[J] Cellular Neurophysiology and Computing
",1,Fall 2023,Problem-solving,"6.4812[J] Cellular Neurophysiology and Computing
", ,0,"()
(Same subject as 2.794[J], 9.021[J], 20.470[J], HST.541[J])(Subject meets with 2.791[J], 6.4810[J], 9.21[J], 20.370[J])
Prereq: (Physics II (GIR), 18.03, and (2.005, 6.2000, 6.3000, 10.301, or 20.110)) or permission of instructor
Units: 5-2-5

Integrated overview of the biophysics of cells from prokaryotes to neurons, with a focus on mass transport and electrical signal generation across cell membrane. First third of course focuses on mass transport through membranes: diffusion, osmosis, chemically mediated, and active transport. Second third focuses on electrical properties of cells: ion transport to action potential generation and propagation in electrically excitable cells. Synaptic transmission. Electrical properties interpreted via kinetic and molecular properties of single voltage-gated ion channels. Final third focuses on biophysics of synaptic transmission and introduction to neural computing. Laboratory and computer exercises illustrate the concepts. Students taking graduate version complete different assignments.
Staff"
Critical thinking,Students will enhance their ability to think critically and analyze complex scientific concepts and experimental data.,"6.4812[J] Cellular Neurophysiology and Computing
",1,Fall 2023,Thinking Skills,"6.4812[J] Cellular Neurophysiology and Computing
", ,0,"()
(Same subject as 2.794[J], 9.021[J], 20.470[J], HST.541[J])(Subject meets with 2.791[J], 6.4810[J], 9.21[J], 20.370[J])
Prereq: (Physics II (GIR), 18.03, and (2.005, 6.2000, 6.3000, 10.301, or 20.110)) or permission of instructor
Units: 5-2-5

Integrated overview of the biophysics of cells from prokaryotes to neurons, with a focus on mass transport and electrical signal generation across cell membrane. First third of course focuses on mass transport through membranes: diffusion, osmosis, chemically mediated, and active transport. Second third focuses on electrical properties of cells: ion transport to action potential generation and propagation in electrically excitable cells. Synaptic transmission. Electrical properties interpreted via kinetic and molecular properties of single voltage-gated ion channels. Final third focuses on biophysics of synaptic transmission and introduction to neural computing. Laboratory and computer exercises illustrate the concepts. Students taking graduate version complete different assignments.
Staff"
Experimental design,Students will develop the ability to design and plan experiments to investigate cellular neurophysiology.,"6.4812[J] Cellular Neurophysiology and Computing
",1,Fall 2023,Experimental design,"6.4812[J] Cellular Neurophysiology and Computing
", ,0,"()
(Same subject as 2.794[J], 9.021[J], 20.470[J], HST.541[J])(Subject meets with 2.791[J], 6.4810[J], 9.21[J], 20.370[J])
Prereq: (Physics II (GIR), 18.03, and (2.005, 6.2000, 6.3000, 10.301, or 20.110)) or permission of instructor
Units: 5-2-5

Integrated overview of the biophysics of cells from prokaryotes to neurons, with a focus on mass transport and electrical signal generation across cell membrane. First third of course focuses on mass transport through membranes: diffusion, osmosis, chemically mediated, and active transport. Second third focuses on electrical properties of cells: ion transport to action potential generation and propagation in electrically excitable cells. Synaptic transmission. Electrical properties interpreted via kinetic and molecular properties of single voltage-gated ion channels. Final third focuses on biophysics of synaptic transmission and introduction to neural computing. Laboratory and computer exercises illustrate the concepts. Students taking graduate version complete different assignments.
Staff"
Scientific writing,Students will improve their ability to communicate scientific ideas and findings through effective scientific writing.,"6.4812[J] Cellular Neurophysiology and Computing
",1,Fall 2023,Scientific writing,"6.4812[J] Cellular Neurophysiology and Computing
", ,0,"()
(Same subject as 2.794[J], 9.021[J], 20.470[J], HST.541[J])(Subject meets with 2.791[J], 6.4810[J], 9.21[J], 20.370[J])
Prereq: (Physics II (GIR), 18.03, and (2.005, 6.2000, 6.3000, 10.301, or 20.110)) or permission of instructor
Units: 5-2-5

Integrated overview of the biophysics of cells from prokaryotes to neurons, with a focus on mass transport and electrical signal generation across cell membrane. First third of course focuses on mass transport through membranes: diffusion, osmosis, chemically mediated, and active transport. Second third focuses on electrical properties of cells: ion transport to action potential generation and propagation in electrically excitable cells. Synaptic transmission. Electrical properties interpreted via kinetic and molecular properties of single voltage-gated ion channels. Final third focuses on biophysics of synaptic transmission and introduction to neural computing. Laboratory and computer exercises illustrate the concepts. Students taking graduate version complete different assignments.
Staff"
Collaboration,"Students will develop the ability to work collaboratively in laboratory settings and research projects, fostering teamwork and cooperation.","6.4812[J] Cellular Neurophysiology and Computing
",1,Fall 2023,Collaboration and Teamwork,"6.4812[J] Cellular Neurophysiology and Computing
", ,0,"()
(Same subject as 2.794[J], 9.021[J], 20.470[J], HST.541[J])(Subject meets with 2.791[J], 6.4810[J], 9.21[J], 20.370[J])
Prereq: (Physics II (GIR), 18.03, and (2.005, 6.2000, 6.3000, 10.301, or 20.110)) or permission of instructor
Units: 5-2-5

Integrated overview of the biophysics of cells from prokaryotes to neurons, with a focus on mass transport and electrical signal generation across cell membrane. First third of course focuses on mass transport through membranes: diffusion, osmosis, chemically mediated, and active transport. Second third focuses on electrical properties of cells: ion transport to action potential generation and propagation in electrically excitable cells. Synaptic transmission. Electrical properties interpreted via kinetic and molecular properties of single voltage-gated ion channels. Final third focuses on biophysics of synaptic transmission and introduction to neural computing. Laboratory and computer exercises illustrate the concepts. Students taking graduate version complete different assignments.
Staff"
Critical thinking,Students will develop the ability to think critically and apply their knowledge to analyze and solve problems related to quantitative and clinical physiology.,"6.4820[J] Quantitative and Clinical Physiology
",1,Fall 2023,Thinking Skills,"6.4820[J] Quantitative and Clinical Physiology
", ,0,"()
(Same subject as 2.792[J], HST.542[J])(Subject meets with 2.796[J], 6.4822[J])
Prereq: Physics II (GIR), 18.03, or permission of instructor
Units: 4-2-6
Lecture: TR9.30-11 (4-265) Recitation: W1 (34-301) or W2 (34-301)

Application of the principles of energy and mass flow to major human organ systems. Anatomical, physiological and clinical features of the cardiovascular, respiratory and renal systems. Mechanisms of regulation and homeostasis. Systems, features and devices that are most illuminated by the methods of physical sciences and engineering models. Required laboratory work includes animal studies. Students taking graduate version complete additional assignments.
T. Heldt, R. G. MarkTextbooks (Fall 2023)"
Research skills,Students will enhance their ability to conduct research and gather relevant information in the field of quantitative and clinical physiology.,"6.4820[J] Quantitative and Clinical Physiology
",1,Fall 2023,Skills in Research and Technical Skills,"6.4820[J] Quantitative and Clinical Physiology
", ,0,"()
(Same subject as 2.792[J], HST.542[J])(Subject meets with 2.796[J], 6.4822[J])
Prereq: Physics II (GIR), 18.03, or permission of instructor
Units: 4-2-6
Lecture: TR9.30-11 (4-265) Recitation: W1 (34-301) or W2 (34-301)

Application of the principles of energy and mass flow to major human organ systems. Anatomical, physiological and clinical features of the cardiovascular, respiratory and renal systems. Mechanisms of regulation and homeostasis. Systems, features and devices that are most illuminated by the methods of physical sciences and engineering models. Required laboratory work includes animal studies. Students taking graduate version complete additional assignments.
T. Heldt, R. G. MarkTextbooks (Fall 2023)"
Critical thinking,Students will develop the ability to think critically and apply their knowledge to analyze and solve problems related to organ transport systems.,"6.4822[J] Quantitative Physiology: Organ Transport Systems
",1,Fall 2023,Thinking Skills,"6.4822[J] Quantitative Physiology: Organ Transport Systems
", ,0,"()
(Same subject as 2.796[J])(Subject meets with 2.792[J], 6.4820[J], HST.542[J])
Prereq: 6.4810 and (2.006 or 6.2300)
Units: 4-2-6
Lecture: TR9.30-11 (4-265) Recitation: W1 (34-301) or W2 (34-301)

Application of the principles of energy and mass flow to major human organ systems. Anatomical, physiological and clinical features of the cardiovascular, respiratory and renal systems. Mechanisms of regulation and homeostasis. Systems, features and devices that are most illuminated by the methods of physical sciences and engineering models. Required laboratory work includes animal studies. Students taking graduate version complete additional assignments.
T. Heldt, R. G. MarkTextbooks (Fall 2023)"
Research skills,Students will enhance their ability to conduct research and gather relevant information on the mechanisms of regulation and homeostasis in human organ systems.,"6.4822[J] Quantitative Physiology: Organ Transport Systems
",1,Fall 2023,Skills in Research and Technical Skills,"6.4822[J] Quantitative Physiology: Organ Transport Systems
", ,0,"()
(Same subject as 2.796[J])(Subject meets with 2.792[J], 6.4820[J], HST.542[J])
Prereq: 6.4810 and (2.006 or 6.2300)
Units: 4-2-6
Lecture: TR9.30-11 (4-265) Recitation: W1 (34-301) or W2 (34-301)

Application of the principles of energy and mass flow to major human organ systems. Anatomical, physiological and clinical features of the cardiovascular, respiratory and renal systems. Mechanisms of regulation and homeostasis. Systems, features and devices that are most illuminated by the methods of physical sciences and engineering models. Required laboratory work includes animal studies. Students taking graduate version complete additional assignments.
T. Heldt, R. G. MarkTextbooks (Fall 2023)"
Critical thinking,Students will enhance their ability to think critically and apply scientific principles to solve problems related to biological systems.,"6.4830[J] Fields, Forces and Flows in Biological Systems
",1,Fall 2023,Thinking Skills,"6.4830[J] Fields, Forces and Flows in Biological Systems
", ,0,"()
(Same subject as 2.793[J], 20.330[J])
Prereq: Biology (GIR), Physics II (GIR), and 18.03
Units: 4-0-8

Introduction to electric fields, fluid flows, transport phenomena and their application to biological systems. Flux and continuity laws, Maxwell's equations, electro-quasistatics, electro-chemical-mechanical driving forces, conservation of mass and momentum, Navier-Stokes flows, and electrokinetics. Applications include biomolecular transport in tissues, electrophoresis, and microfluidics.
J. Han, S. Manalis"
Experimental design,"Students will develop the ability to design experiments to investigate electric fields, fluid flows, and transport phenomena in biological systems.","6.4830[J] Fields, Forces and Flows in Biological Systems
",1,Fall 2023,Experimental design,"6.4830[J] Fields, Forces and Flows in Biological Systems
", ,0,"()
(Same subject as 2.793[J], 20.330[J])
Prereq: Biology (GIR), Physics II (GIR), and 18.03
Units: 4-0-8

Introduction to electric fields, fluid flows, transport phenomena and their application to biological systems. Flux and continuity laws, Maxwell's equations, electro-quasistatics, electro-chemical-mechanical driving forces, conservation of mass and momentum, Navier-Stokes flows, and electrokinetics. Applications include biomolecular transport in tissues, electrophoresis, and microfluidics.
J. Han, S. Manalis"
Analytical thinking,Students will develop the ability to analyze complex biological systems and phenomena.,"6.4832[J] Fields, Forces, and Flows in Biological Systems
",1,Fall 2023,Thinking Skills,"6.4832[J] Fields, Forces, and Flows in Biological Systems
", ,0,"()
(Same subject as 2.795[J], 10.539[J], 20.430[J])
Prereq: Permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (4-231)

Molecular diffusion, diffusion-reaction, conduction, convection in biological systems; fields in heterogeneous media; electrical double layers; Maxwell stress tensor, electrical forces in physiological systems. Fluid and solid continua: equations of motion useful for porous, hydrated biological tissues. Case studies of membrane transport, electrode interfaces, electrical, mechanical, and chemical transduction in tissues, convective-diffusion/reaction, electrophoretic, electroosmotic flows in tissues/MEMs, and ECG. Electromechanical and physicochemical interactions in cells and biomaterials; musculoskeletal, cardiovascular, and other biological and clinical examples. Prior undergraduate coursework in transport recommended.
M. Bathe, A. HansenNo textbook information available"
Scientific reasoning,Students will enhance their ability to apply scientific reasoning in understanding and explaining biological phenomena.,"6.4832[J] Fields, Forces, and Flows in Biological Systems
",1,Fall 2023,Reasoning and Problem Solving,"6.4832[J] Fields, Forces, and Flows in Biological Systems
", ,0,"()
(Same subject as 2.795[J], 10.539[J], 20.430[J])
Prereq: Permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (4-231)

Molecular diffusion, diffusion-reaction, conduction, convection in biological systems; fields in heterogeneous media; electrical double layers; Maxwell stress tensor, electrical forces in physiological systems. Fluid and solid continua: equations of motion useful for porous, hydrated biological tissues. Case studies of membrane transport, electrode interfaces, electrical, mechanical, and chemical transduction in tissues, convective-diffusion/reaction, electrophoretic, electroosmotic flows in tissues/MEMs, and ECG. Electromechanical and physicochemical interactions in cells and biomaterials; musculoskeletal, cardiovascular, and other biological and clinical examples. Prior undergraduate coursework in transport recommended.
M. Bathe, A. HansenNo textbook information available"
Experimental design,Students will develop the ability to design and conduct experiments to investigate biological systems.,"6.4832[J] Fields, Forces, and Flows in Biological Systems
",1,Fall 2023,Experimental design,"6.4832[J] Fields, Forces, and Flows in Biological Systems
", ,0,"()
(Same subject as 2.795[J], 10.539[J], 20.430[J])
Prereq: Permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (4-231)

Molecular diffusion, diffusion-reaction, conduction, convection in biological systems; fields in heterogeneous media; electrical double layers; Maxwell stress tensor, electrical forces in physiological systems. Fluid and solid continua: equations of motion useful for porous, hydrated biological tissues. Case studies of membrane transport, electrode interfaces, electrical, mechanical, and chemical transduction in tissues, convective-diffusion/reaction, electrophoretic, electroosmotic flows in tissues/MEMs, and ECG. Electromechanical and physicochemical interactions in cells and biomaterials; musculoskeletal, cardiovascular, and other biological and clinical examples. Prior undergraduate coursework in transport recommended.
M. Bathe, A. HansenNo textbook information available"
Data interpretation,Students will acquire the ability to interpret and analyze data obtained from experiments and simulations.,"6.4832[J] Fields, Forces, and Flows in Biological Systems
",1,Fall 2023,Data Analysis and Interpretation,"6.4832[J] Fields, Forces, and Flows in Biological Systems
", ,0,"()
(Same subject as 2.795[J], 10.539[J], 20.430[J])
Prereq: Permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (4-231)

Molecular diffusion, diffusion-reaction, conduction, convection in biological systems; fields in heterogeneous media; electrical double layers; Maxwell stress tensor, electrical forces in physiological systems. Fluid and solid continua: equations of motion useful for porous, hydrated biological tissues. Case studies of membrane transport, electrode interfaces, electrical, mechanical, and chemical transduction in tissues, convective-diffusion/reaction, electrophoretic, electroosmotic flows in tissues/MEMs, and ECG. Electromechanical and physicochemical interactions in cells and biomaterials; musculoskeletal, cardiovascular, and other biological and clinical examples. Prior undergraduate coursework in transport recommended.
M. Bathe, A. HansenNo textbook information available"
Collaboration,Students will enhance their ability to collaborate and work effectively in interdisciplinary teams to solve biological problems.,"6.4832[J] Fields, Forces, and Flows in Biological Systems
",1,Fall 2023,Collaboration and Teamwork,"6.4832[J] Fields, Forces, and Flows in Biological Systems
", ,0,"()
(Same subject as 2.795[J], 10.539[J], 20.430[J])
Prereq: Permission of instructor
Units: 3-0-9
Lecture: TR1-2.30 (4-231)

Molecular diffusion, diffusion-reaction, conduction, convection in biological systems; fields in heterogeneous media; electrical double layers; Maxwell stress tensor, electrical forces in physiological systems. Fluid and solid continua: equations of motion useful for porous, hydrated biological tissues. Case studies of membrane transport, electrode interfaces, electrical, mechanical, and chemical transduction in tissues, convective-diffusion/reaction, electrophoretic, electroosmotic flows in tissues/MEMs, and ECG. Electromechanical and physicochemical interactions in cells and biomaterials; musculoskeletal, cardiovascular, and other biological and clinical examples. Prior undergraduate coursework in transport recommended.
M. Bathe, A. HansenNo textbook information available"
Critical thinking,"Students will enhance their ability to think critically and analyze complex biomechanical phenomena, enabling them to evaluate and interpret experimental data and scientific literature.","6.4840[J] Molecular, Cellular, and Tissue Biomechanics
",1,Fall 2023,Thinking Skills,"6.4840[J] Molecular, Cellular, and Tissue Biomechanics
", ,0,"()
(Same subject as 2.797[J], 3.053[J], 20.310[J])(Subject meets with 2.798[J], 3.971[J], 6.4842[J], 10.537[J], 20.410[J])
Prereq: Biology (GIR) and 18.03
Units: 4-0-8

Develops and applies scaling laws and the methods of continuum mechanics to biomechanical phenomena over a range of length scales. Topics include structure of tissues and the molecular basis for macroscopic properties; chemical and electrical effects on mechanical behavior; cell mechanics, motility and adhesion; biomembranes; biomolecular mechanics and molecular motors. Experimental methods for probing structures at the tissue, cellular, and molecular levels. Students taking graduate version complete additional assignments.
M. Bathe, P. So"
Research skills,"Students will develop the ability to conduct research in the field of biomechanics, including designing experiments, collecting and analyzing data, and drawing conclusions based on scientific evidence.","6.4840[J] Molecular, Cellular, and Tissue Biomechanics
",1,Fall 2023,Skills in Research and Technical Skills,"6.4840[J] Molecular, Cellular, and Tissue Biomechanics
", ,0,"()
(Same subject as 2.797[J], 3.053[J], 20.310[J])(Subject meets with 2.798[J], 3.971[J], 6.4842[J], 10.537[J], 20.410[J])
Prereq: Biology (GIR) and 18.03
Units: 4-0-8

Develops and applies scaling laws and the methods of continuum mechanics to biomechanical phenomena over a range of length scales. Topics include structure of tissues and the molecular basis for macroscopic properties; chemical and electrical effects on mechanical behavior; cell mechanics, motility and adhesion; biomembranes; biomolecular mechanics and molecular motors. Experimental methods for probing structures at the tissue, cellular, and molecular levels. Students taking graduate version complete additional assignments.
M. Bathe, P. So"
Communication,"Students will enhance their ability to effectively communicate their findings and ideas related to biomechanics, both orally and in written form, to scientific and non-scientific audiences.","6.4840[J] Molecular, Cellular, and Tissue Biomechanics
",1,Fall 2023,Communication,"6.4840[J] Molecular, Cellular, and Tissue Biomechanics
", ,0,"()
(Same subject as 2.797[J], 3.053[J], 20.310[J])(Subject meets with 2.798[J], 3.971[J], 6.4842[J], 10.537[J], 20.410[J])
Prereq: Biology (GIR) and 18.03
Units: 4-0-8

Develops and applies scaling laws and the methods of continuum mechanics to biomechanical phenomena over a range of length scales. Topics include structure of tissues and the molecular basis for macroscopic properties; chemical and electrical effects on mechanical behavior; cell mechanics, motility and adhesion; biomembranes; biomolecular mechanics and molecular motors. Experimental methods for probing structures at the tissue, cellular, and molecular levels. Students taking graduate version complete additional assignments.
M. Bathe, P. So"
Collaboration,"Students will develop the ability to work collaboratively in teams, as biomechanics research often requires interdisciplinary approaches and cooperation between researchers with different expertise.","6.4840[J] Molecular, Cellular, and Tissue Biomechanics
",1,Fall 2023,Collaboration and Teamwork,"6.4840[J] Molecular, Cellular, and Tissue Biomechanics
", ,0,"()
(Same subject as 2.797[J], 3.053[J], 20.310[J])(Subject meets with 2.798[J], 3.971[J], 6.4842[J], 10.537[J], 20.410[J])
Prereq: Biology (GIR) and 18.03
Units: 4-0-8

Develops and applies scaling laws and the methods of continuum mechanics to biomechanical phenomena over a range of length scales. Topics include structure of tissues and the molecular basis for macroscopic properties; chemical and electrical effects on mechanical behavior; cell mechanics, motility and adhesion; biomembranes; biomolecular mechanics and molecular motors. Experimental methods for probing structures at the tissue, cellular, and molecular levels. Students taking graduate version complete additional assignments.
M. Bathe, P. So"
Ethical considerations,"Students will gain an understanding of the ethical considerations and responsibilities associated with conducting research in the field of biomechanics, including the responsible use of human and animal subjects and the proper handling of scientific data.","6.4840[J] Molecular, Cellular, and Tissue Biomechanics
",1,Fall 2023,Ethical considerations,"6.4840[J] Molecular, Cellular, and Tissue Biomechanics
", ,0,"()
(Same subject as 2.797[J], 3.053[J], 20.310[J])(Subject meets with 2.798[J], 3.971[J], 6.4842[J], 10.537[J], 20.410[J])
Prereq: Biology (GIR) and 18.03
Units: 4-0-8

Develops and applies scaling laws and the methods of continuum mechanics to biomechanical phenomena over a range of length scales. Topics include structure of tissues and the molecular basis for macroscopic properties; chemical and electrical effects on mechanical behavior; cell mechanics, motility and adhesion; biomembranes; biomolecular mechanics and molecular motors. Experimental methods for probing structures at the tissue, cellular, and molecular levels. Students taking graduate version complete additional assignments.
M. Bathe, P. So"
Problem-solving,"Students will develop the ability to solve complex problems related to biomechanics, which involves analyzing data, identifying patterns, and applying appropriate techniques and models.","6.4842[J] Molecular, Cellular, and Tissue Biomechanics
",1,Fall 2023,Problem-solving,"6.4842[J] Molecular, Cellular, and Tissue Biomechanics
", ,0,"()
(Same subject as 2.798[J], 3.971[J], 10.537[J], 20.410[J])(Subject meets with 2.797[J], 3.053[J], 6.4840[J], 20.310[J])
Prereq: Biology (GIR) and 18.03
Units: 3-0-9

Develops and applies scaling laws and the methods of continuum mechanics to biomechanical phenomena over a range of length scales. Topics include structure of tissues and the molecular basis for macroscopic properties; chemical and electrical effects on mechanical behavior; cell mechanics, motility and adhesion; biomembranes; biomolecular mechanics and molecular motors. Experimental methods for probing structures at the tissue, cellular, and molecular levels. Students taking graduate version complete additional assignments.
M. Bathe, P. So"
Communication,"Students will enhance their ability to effectively communicate scientific concepts and findings related to biomechanics, both verbally and in writing, which is essential for presenting research findings and collaborating with peers.","6.4842[J] Molecular, Cellular, and Tissue Biomechanics
",1,Fall 2023,Communication,"6.4842[J] Molecular, Cellular, and Tissue Biomechanics
", ,0,"()
(Same subject as 2.798[J], 3.971[J], 10.537[J], 20.410[J])(Subject meets with 2.797[J], 3.053[J], 6.4840[J], 20.310[J])
Prereq: Biology (GIR) and 18.03
Units: 3-0-9

Develops and applies scaling laws and the methods of continuum mechanics to biomechanical phenomena over a range of length scales. Topics include structure of tissues and the molecular basis for macroscopic properties; chemical and electrical effects on mechanical behavior; cell mechanics, motility and adhesion; biomembranes; biomolecular mechanics and molecular motors. Experimental methods for probing structures at the tissue, cellular, and molecular levels. Students taking graduate version complete additional assignments.
M. Bathe, P. So"
Data analysis,"Students will develop the ability to analyze and interpret experimental data in the field of biomechanics, which involves applying statistical methods, visualizing data, and drawing meaningful conclusions.","6.4842[J] Molecular, Cellular, and Tissue Biomechanics
",1,Fall 2023,Data Analysis and Interpretation,"6.4842[J] Molecular, Cellular, and Tissue Biomechanics
", ,0,"()
(Same subject as 2.798[J], 3.971[J], 10.537[J], 20.410[J])(Subject meets with 2.797[J], 3.053[J], 6.4840[J], 20.310[J])
Prereq: Biology (GIR) and 18.03
Units: 3-0-9

Develops and applies scaling laws and the methods of continuum mechanics to biomechanical phenomena over a range of length scales. Topics include structure of tissues and the molecular basis for macroscopic properties; chemical and electrical effects on mechanical behavior; cell mechanics, motility and adhesion; biomembranes; biomolecular mechanics and molecular motors. Experimental methods for probing structures at the tissue, cellular, and molecular levels. Students taking graduate version complete additional assignments.
M. Bathe, P. So"
Critical thinking,"Students will enhance their ability to think critically and evaluate scientific literature and research in the field of biomechanics, which involves analyzing arguments, identifying strengths and weaknesses, and forming evidence-based conclusions.","6.4842[J] Molecular, Cellular, and Tissue Biomechanics
",1,Fall 2023,Thinking Skills,"6.4842[J] Molecular, Cellular, and Tissue Biomechanics
", ,0,"()
(Same subject as 2.798[J], 3.971[J], 10.537[J], 20.410[J])(Subject meets with 2.797[J], 3.053[J], 6.4840[J], 20.310[J])
Prereq: Biology (GIR) and 18.03
Units: 3-0-9

Develops and applies scaling laws and the methods of continuum mechanics to biomechanical phenomena over a range of length scales. Topics include structure of tissues and the molecular basis for macroscopic properties; chemical and electrical effects on mechanical behavior; cell mechanics, motility and adhesion; biomembranes; biomolecular mechanics and molecular motors. Experimental methods for probing structures at the tissue, cellular, and molecular levels. Students taking graduate version complete additional assignments.
M. Bathe, P. So"
Research skills,"Students will acquire research skills in the field of biomechanics, including literature review, experimental design, data collection, and data interpretation, which are essential for conducting independent research and contributing to the field.","6.4842[J] Molecular, Cellular, and Tissue Biomechanics
",1,Fall 2023,Skills in Research and Technical Skills,"6.4842[J] Molecular, Cellular, and Tissue Biomechanics
", ,0,"()
(Same subject as 2.798[J], 3.971[J], 10.537[J], 20.410[J])(Subject meets with 2.797[J], 3.053[J], 6.4840[J], 20.310[J])
Prereq: Biology (GIR) and 18.03
Units: 3-0-9

Develops and applies scaling laws and the methods of continuum mechanics to biomechanical phenomena over a range of length scales. Topics include structure of tissues and the molecular basis for macroscopic properties; chemical and electrical effects on mechanical behavior; cell mechanics, motility and adhesion; biomembranes; biomolecular mechanics and molecular motors. Experimental methods for probing structures at the tissue, cellular, and molecular levels. Students taking graduate version complete additional assignments.
M. Bathe, P. So"
Problem-solving,Students will develop the ability to analyze and solve problems encountered during the design and development of medical devices.,"6.4860[J] Medical Device Design
",1,Fall 2023,Problem-solving,"6.4860[J] Medical Device Design
", ,0,"()
(Same subject as 2.750[J])(Subject meets with 2.75[J], 6.4861[J], HST.552[J])
Prereq: 2.008, 6.2040, 6.2050, 6.2060, 22.071, or permission of instructor
Units: 3-3-6

Provides an intense project-based learning experience around the design of medical devices with foci ranging from mechanical to electro mechanical to electronics. Projects motivated by real-world clinical challenges provided by sponsors and clinicians who also help mentor teams. Covers the design process, project management, and fundamentals of mechanical and electrical circuit and sensor design. Students work in small teams to execute a substantial term project, with emphasis placed upon developing creative designs -- via a deterministic design process -- that are developed and optimized using analytical techniques. Includes mandatory lab. Instruction and practice in written and oral communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
A. H. Slocum, E. Roche, N. C. Hanumara, G. Traverso, A. Pennes"
Written communication,Students will enhance their ability to effectively communicate their ideas and findings through written reports and documentation.,"6.4860[J] Medical Device Design
",1,Fall 2023,Communication Methods,"6.4860[J] Medical Device Design
", ,0,"()
(Same subject as 2.750[J])(Subject meets with 2.75[J], 6.4861[J], HST.552[J])
Prereq: 2.008, 6.2040, 6.2050, 6.2060, 22.071, or permission of instructor
Units: 3-3-6

Provides an intense project-based learning experience around the design of medical devices with foci ranging from mechanical to electro mechanical to electronics. Projects motivated by real-world clinical challenges provided by sponsors and clinicians who also help mentor teams. Covers the design process, project management, and fundamentals of mechanical and electrical circuit and sensor design. Students work in small teams to execute a substantial term project, with emphasis placed upon developing creative designs -- via a deterministic design process -- that are developed and optimized using analytical techniques. Includes mandatory lab. Instruction and practice in written and oral communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
A. H. Slocum, E. Roche, N. C. Hanumara, G. Traverso, A. Pennes"
Oral communication,Students will develop the ability to present their design concepts and project progress effectively through oral presentations.,"6.4860[J] Medical Device Design
",1,Fall 2023,Communication Methods,"6.4860[J] Medical Device Design
", ,0,"()
(Same subject as 2.750[J])(Subject meets with 2.75[J], 6.4861[J], HST.552[J])
Prereq: 2.008, 6.2040, 6.2050, 6.2060, 22.071, or permission of instructor
Units: 3-3-6

Provides an intense project-based learning experience around the design of medical devices with foci ranging from mechanical to electro mechanical to electronics. Projects motivated by real-world clinical challenges provided by sponsors and clinicians who also help mentor teams. Covers the design process, project management, and fundamentals of mechanical and electrical circuit and sensor design. Students work in small teams to execute a substantial term project, with emphasis placed upon developing creative designs -- via a deterministic design process -- that are developed and optimized using analytical techniques. Includes mandatory lab. Instruction and practice in written and oral communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
A. H. Slocum, E. Roche, N. C. Hanumara, G. Traverso, A. Pennes"
Teamwork,Students will enhance their ability to work collaboratively in small teams to execute term projects.,"6.4860[J] Medical Device Design
",1,Fall 2023,Collaboration and Teamwork,"6.4860[J] Medical Device Design
", ,0,"()
(Same subject as 2.750[J])(Subject meets with 2.75[J], 6.4861[J], HST.552[J])
Prereq: 2.008, 6.2040, 6.2050, 6.2060, 22.071, or permission of instructor
Units: 3-3-6

Provides an intense project-based learning experience around the design of medical devices with foci ranging from mechanical to electro mechanical to electronics. Projects motivated by real-world clinical challenges provided by sponsors and clinicians who also help mentor teams. Covers the design process, project management, and fundamentals of mechanical and electrical circuit and sensor design. Students work in small teams to execute a substantial term project, with emphasis placed upon developing creative designs -- via a deterministic design process -- that are developed and optimized using analytical techniques. Includes mandatory lab. Instruction and practice in written and oral communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
A. H. Slocum, E. Roche, N. C. Hanumara, G. Traverso, A. Pennes"
Mentorship,Students will have the opportunity to develop mentoring abilities as they assist and mentor other teams in the course.,"6.4860[J] Medical Device Design
",1,Fall 2023,,"6.4860[J] Medical Device Design
", ,0,"()
(Same subject as 2.750[J])(Subject meets with 2.75[J], 6.4861[J], HST.552[J])
Prereq: 2.008, 6.2040, 6.2050, 6.2060, 22.071, or permission of instructor
Units: 3-3-6

Provides an intense project-based learning experience around the design of medical devices with foci ranging from mechanical to electro mechanical to electronics. Projects motivated by real-world clinical challenges provided by sponsors and clinicians who also help mentor teams. Covers the design process, project management, and fundamentals of mechanical and electrical circuit and sensor design. Students work in small teams to execute a substantial term project, with emphasis placed upon developing creative designs -- via a deterministic design process -- that are developed and optimized using analytical techniques. Includes mandatory lab. Instruction and practice in written and oral communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
A. H. Slocum, E. Roche, N. C. Hanumara, G. Traverso, A. Pennes"
Problem-solving,Students will develop the ability to solve complex problems encountered during the design and development of medical devices.,"6.4861[J] Medical Device Design
",1,Fall 2023,Problem-solving,"6.4861[J] Medical Device Design
", ,0,"()
(Same subject as 2.75[J], HST.552[J])(Subject meets with 2.750[J], 6.4860[J])
Prereq: 2.008, 6.2040, 6.2050, 6.2060, 22.071, or permission of instructor
Units: 3-3-6

Provides an intense project-based learning experience around the design of medical devices with foci ranging from mechanical to electro mechanical to electronics. Projects motivated by real-world clinical challenges provided by sponsors and clinicians who also help mentor teams. Covers the design process, project management, and fundamentals of mechanical and electrical circuit and sensor design. Students work in small teams to execute a substantial term project, with emphasis placed upon developing creative designs â€” via a deterministic design process â€” that are developed and optimized using analytical techniques. Includes mandatory lab. Instruction and practice in written and oral communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
A. H. Slocum, E. Roche, N. C. Hanumara, G. Traverso, A. Pennes"
Communication,Students will enhance their written and oral communication skills through instruction and practice.,"6.4861[J] Medical Device Design
",1,Fall 2023,Communication,"6.4861[J] Medical Device Design
", ,0,"()
(Same subject as 2.75[J], HST.552[J])(Subject meets with 2.750[J], 6.4860[J])
Prereq: 2.008, 6.2040, 6.2050, 6.2060, 22.071, or permission of instructor
Units: 3-3-6

Provides an intense project-based learning experience around the design of medical devices with foci ranging from mechanical to electro mechanical to electronics. Projects motivated by real-world clinical challenges provided by sponsors and clinicians who also help mentor teams. Covers the design process, project management, and fundamentals of mechanical and electrical circuit and sensor design. Students work in small teams to execute a substantial term project, with emphasis placed upon developing creative designs â€” via a deterministic design process â€” that are developed and optimized using analytical techniques. Includes mandatory lab. Instruction and practice in written and oral communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
A. H. Slocum, E. Roche, N. C. Hanumara, G. Traverso, A. Pennes"
Teamwork,Students will learn to work effectively in small teams to execute substantial term projects related to medical device design.,"6.4861[J] Medical Device Design
",1,Fall 2023,Collaboration and Teamwork,"6.4861[J] Medical Device Design
", ,0,"()
(Same subject as 2.75[J], HST.552[J])(Subject meets with 2.750[J], 6.4860[J])
Prereq: 2.008, 6.2040, 6.2050, 6.2060, 22.071, or permission of instructor
Units: 3-3-6

Provides an intense project-based learning experience around the design of medical devices with foci ranging from mechanical to electro mechanical to electronics. Projects motivated by real-world clinical challenges provided by sponsors and clinicians who also help mentor teams. Covers the design process, project management, and fundamentals of mechanical and electrical circuit and sensor design. Students work in small teams to execute a substantial term project, with emphasis placed upon developing creative designs â€” via a deterministic design process â€” that are developed and optimized using analytical techniques. Includes mandatory lab. Instruction and practice in written and oral communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
A. H. Slocum, E. Roche, N. C. Hanumara, G. Traverso, A. Pennes"
Analytical techniques,Students will develop the ability to use analytical techniques to optimize the design of medical devices.,"6.4861[J] Medical Device Design
",1,Fall 2023,Analytical techniques,"6.4861[J] Medical Device Design
", ,0,"()
(Same subject as 2.75[J], HST.552[J])(Subject meets with 2.750[J], 6.4860[J])
Prereq: 2.008, 6.2040, 6.2050, 6.2060, 22.071, or permission of instructor
Units: 3-3-6

Provides an intense project-based learning experience around the design of medical devices with foci ranging from mechanical to electro mechanical to electronics. Projects motivated by real-world clinical challenges provided by sponsors and clinicians who also help mentor teams. Covers the design process, project management, and fundamentals of mechanical and electrical circuit and sensor design. Students work in small teams to execute a substantial term project, with emphasis placed upon developing creative designs â€” via a deterministic design process â€” that are developed and optimized using analytical techniques. Includes mandatory lab. Instruction and practice in written and oral communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
A. H. Slocum, E. Roche, N. C. Hanumara, G. Traverso, A. Pennes"
Mentoring,Students will have the opportunity to mentor teams and enhance their ability to guide and support others in the design process.,"6.4861[J] Medical Device Design
",1,Fall 2023,Mentorship,"6.4861[J] Medical Device Design
", ,0,"()
(Same subject as 2.75[J], HST.552[J])(Subject meets with 2.750[J], 6.4860[J])
Prereq: 2.008, 6.2040, 6.2050, 6.2060, 22.071, or permission of instructor
Units: 3-3-6

Provides an intense project-based learning experience around the design of medical devices with foci ranging from mechanical to electro mechanical to electronics. Projects motivated by real-world clinical challenges provided by sponsors and clinicians who also help mentor teams. Covers the design process, project management, and fundamentals of mechanical and electrical circuit and sensor design. Students work in small teams to execute a substantial term project, with emphasis placed upon developing creative designs â€” via a deterministic design process â€” that are developed and optimized using analytical techniques. Includes mandatory lab. Instruction and practice in written and oral communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
A. H. Slocum, E. Roche, N. C. Hanumara, G. Traverso, A. Pennes"
Problem-solving,Students will develop the ability to solve complex problems encountered during experimental and computational synthetic biology research.,"6.4880[J] Biological Circuit Engineering Laboratory
",1,Fall 2023,Problem-solving,"6.4880[J] Biological Circuit Engineering Laboratory
", ,0,"() Not offered regularly; consult department
(Same subject as 20.129[J])
Prereq: Biology (GIR) and Calculus II (GIR)
Units: 2-8-2

Students assemble individual genes and regulatory elements into larger-scale circuits; they experimentally characterize these circuits in yeast cells using quantitative techniques, including flow cytometry, and model their results computationally. Emphasizes concepts and techniques to perform independent experimental and computational synthetic biology research. Discusses current literature and ongoing research in the field of synthetic biology. Instruction and practice in oral and written communication provided. Enrollment limited.
J. Niles, R. Weiss"
Collaboration,Students will enhance their ability to work effectively in teams and collaborate with peers on research projects.,"6.4880[J] Biological Circuit Engineering Laboratory
",1,Fall 2023,Collaboration and Teamwork,"6.4880[J] Biological Circuit Engineering Laboratory
", ,0,"() Not offered regularly; consult department
(Same subject as 20.129[J])
Prereq: Biology (GIR) and Calculus II (GIR)
Units: 2-8-2

Students assemble individual genes and regulatory elements into larger-scale circuits; they experimentally characterize these circuits in yeast cells using quantitative techniques, including flow cytometry, and model their results computationally. Emphasizes concepts and techniques to perform independent experimental and computational synthetic biology research. Discusses current literature and ongoing research in the field of synthetic biology. Instruction and practice in oral and written communication provided. Enrollment limited.
J. Niles, R. Weiss"
Critical thinking,Students will develop critical thinking skills necessary for analyzing and interpreting experimental and computational results.,"6.4880[J] Biological Circuit Engineering Laboratory
",1,Fall 2023,Thinking Skills,"6.4880[J] Biological Circuit Engineering Laboratory
", ,0,"() Not offered regularly; consult department
(Same subject as 20.129[J])
Prereq: Biology (GIR) and Calculus II (GIR)
Units: 2-8-2

Students assemble individual genes and regulatory elements into larger-scale circuits; they experimentally characterize these circuits in yeast cells using quantitative techniques, including flow cytometry, and model their results computationally. Emphasizes concepts and techniques to perform independent experimental and computational synthetic biology research. Discusses current literature and ongoing research in the field of synthetic biology. Instruction and practice in oral and written communication provided. Enrollment limited.
J. Niles, R. Weiss"
Time management,Students will learn to effectively manage their time and prioritize tasks to meet project deadlines.,"6.4880[J] Biological Circuit Engineering Laboratory
",1,Fall 2023,Time management,"6.4880[J] Biological Circuit Engineering Laboratory
", ,0,"() Not offered regularly; consult department
(Same subject as 20.129[J])
Prereq: Biology (GIR) and Calculus II (GIR)
Units: 2-8-2

Students assemble individual genes and regulatory elements into larger-scale circuits; they experimentally characterize these circuits in yeast cells using quantitative techniques, including flow cytometry, and model their results computationally. Emphasizes concepts and techniques to perform independent experimental and computational synthetic biology research. Discusses current literature and ongoing research in the field of synthetic biology. Instruction and practice in oral and written communication provided. Enrollment limited.
J. Niles, R. Weiss"
Presentation skills,Students will enhance their ability to effectively present their research findings orally and in written form.,"6.4880[J] Biological Circuit Engineering Laboratory
",1,Fall 2023,Presentation skills,"6.4880[J] Biological Circuit Engineering Laboratory
", ,0,"() Not offered regularly; consult department
(Same subject as 20.129[J])
Prereq: Biology (GIR) and Calculus II (GIR)
Units: 2-8-2

Students assemble individual genes and regulatory elements into larger-scale circuits; they experimentally characterize these circuits in yeast cells using quantitative techniques, including flow cytometry, and model their results computationally. Emphasizes concepts and techniques to perform independent experimental and computational synthetic biology research. Discusses current literature and ongoing research in the field of synthetic biology. Instruction and practice in oral and written communication provided. Enrollment limited.
J. Niles, R. Weiss"
Problem-solving,"Students will develop the ability to solve problems related to signal processing, machine learning, and experimental design.","6.4900 Introduction to EECS via Medical Technology
",1,Fall 2023,Problem-solving,"6.4900 Introduction to EECS via Medical Technology
", ,0,"() 
Prereq: Calculus II (GIR) and Physics II (GIR)
Units: 4-4-4

Explores biomedical signals generated from electrocardiograms, glucose detectors or ultrasound images, and magnetic resonance images. Topics include physical characterization and modeling of systems in the time and frequency domains; analog and digital signals and noise; basic machine learning including decision trees, clustering, and classification; and introductory machine vision. Labs designed to strengthen background in signal processing and machine learning. Students design and run structured experiments, and develop and test procedures through further experimentation.
C. M. Stultz, E. Adalsteinsson"
Communication,Students will enhance their ability to effectively communicate their findings and ideas related to medical technology.,"6.4900 Introduction to EECS via Medical Technology
",1,Fall 2023,Communication,"6.4900 Introduction to EECS via Medical Technology
", ,0,"() 
Prereq: Calculus II (GIR) and Physics II (GIR)
Units: 4-4-4

Explores biomedical signals generated from electrocardiograms, glucose detectors or ultrasound images, and magnetic resonance images. Topics include physical characterization and modeling of systems in the time and frequency domains; analog and digital signals and noise; basic machine learning including decision trees, clustering, and classification; and introductory machine vision. Labs designed to strengthen background in signal processing and machine learning. Students design and run structured experiments, and develop and test procedures through further experimentation.
C. M. Stultz, E. Adalsteinsson"
Analytical thinking,Students will develop the ability to analyze and interpret data obtained from biomedical signals.,"6.4900 Introduction to EECS via Medical Technology
",1,Fall 2023,Thinking Skills,"6.4900 Introduction to EECS via Medical Technology
", ,0,"() 
Prereq: Calculus II (GIR) and Physics II (GIR)
Units: 4-4-4

Explores biomedical signals generated from electrocardiograms, glucose detectors or ultrasound images, and magnetic resonance images. Topics include physical characterization and modeling of systems in the time and frequency domains; analog and digital signals and noise; basic machine learning including decision trees, clustering, and classification; and introductory machine vision. Labs designed to strengthen background in signal processing and machine learning. Students design and run structured experiments, and develop and test procedures through further experimentation.
C. M. Stultz, E. Adalsteinsson"
Teamwork,Students will enhance their ability to work collaboratively in designing and running experiments.,"6.4900 Introduction to EECS via Medical Technology
",1,Fall 2023,Collaboration and Teamwork,"6.4900 Introduction to EECS via Medical Technology
", ,0,"() 
Prereq: Calculus II (GIR) and Physics II (GIR)
Units: 4-4-4

Explores biomedical signals generated from electrocardiograms, glucose detectors or ultrasound images, and magnetic resonance images. Topics include physical characterization and modeling of systems in the time and frequency domains; analog and digital signals and noise; basic machine learning including decision trees, clustering, and classification; and introductory machine vision. Labs designed to strengthen background in signal processing and machine learning. Students design and run structured experiments, and develop and test procedures through further experimentation.
C. M. Stultz, E. Adalsteinsson"
Critical thinking,Students will develop the ability to critically evaluate and assess the effectiveness of procedures and techniques used in medical technology.,"6.4900 Introduction to EECS via Medical Technology
",1,Fall 2023,Thinking Skills,"6.4900 Introduction to EECS via Medical Technology
", ,0,"() 
Prereq: Calculus II (GIR) and Physics II (GIR)
Units: 4-4-4

Explores biomedical signals generated from electrocardiograms, glucose detectors or ultrasound images, and magnetic resonance images. Topics include physical characterization and modeling of systems in the time and frequency domains; analog and digital signals and noise; basic machine learning including decision trees, clustering, and classification; and introductory machine vision. Labs designed to strengthen background in signal processing and machine learning. Students design and run structured experiments, and develop and test procedures through further experimentation.
C. M. Stultz, E. Adalsteinsson"
Problem-solving,Students will develop the ability to solve problems related to processing physiological data using signal processing techniques.,"6.8800[J] Biomedical Signal and Image Processing
",1,Fall 2023,Problem-solving,"6.8800[J] Biomedical Signal and Image Processing
", ,0,"()
(Same subject as 16.456[J], HST.582[J])(Subject meets with 6.8801[J], HST.482[J])
Prereq: (6.3700 and (2.004, 6.3000, 16.002, or 18.085)) or permission of instructor
Units: 3-1-8

Fundamentals of digital signal processing with emphasis on problems in biomedical research and clinical medicine. Basic principles and algorithms for processing both deterministic and random signals. Topics include data acquisition, imaging, filtering, coding, feature extraction, and modeling. Lab projects, performed in MATLAB, provide practical experience in processing physiological data, with examples from cardiology, speech processing, and medical imaging. Lectures cover signal processing topics relevant to the lab exercises, as well as background on the biological signals processed in the labs. Students taking graduate version complete additional assignments.
J. Greenberg, E. Adalsteinsson, W. Wells"
Communication,Students will enhance their communication skills as they work on lab projects and present their findings.,"6.8800[J] Biomedical Signal and Image Processing
",1,Fall 2023,Communication,"6.8800[J] Biomedical Signal and Image Processing
", ,0,"()
(Same subject as 16.456[J], HST.582[J])(Subject meets with 6.8801[J], HST.482[J])
Prereq: (6.3700 and (2.004, 6.3000, 16.002, or 18.085)) or permission of instructor
Units: 3-1-8

Fundamentals of digital signal processing with emphasis on problems in biomedical research and clinical medicine. Basic principles and algorithms for processing both deterministic and random signals. Topics include data acquisition, imaging, filtering, coding, feature extraction, and modeling. Lab projects, performed in MATLAB, provide practical experience in processing physiological data, with examples from cardiology, speech processing, and medical imaging. Lectures cover signal processing topics relevant to the lab exercises, as well as background on the biological signals processed in the labs. Students taking graduate version complete additional assignments.
J. Greenberg, E. Adalsteinsson, W. Wells"
Problem-solving,Students will develop the ability to solve complex problems related to signal and image processing in the biomedical field.,"6.8801[J] Biomedical Signal and Image Processing
",1,Fall 2023,Problem-solving,"6.8801[J] Biomedical Signal and Image Processing
", ,0,"()
(Same subject as HST.482[J])(Subject meets with 6.8800[J], 16.456[J], HST.582[J])
Prereq: (6.3700 or permission of instructor) and (2.004, 6.3000, 16.002, or 18.085)
Units: 3-1-8

Fundamentals of digital signal processing with emphasis on problems in biomedical research and clinical medicine. Basic principles and algorithms for processing both deterministic and random signals. Topics include data acquisition, imaging, filtering, coding, feature extraction, and modeling. Lab projects, performed in MATLAB, provide practical experience in processing physiological data, with examples from cardiology, speech processing, and medical imaging. Lectures cover signal processing topics relevant to the lab exercises, as well as background on the biological signals processed in the labs. Students taking graduate version complete additional assignments.
J. Greenberg, E. Adalsteinsson, W. Wells"
Communication,Students will enhance their ability to effectively communicate their findings and results in the field of biomedical signal and image processing.,"6.8801[J] Biomedical Signal and Image Processing
",1,Fall 2023,Communication,"6.8801[J] Biomedical Signal and Image Processing
", ,0,"()
(Same subject as HST.482[J])(Subject meets with 6.8800[J], 16.456[J], HST.582[J])
Prereq: (6.3700 or permission of instructor) and (2.004, 6.3000, 16.002, or 18.085)
Units: 3-1-8

Fundamentals of digital signal processing with emphasis on problems in biomedical research and clinical medicine. Basic principles and algorithms for processing both deterministic and random signals. Topics include data acquisition, imaging, filtering, coding, feature extraction, and modeling. Lab projects, performed in MATLAB, provide practical experience in processing physiological data, with examples from cardiology, speech processing, and medical imaging. Lectures cover signal processing topics relevant to the lab exercises, as well as background on the biological signals processed in the labs. Students taking graduate version complete additional assignments.
J. Greenberg, E. Adalsteinsson, W. Wells"
Data analysis,Students will develop the ability to analyze and interpret physiological data to extract meaningful information.,"6.8801[J] Biomedical Signal and Image Processing
",1,Fall 2023,Data Analysis and Interpretation,"6.8801[J] Biomedical Signal and Image Processing
", ,0,"()
(Same subject as HST.482[J])(Subject meets with 6.8800[J], 16.456[J], HST.582[J])
Prereq: (6.3700 or permission of instructor) and (2.004, 6.3000, 16.002, or 18.085)
Units: 3-1-8

Fundamentals of digital signal processing with emphasis on problems in biomedical research and clinical medicine. Basic principles and algorithms for processing both deterministic and random signals. Topics include data acquisition, imaging, filtering, coding, feature extraction, and modeling. Lab projects, performed in MATLAB, provide practical experience in processing physiological data, with examples from cardiology, speech processing, and medical imaging. Lectures cover signal processing topics relevant to the lab exercises, as well as background on the biological signals processed in the labs. Students taking graduate version complete additional assignments.
J. Greenberg, E. Adalsteinsson, W. Wells"
Research skills,Students will acquire the ability to conduct research in the field of biomedical signal and image processing.,"6.8801[J] Biomedical Signal and Image Processing
",1,Fall 2023,Skills in Research and Technical Skills,"6.8801[J] Biomedical Signal and Image Processing
", ,0,"()
(Same subject as HST.482[J])(Subject meets with 6.8800[J], 16.456[J], HST.582[J])
Prereq: (6.3700 or permission of instructor) and (2.004, 6.3000, 16.002, or 18.085)
Units: 3-1-8

Fundamentals of digital signal processing with emphasis on problems in biomedical research and clinical medicine. Basic principles and algorithms for processing both deterministic and random signals. Topics include data acquisition, imaging, filtering, coding, feature extraction, and modeling. Lab projects, performed in MATLAB, provide practical experience in processing physiological data, with examples from cardiology, speech processing, and medical imaging. Lectures cover signal processing topics relevant to the lab exercises, as well as background on the biological signals processed in the labs. Students taking graduate version complete additional assignments.
J. Greenberg, E. Adalsteinsson, W. Wells"
Technical proficiency,"Students will develop the ability to use technical tools and software, such as MATLAB, for processing and analyzing biomedical signals and images.","6.8801[J] Biomedical Signal and Image Processing
",1,Fall 2023,Technical Skills and Proficiency,"6.8801[J] Biomedical Signal and Image Processing
", ,0,"()
(Same subject as HST.482[J])(Subject meets with 6.8800[J], 16.456[J], HST.582[J])
Prereq: (6.3700 or permission of instructor) and (2.004, 6.3000, 16.002, or 18.085)
Units: 3-1-8

Fundamentals of digital signal processing with emphasis on problems in biomedical research and clinical medicine. Basic principles and algorithms for processing both deterministic and random signals. Topics include data acquisition, imaging, filtering, coding, feature extraction, and modeling. Lab projects, performed in MATLAB, provide practical experience in processing physiological data, with examples from cardiology, speech processing, and medical imaging. Lectures cover signal processing topics relevant to the lab exercises, as well as background on the biological signals processed in the labs. Students taking graduate version complete additional assignments.
J. Greenberg, E. Adalsteinsson, W. Wells"
Problem-solving,Students will develop problem-solving abilities as they work on Matlab-based assignments with real data in MRI.,"6.8810[J] Data Acquisition and Image Reconstruction in MRI
",1,Fall 2023,Problem-solving,"6.8810[J] Data Acquisition and Image Reconstruction in MRI
", ,0,"()
(Same subject as HST.580[J])
Prereq: 6.3010
Units: 3-0-9
Lecture: TR11-12.30 (32-144)

Applies analysis of signals and noise in linear systems, sampling, and Fourier properties to magnetic resonance (MR) imaging acquisition and reconstruction. Provides adequate foundation for MR physics to enable study of RF excitation design, efficient Fourier sampling, parallel encoding, reconstruction of non-uniformly sampled data, and the impact of hardware imperfections on reconstruction performance. Surveys active areas of MR research. Assignments include Matlab-based work with real data. Includes visit to a scan site for human MR studies.
E. AdalsteinssonNo textbook information available"
Communication,Students will enhance their communication skills through discussions and presentations related to MRI concepts and research.,"6.8810[J] Data Acquisition and Image Reconstruction in MRI
",1,Fall 2023,Communication,"6.8810[J] Data Acquisition and Image Reconstruction in MRI
", ,0,"()
(Same subject as HST.580[J])
Prereq: 6.3010
Units: 3-0-9
Lecture: TR11-12.30 (32-144)

Applies analysis of signals and noise in linear systems, sampling, and Fourier properties to magnetic resonance (MR) imaging acquisition and reconstruction. Provides adequate foundation for MR physics to enable study of RF excitation design, efficient Fourier sampling, parallel encoding, reconstruction of non-uniformly sampled data, and the impact of hardware imperfections on reconstruction performance. Surveys active areas of MR research. Assignments include Matlab-based work with real data. Includes visit to a scan site for human MR studies.
E. AdalsteinssonNo textbook information available"
Analytical thinking,Students will develop the ability to analyze and interpret data in the context of MRI.,"6.8810[J] Data Acquisition and Image Reconstruction in MRI
",1,Fall 2023,Thinking Skills,"6.8810[J] Data Acquisition and Image Reconstruction in MRI
", ,0,"()
(Same subject as HST.580[J])
Prereq: 6.3010
Units: 3-0-9
Lecture: TR11-12.30 (32-144)

Applies analysis of signals and noise in linear systems, sampling, and Fourier properties to magnetic resonance (MR) imaging acquisition and reconstruction. Provides adequate foundation for MR physics to enable study of RF excitation design, efficient Fourier sampling, parallel encoding, reconstruction of non-uniformly sampled data, and the impact of hardware imperfections on reconstruction performance. Surveys active areas of MR research. Assignments include Matlab-based work with real data. Includes visit to a scan site for human MR studies.
E. AdalsteinssonNo textbook information available"
Technical proficiency,Students will develop technical proficiency in using Matlab for data analysis and reconstruction in MRI.,"6.8810[J] Data Acquisition and Image Reconstruction in MRI
",1,Fall 2023,Technical Skills and Proficiency,"6.8810[J] Data Acquisition and Image Reconstruction in MRI
", ,0,"()
(Same subject as HST.580[J])
Prereq: 6.3010
Units: 3-0-9
Lecture: TR11-12.30 (32-144)

Applies analysis of signals and noise in linear systems, sampling, and Fourier properties to magnetic resonance (MR) imaging acquisition and reconstruction. Provides adequate foundation for MR physics to enable study of RF excitation design, efficient Fourier sampling, parallel encoding, reconstruction of non-uniformly sampled data, and the impact of hardware imperfections on reconstruction performance. Surveys active areas of MR research. Assignments include Matlab-based work with real data. Includes visit to a scan site for human MR studies.
E. AdalsteinssonNo textbook information available"
Research skills,Students will gain the ability to explore and evaluate current research in the field of MRI.,"6.8810[J] Data Acquisition and Image Reconstruction in MRI
",1,Fall 2023,Skills in Research and Technical Skills,"6.8810[J] Data Acquisition and Image Reconstruction in MRI
", ,0,"()
(Same subject as HST.580[J])
Prereq: 6.3010
Units: 3-0-9
Lecture: TR11-12.30 (32-144)

Applies analysis of signals and noise in linear systems, sampling, and Fourier properties to magnetic resonance (MR) imaging acquisition and reconstruction. Provides adequate foundation for MR physics to enable study of RF excitation design, efficient Fourier sampling, parallel encoding, reconstruction of non-uniformly sampled data, and the impact of hardware imperfections on reconstruction performance. Surveys active areas of MR research. Assignments include Matlab-based work with real data. Includes visit to a scan site for human MR studies.
E. AdalsteinssonNo textbook information available"
Critical thinking,Students will develop the ability to think critically and analyze complex auditory-based problems.,"6.8830[J] Signal Processing by the Auditory System: Perception
",1,Fall 2023,Thinking Skills,"6.8830[J] Signal Processing by the Auditory System: Perception
", ,0,"()Not offered regularly; consult department
(Same subject as HST.716[J])
Prereq: (6.3000 and (6.3700 or 6.3702)) or permission of instructor
Units: 3-0-9

Studies information processing performance of the human auditory system in relation to current physiological knowledge. Examines mathematical models for the quantification of auditory-based behavior and the relation between behavior and peripheral physiology, reflecting the tono-topic organization and stochastic responses of the auditory system. Mathematical models of psychophysical relations, incorporating quantitative knowledge of physiological transformations by the peripheral auditory system.
Staff

Vision"
Communication,Students will enhance their ability to communicate their findings and ideas related to auditory signal processing.,"6.8830[J] Signal Processing by the Auditory System: Perception
",1,Fall 2023,Communication,"6.8830[J] Signal Processing by the Auditory System: Perception
", ,0,"()Not offered regularly; consult department
(Same subject as HST.716[J])
Prereq: (6.3000 and (6.3700 or 6.3702)) or permission of instructor
Units: 3-0-9

Studies information processing performance of the human auditory system in relation to current physiological knowledge. Examines mathematical models for the quantification of auditory-based behavior and the relation between behavior and peripheral physiology, reflecting the tono-topic organization and stochastic responses of the auditory system. Mathematical models of psychophysical relations, incorporating quantitative knowledge of physiological transformations by the peripheral auditory system.
Staff

Vision"
Research skills,Students will develop the ability to conduct research in the field of auditory signal processing.,"6.8830[J] Signal Processing by the Auditory System: Perception
",1,Fall 2023,Skills in Research and Technical Skills,"6.8830[J] Signal Processing by the Auditory System: Perception
", ,0,"()Not offered regularly; consult department
(Same subject as HST.716[J])
Prereq: (6.3000 and (6.3700 or 6.3702)) or permission of instructor
Units: 3-0-9

Studies information processing performance of the human auditory system in relation to current physiological knowledge. Examines mathematical models for the quantification of auditory-based behavior and the relation between behavior and peripheral physiology, reflecting the tono-topic organization and stochastic responses of the auditory system. Mathematical models of psychophysical relations, incorporating quantitative knowledge of physiological transformations by the peripheral auditory system.
Staff

Vision"
Data interpretation,Students will gain the ability to interpret and analyze data related to the auditory system.,"6.8830[J] Signal Processing by the Auditory System: Perception
",1,Fall 2023,Data Analysis and Interpretation,"6.8830[J] Signal Processing by the Auditory System: Perception
", ,0,"()Not offered regularly; consult department
(Same subject as HST.716[J])
Prereq: (6.3000 and (6.3700 or 6.3702)) or permission of instructor
Units: 3-0-9

Studies information processing performance of the human auditory system in relation to current physiological knowledge. Examines mathematical models for the quantification of auditory-based behavior and the relation between behavior and peripheral physiology, reflecting the tono-topic organization and stochastic responses of the auditory system. Mathematical models of psychophysical relations, incorporating quantitative knowledge of physiological transformations by the peripheral auditory system.
Staff

Vision"
Problem-solving,Students will enhance their problem-solving abilities as they apply mathematical models to understand the auditory system.,"6.8830[J] Signal Processing by the Auditory System: Perception
",1,Fall 2023,Problem-solving,"6.8830[J] Signal Processing by the Auditory System: Perception
", ,0,"()Not offered regularly; consult department
(Same subject as HST.716[J])
Prereq: (6.3000 and (6.3700 or 6.3702)) or permission of instructor
Units: 3-0-9

Studies information processing performance of the human auditory system in relation to current physiological knowledge. Examines mathematical models for the quantification of auditory-based behavior and the relation between behavior and peripheral physiology, reflecting the tono-topic organization and stochastic responses of the auditory system. Mathematical models of psychophysical relations, incorporating quantitative knowledge of physiological transformations by the peripheral auditory system.
Staff

Vision"
Problem-solving,Students will develop the ability to solve complex problems related to computer vision using machine learning techniques.,"6.8300 Advances in Computer Vision
",1,Fall 2023,Problem-solving,"6.8300 Advances in Computer Vision
", ,0,"()
(Subject meets with 6.8301)
Prereq: (6.1200 or 6.3700) and (18.06 or 18.C06)
Units: 3-0-9

Advanced topics in computer vision with a focus on the use of machine learning techniques and applications in graphics and human-computer interface. Covers image representations, texture models, structure-from-motion algorithms, Bayesian techniques, object and scene recognition, tracking, shape modeling, and image databases. Applications may include face recognition, multimodal interaction, interactive systems, cinematic special effects, and photorealistic rendering. Covers topics complementary to 6.8390. Students taking graduate version complete additional assignments.
W. T. Freeman"
Analytical thinking,Students will enhance their ability to analyze and interpret visual data.,"6.8300 Advances in Computer Vision
",1,Fall 2023,Thinking Skills,"6.8300 Advances in Computer Vision
", ,0,"()
(Subject meets with 6.8301)
Prereq: (6.1200 or 6.3700) and (18.06 or 18.C06)
Units: 3-0-9

Advanced topics in computer vision with a focus on the use of machine learning techniques and applications in graphics and human-computer interface. Covers image representations, texture models, structure-from-motion algorithms, Bayesian techniques, object and scene recognition, tracking, shape modeling, and image databases. Applications may include face recognition, multimodal interaction, interactive systems, cinematic special effects, and photorealistic rendering. Covers topics complementary to 6.8390. Students taking graduate version complete additional assignments.
W. T. Freeman"
Research skills,Students will develop the ability to conduct research in the field of computer vision and evaluate existing techniques.,"6.8300 Advances in Computer Vision
",1,Fall 2023,Skills in Research and Technical Skills,"6.8300 Advances in Computer Vision
", ,0,"()
(Subject meets with 6.8301)
Prereq: (6.1200 or 6.3700) and (18.06 or 18.C06)
Units: 3-0-9

Advanced topics in computer vision with a focus on the use of machine learning techniques and applications in graphics and human-computer interface. Covers image representations, texture models, structure-from-motion algorithms, Bayesian techniques, object and scene recognition, tracking, shape modeling, and image databases. Applications may include face recognition, multimodal interaction, interactive systems, cinematic special effects, and photorealistic rendering. Covers topics complementary to 6.8390. Students taking graduate version complete additional assignments.
W. T. Freeman"
Collaboration,Students will enhance their ability to work effectively in teams on computer vision projects.,"6.8300 Advances in Computer Vision
",1,Fall 2023,Collaboration and Teamwork,"6.8300 Advances in Computer Vision
", ,0,"()
(Subject meets with 6.8301)
Prereq: (6.1200 or 6.3700) and (18.06 or 18.C06)
Units: 3-0-9

Advanced topics in computer vision with a focus on the use of machine learning techniques and applications in graphics and human-computer interface. Covers image representations, texture models, structure-from-motion algorithms, Bayesian techniques, object and scene recognition, tracking, shape modeling, and image databases. Applications may include face recognition, multimodal interaction, interactive systems, cinematic special effects, and photorealistic rendering. Covers topics complementary to 6.8390. Students taking graduate version complete additional assignments.
W. T. Freeman"
Presentation skills,Students will develop the ability to effectively communicate their findings and results in computer vision research.,"6.8300 Advances in Computer Vision
",1,Fall 2023,Presentation skills,"6.8300 Advances in Computer Vision
", ,0,"()
(Subject meets with 6.8301)
Prereq: (6.1200 or 6.3700) and (18.06 or 18.C06)
Units: 3-0-9

Advanced topics in computer vision with a focus on the use of machine learning techniques and applications in graphics and human-computer interface. Covers image representations, texture models, structure-from-motion algorithms, Bayesian techniques, object and scene recognition, tracking, shape modeling, and image databases. Applications may include face recognition, multimodal interaction, interactive systems, cinematic special effects, and photorealistic rendering. Covers topics complementary to 6.8390. Students taking graduate version complete additional assignments.
W. T. Freeman"
Problem-solving,Students will develop the ability to analyze and solve complex problems related to computer vision and graphics.,"6.8301 Advances in Computer Vision
",1,Fall 2023,Problem-solving,"6.8301 Advances in Computer Vision
", ,0,"()
(Subject meets with 6.8300)
Prereq: (6.1200 or 6.3700) and (18.06 or 18.C06)
Units: 4-0-11

Advanced topics in computer vision with a focus on the use of machine learning techniques and applications in graphics and human-computer interface. Covers image representations, texture models, structure-from-motion algorithms, Bayesian techniques, object and scene recognition, tracking, shape modeling, and image databases. Applications may include face recognition, multimodal interaction, interactive systems, cinematic special effects, and photorealistic rendering. Includes instruction and practice in written and oral communication. Students taking graduate version complete additional assignments.
Staff"
Communication,Students will enhance their ability to effectively communicate their ideas and findings in written and oral form.,"6.8301 Advances in Computer Vision
",1,Fall 2023,Communication,"6.8301 Advances in Computer Vision
", ,0,"()
(Subject meets with 6.8300)
Prereq: (6.1200 or 6.3700) and (18.06 or 18.C06)
Units: 4-0-11

Advanced topics in computer vision with a focus on the use of machine learning techniques and applications in graphics and human-computer interface. Covers image representations, texture models, structure-from-motion algorithms, Bayesian techniques, object and scene recognition, tracking, shape modeling, and image databases. Applications may include face recognition, multimodal interaction, interactive systems, cinematic special effects, and photorealistic rendering. Includes instruction and practice in written and oral communication. Students taking graduate version complete additional assignments.
Staff"
Multimodal interaction,Students will gain the ability to design and implement systems that enable interaction with multiple sensory modalities.,"6.8301 Advances in Computer Vision
",1,Fall 2023,Multimodal interaction,"6.8301 Advances in Computer Vision
", ,0,"()
(Subject meets with 6.8300)
Prereq: (6.1200 or 6.3700) and (18.06 or 18.C06)
Units: 4-0-11

Advanced topics in computer vision with a focus on the use of machine learning techniques and applications in graphics and human-computer interface. Covers image representations, texture models, structure-from-motion algorithms, Bayesian techniques, object and scene recognition, tracking, shape modeling, and image databases. Applications may include face recognition, multimodal interaction, interactive systems, cinematic special effects, and photorealistic rendering. Includes instruction and practice in written and oral communication. Students taking graduate version complete additional assignments.
Staff"
Cinematic special effects,Students will develop the ability to create special effects for movies and videos using computer vision techniques.,"6.8301 Advances in Computer Vision
",1,Fall 2023,Cinematic special effects,"6.8301 Advances in Computer Vision
", ,0,"()
(Subject meets with 6.8300)
Prereq: (6.1200 or 6.3700) and (18.06 or 18.C06)
Units: 4-0-11

Advanced topics in computer vision with a focus on the use of machine learning techniques and applications in graphics and human-computer interface. Covers image representations, texture models, structure-from-motion algorithms, Bayesian techniques, object and scene recognition, tracking, shape modeling, and image databases. Applications may include face recognition, multimodal interaction, interactive systems, cinematic special effects, and photorealistic rendering. Includes instruction and practice in written and oral communication. Students taking graduate version complete additional assignments.
Staff"
Human-computer interface,Students will learn how to design and develop user interfaces that incorporate computer vision technologies for improved interaction.,"6.8301 Advances in Computer Vision
",1,Fall 2023,Human-computer interface,"6.8301 Advances in Computer Vision
", ,0,"()
(Subject meets with 6.8300)
Prereq: (6.1200 or 6.3700) and (18.06 or 18.C06)
Units: 4-0-11

Advanced topics in computer vision with a focus on the use of machine learning techniques and applications in graphics and human-computer interface. Covers image representations, texture models, structure-from-motion algorithms, Bayesian techniques, object and scene recognition, tracking, shape modeling, and image databases. Applications may include face recognition, multimodal interaction, interactive systems, cinematic special effects, and photorealistic rendering. Includes instruction and practice in written and oral communication. Students taking graduate version complete additional assignments.
Staff"
Critical analysis,Students will develop the ability to critically analyze and evaluate research papers and methodologies in computer vision.,"6.8320 Advanced Topics in Computer Vision
",1,Fall 2023,Analysis,"6.8320 Advanced Topics in Computer Vision
", ,0,"() Not offered regularly; consult department
Prereq: 6.801, 6.8300, or permission of instructor
Units: 3-0-9
 Subject Cancelled 

Seminar exploring advanced research topics in the field of computer vision; focus varies with lecturer. Typically structured around discussion of assigned research papers and presentations by students. Example research areas explored in this seminar include learning in vision, computational imaging techniques, multimodal human-computer interaction, biomedical imaging, representation and estimation methods used in modern computer vision.
W. T. Freeman, B. K. P. Horn, A. Torralba"
Research presentation,Students will enhance their ability to effectively present their research findings and ideas to an audience.,"6.8320 Advanced Topics in Computer Vision
",1,Fall 2023,Research presentation,"6.8320 Advanced Topics in Computer Vision
", ,0,"() Not offered regularly; consult department
Prereq: 6.801, 6.8300, or permission of instructor
Units: 3-0-9
 Subject Cancelled 

Seminar exploring advanced research topics in the field of computer vision; focus varies with lecturer. Typically structured around discussion of assigned research papers and presentations by students. Example research areas explored in this seminar include learning in vision, computational imaging techniques, multimodal human-computer interaction, biomedical imaging, representation and estimation methods used in modern computer vision.
W. T. Freeman, B. K. P. Horn, A. Torralba"
Collaboration,Students will develop the ability to collaborate with peers and researchers in the field of computer vision to work on research projects.,"6.8320 Advanced Topics in Computer Vision
",1,Fall 2023,Collaboration and Teamwork,"6.8320 Advanced Topics in Computer Vision
", ,0,"() Not offered regularly; consult department
Prereq: 6.801, 6.8300, or permission of instructor
Units: 3-0-9
 Subject Cancelled 

Seminar exploring advanced research topics in the field of computer vision; focus varies with lecturer. Typically structured around discussion of assigned research papers and presentations by students. Example research areas explored in this seminar include learning in vision, computational imaging techniques, multimodal human-computer interaction, biomedical imaging, representation and estimation methods used in modern computer vision.
W. T. Freeman, B. K. P. Horn, A. Torralba"
Problem-solving,Students will enhance their problem-solving abilities as they tackle complex computer vision research problems.,"6.8320 Advanced Topics in Computer Vision
",1,Fall 2023,Problem-solving,"6.8320 Advanced Topics in Computer Vision
", ,0,"() Not offered regularly; consult department
Prereq: 6.801, 6.8300, or permission of instructor
Units: 3-0-9
 Subject Cancelled 

Seminar exploring advanced research topics in the field of computer vision; focus varies with lecturer. Typically structured around discussion of assigned research papers and presentations by students. Example research areas explored in this seminar include learning in vision, computational imaging techniques, multimodal human-computer interaction, biomedical imaging, representation and estimation methods used in modern computer vision.
W. T. Freeman, B. K. P. Horn, A. Torralba"
Literature synthesis,Students will develop the ability to synthesize information from multiple research papers and integrate them into their own work.,"6.8320 Advanced Topics in Computer Vision
",1,Fall 2023,Literature synthesis,"6.8320 Advanced Topics in Computer Vision
", ,0,"() Not offered regularly; consult department
Prereq: 6.801, 6.8300, or permission of instructor
Units: 3-0-9
 Subject Cancelled 

Seminar exploring advanced research topics in the field of computer vision; focus varies with lecturer. Typically structured around discussion of assigned research papers and presentations by students. Example research areas explored in this seminar include learning in vision, computational imaging techniques, multimodal human-computer interaction, biomedical imaging, representation and estimation methods used in modern computer vision.
W. T. Freeman, B. K. P. Horn, A. Torralba"
Problem-solving,Students will develop the ability to analyze and solve photographic challenges using computational techniques.,"6.8370 Advanced Computational Photography
",1,Fall 2023,Problem-solving,"6.8370 Advanced Computational Photography
", ,0,"()
(Subject meets with 6.8371)
Prereq: Calculus II (GIR) and 6.1020
Units: 3-0-9

Presents fundamentals and applications of hardware and software techniques used in digital and computational photography, with an emphasis on software methods. Provides sufficient background to implement solutions to photographic challenges and opportunities. Topics include cameras and image formation, image processing and image representations, high-dynamic-range imaging, human visual perception and color, single view 3-D model reconstruction, morphing, data-rich photography, super-resolution, and image-based rendering. Students taking graduate version complete additional assignments.
F. P. Durand"
Communication,Students will enhance their ability to effectively communicate their ideas and findings related to computational photography.,"6.8370 Advanced Computational Photography
",1,Fall 2023,Communication,"6.8370 Advanced Computational Photography
", ,0,"()
(Subject meets with 6.8371)
Prereq: Calculus II (GIR) and 6.1020
Units: 3-0-9

Presents fundamentals and applications of hardware and software techniques used in digital and computational photography, with an emphasis on software methods. Provides sufficient background to implement solutions to photographic challenges and opportunities. Topics include cameras and image formation, image processing and image representations, high-dynamic-range imaging, human visual perception and color, single view 3-D model reconstruction, morphing, data-rich photography, super-resolution, and image-based rendering. Students taking graduate version complete additional assignments.
F. P. Durand"
Organization,Students will develop the ability to organize and manage large amounts of image data and processing tasks.,"6.8370 Advanced Computational Photography
",1,Fall 2023,Organization,"6.8370 Advanced Computational Photography
", ,0,"()
(Subject meets with 6.8371)
Prereq: Calculus II (GIR) and 6.1020
Units: 3-0-9

Presents fundamentals and applications of hardware and software techniques used in digital and computational photography, with an emphasis on software methods. Provides sufficient background to implement solutions to photographic challenges and opportunities. Topics include cameras and image formation, image processing and image representations, high-dynamic-range imaging, human visual perception and color, single view 3-D model reconstruction, morphing, data-rich photography, super-resolution, and image-based rendering. Students taking graduate version complete additional assignments.
F. P. Durand"
Analytical thinking,Students will gain the ability to analyze and interpret image data to extract meaningful information.,"6.8370 Advanced Computational Photography
",1,Fall 2023,Thinking Skills,"6.8370 Advanced Computational Photography
", ,0,"()
(Subject meets with 6.8371)
Prereq: Calculus II (GIR) and 6.1020
Units: 3-0-9

Presents fundamentals and applications of hardware and software techniques used in digital and computational photography, with an emphasis on software methods. Provides sufficient background to implement solutions to photographic challenges and opportunities. Topics include cameras and image formation, image processing and image representations, high-dynamic-range imaging, human visual perception and color, single view 3-D model reconstruction, morphing, data-rich photography, super-resolution, and image-based rendering. Students taking graduate version complete additional assignments.
F. P. Durand"
Technical implementation,Students will acquire the ability to implement software solutions to address photographic challenges and opportunities.,"6.8370 Advanced Computational Photography
",1,Fall 2023,Technical implementation,"6.8370 Advanced Computational Photography
", ,0,"()
(Subject meets with 6.8371)
Prereq: Calculus II (GIR) and 6.1020
Units: 3-0-9

Presents fundamentals and applications of hardware and software techniques used in digital and computational photography, with an emphasis on software methods. Provides sufficient background to implement solutions to photographic challenges and opportunities. Topics include cameras and image formation, image processing and image representations, high-dynamic-range imaging, human visual perception and color, single view 3-D model reconstruction, morphing, data-rich photography, super-resolution, and image-based rendering. Students taking graduate version complete additional assignments.
F. P. Durand"
Problem-solving,Students will develop the ability to analyze and solve challenges related to digital and computational photography.,"6.8371 Digital and Computational Photography
",1,Fall 2023,Problem-solving,"6.8371 Digital and Computational Photography
", ,0,"()
(Subject meets with 6.8370)
Prereq: Calculus II (GIR) and 6.1010
Units: 3-0-9

Presents fundamentals and applications of hardware and software techniques used in digital and computational photography, with an emphasis on software methods. Provides sufficient background to implement solutions to photographic challenges and opportunities. Topics include cameras and image formation, image processing and image representations, high-dynamic-range imaging, human visual perception and color, single view 3-D model reconstruction, morphing, data-rich photography, super-resolution, and image-based rendering. Students taking graduate version complete additional assignments.
F. P. Durand

Natural Language Processing & Speech"
Communication,Students will enhance their ability to effectively communicate their ideas and findings related to photography.,"6.8371 Digital and Computational Photography
",1,Fall 2023,Communication,"6.8371 Digital and Computational Photography
", ,0,"()
(Subject meets with 6.8370)
Prereq: Calculus II (GIR) and 6.1010
Units: 3-0-9

Presents fundamentals and applications of hardware and software techniques used in digital and computational photography, with an emphasis on software methods. Provides sufficient background to implement solutions to photographic challenges and opportunities. Topics include cameras and image formation, image processing and image representations, high-dynamic-range imaging, human visual perception and color, single view 3-D model reconstruction, morphing, data-rich photography, super-resolution, and image-based rendering. Students taking graduate version complete additional assignments.
F. P. Durand

Natural Language Processing & Speech"
Analytical thinking,Students will develop the ability to critically analyze and evaluate different approaches and techniques in digital and computational photography.,"6.8371 Digital and Computational Photography
",1,Fall 2023,Thinking Skills,"6.8371 Digital and Computational Photography
", ,0,"()
(Subject meets with 6.8370)
Prereq: Calculus II (GIR) and 6.1010
Units: 3-0-9

Presents fundamentals and applications of hardware and software techniques used in digital and computational photography, with an emphasis on software methods. Provides sufficient background to implement solutions to photographic challenges and opportunities. Topics include cameras and image formation, image processing and image representations, high-dynamic-range imaging, human visual perception and color, single view 3-D model reconstruction, morphing, data-rich photography, super-resolution, and image-based rendering. Students taking graduate version complete additional assignments.
F. P. Durand

Natural Language Processing & Speech"
Creativity,Students will enhance their ability to think creatively and come up with innovative solutions to photographic challenges.,"6.8371 Digital and Computational Photography
",1,Fall 2023,Creativity and Creative Thinking,"6.8371 Digital and Computational Photography
", ,0,"()
(Subject meets with 6.8370)
Prereq: Calculus II (GIR) and 6.1010
Units: 3-0-9

Presents fundamentals and applications of hardware and software techniques used in digital and computational photography, with an emphasis on software methods. Provides sufficient background to implement solutions to photographic challenges and opportunities. Topics include cameras and image formation, image processing and image representations, high-dynamic-range imaging, human visual perception and color, single view 3-D model reconstruction, morphing, data-rich photography, super-resolution, and image-based rendering. Students taking graduate version complete additional assignments.
F. P. Durand

Natural Language Processing & Speech"
Technical implementation,Students will develop the ability to implement software methods and techniques in order to solve practical photographic problems.,"6.8371 Digital and Computational Photography
",1,Fall 2023,Technical implementation,"6.8371 Digital and Computational Photography
", ,0,"()
(Subject meets with 6.8370)
Prereq: Calculus II (GIR) and 6.1010
Units: 3-0-9

Presents fundamentals and applications of hardware and software techniques used in digital and computational photography, with an emphasis on software methods. Provides sufficient background to implement solutions to photographic challenges and opportunities. Topics include cameras and image formation, image processing and image representations, high-dynamic-range imaging, human visual perception and color, single view 3-D model reconstruction, morphing, data-rich photography, super-resolution, and image-based rendering. Students taking graduate version complete additional assignments.
F. P. Durand

Natural Language Processing & Speech"
Problem-solving,Students will develop strong problem-solving abilities as they work on various natural language processing tasks and projects.,"6.8610 Quantitative Methods for Natural Language Processing
",1,Fall 2023,Problem-solving,"6.8610 Quantitative Methods for Natural Language Processing
", ,0,"()
(Subject meets with 6.8611)
Prereq: 6.3900 and (18.06 or 18.C06)
Units: 3-0-9
Lecture: TR11-12.30 (32-123)

Introduces the study of human language from a computational perspective, including syntactic, semantic and discourse processing models. Emphasizes machine learning methods and algorithms. Uses these methods and models in applications such as syntactic parsing, information extraction, statistical machine translation, dialogue systems. Students taking graduate version complete additional assignments.
Y. KimNo textbook information available"
Analytical thinking,Students will enhance their ability to analyze complex linguistic data and develop insights and solutions based on their analysis.,"6.8610 Quantitative Methods for Natural Language Processing
",1,Fall 2023,Thinking Skills,"6.8610 Quantitative Methods for Natural Language Processing
", ,0,"()
(Subject meets with 6.8611)
Prereq: 6.3900 and (18.06 or 18.C06)
Units: 3-0-9
Lecture: TR11-12.30 (32-123)

Introduces the study of human language from a computational perspective, including syntactic, semantic and discourse processing models. Emphasizes machine learning methods and algorithms. Uses these methods and models in applications such as syntactic parsing, information extraction, statistical machine translation, dialogue systems. Students taking graduate version complete additional assignments.
Y. KimNo textbook information available"
Communication,"Students will improve their communication skills, both verbally and in writing, as they present their findings and explain their natural language processing models and algorithms.","6.8610 Quantitative Methods for Natural Language Processing
",1,Fall 2023,Communication,"6.8610 Quantitative Methods for Natural Language Processing
", ,0,"()
(Subject meets with 6.8611)
Prereq: 6.3900 and (18.06 or 18.C06)
Units: 3-0-9
Lecture: TR11-12.30 (32-123)

Introduces the study of human language from a computational perspective, including syntactic, semantic and discourse processing models. Emphasizes machine learning methods and algorithms. Uses these methods and models in applications such as syntactic parsing, information extraction, statistical machine translation, dialogue systems. Students taking graduate version complete additional assignments.
Y. KimNo textbook information available"
Collaboration,"Students will develop the ability to work effectively in teams, as natural language processing projects often require collaboration and coordination.","6.8610 Quantitative Methods for Natural Language Processing
",1,Fall 2023,Collaboration and Teamwork,"6.8610 Quantitative Methods for Natural Language Processing
", ,0,"()
(Subject meets with 6.8611)
Prereq: 6.3900 and (18.06 or 18.C06)
Units: 3-0-9
Lecture: TR11-12.30 (32-123)

Introduces the study of human language from a computational perspective, including syntactic, semantic and discourse processing models. Emphasizes machine learning methods and algorithms. Uses these methods and models in applications such as syntactic parsing, information extraction, statistical machine translation, dialogue systems. Students taking graduate version complete additional assignments.
Y. KimNo textbook information available"
Research skills,"Students will gain experience in conducting research in the field of natural language processing, including literature review, experimental design, and evaluation of results.","6.8610 Quantitative Methods for Natural Language Processing
",1,Fall 2023,Skills in Research and Technical Skills,"6.8610 Quantitative Methods for Natural Language Processing
", ,0,"()
(Subject meets with 6.8611)
Prereq: 6.3900 and (18.06 or 18.C06)
Units: 3-0-9
Lecture: TR11-12.30 (32-123)

Introduces the study of human language from a computational perspective, including syntactic, semantic and discourse processing models. Emphasizes machine learning methods and algorithms. Uses these methods and models in applications such as syntactic parsing, information extraction, statistical machine translation, dialogue systems. Students taking graduate version complete additional assignments.
Y. KimNo textbook information available"
Oral and written communication,"Students will enhance their ability to effectively communicate their ideas and findings in both oral and written forms, as communication is an integral part of the field of natural language processing.","6.8611 Quantitative Methods for Natural Language Processing
",1,Fall 2023,Communication Methods,"6.8611 Quantitative Methods for Natural Language Processing
", ,0,"()
(Subject meets with 6.8610)
Prereq: 6.3900 and (18.06 or 18.C06)
Units: 4-0-11
Lecture: TR11-12.30 (32-123) Recitation: M3 (24-121) or M EVE (7 PM) (24-121) or T10 (24-307) or T4 (24-307, 32-144) or W11 (36-156) or W12 (36-156) or W1 (36-153)

Introduces the study of human language from a computational perspective, including syntactic, semantic and discourse processing models. Emphasizes machine learning methods and algorithms. Uses these methods and models in applications such as syntactic parsing, information extraction, statistical machine translation, dialogue systems. Instruction and practice in oral and written communication provided. Students taking graduate version complete additional assignments.
Y. KimNo textbook information available"
Problem-solving,"Students will develop the ability to analyze and solve complex problems related to computational language processing, as they work on various applications and projects in the course.","6.8611 Quantitative Methods for Natural Language Processing
",1,Fall 2023,Problem-solving,"6.8611 Quantitative Methods for Natural Language Processing
", ,0,"()
(Subject meets with 6.8610)
Prereq: 6.3900 and (18.06 or 18.C06)
Units: 4-0-11
Lecture: TR11-12.30 (32-123) Recitation: M3 (24-121) or M EVE (7 PM) (24-121) or T10 (24-307) or T4 (24-307, 32-144) or W11 (36-156) or W12 (36-156) or W1 (36-153)

Introduces the study of human language from a computational perspective, including syntactic, semantic and discourse processing models. Emphasizes machine learning methods and algorithms. Uses these methods and models in applications such as syntactic parsing, information extraction, statistical machine translation, dialogue systems. Instruction and practice in oral and written communication provided. Students taking graduate version complete additional assignments.
Y. KimNo textbook information available"
Problem-solving,Students will develop the ability to solve problems related to speech and language processing using various machine learning techniques.,"6.8620[J] Spoken Language Processing
",1,Fall 2023,Problem-solving,"6.8620[J] Spoken Language Processing
", ,0,"()
(Same subject as HST.728[J])
Prereq: 6.3000 and 6.3900
Units: 3-1-8

Introduces the rapidly developing field of spoken language processing including automatic speech recognition. Topics include acoustic theory of speech production, acoustic-phonetics, signal representation, acoustic and language modeling, search, hidden Markov modeling, neural networks models, end-to-end deep learning models, and other machine learning techniques applied to speech and language processing topics. Lecture material intersperses theory with practice. Includes problem sets, laboratory exercises, and open-ended term project.
J. R. Glass"
Communication,Students will enhance their communication skills through the completion of laboratory exercises and the open-ended term project.,"6.8620[J] Spoken Language Processing
",1,Fall 2023,Communication,"6.8620[J] Spoken Language Processing
", ,0,"()
(Same subject as HST.728[J])
Prereq: 6.3000 and 6.3900
Units: 3-1-8

Introduces the rapidly developing field of spoken language processing including automatic speech recognition. Topics include acoustic theory of speech production, acoustic-phonetics, signal representation, acoustic and language modeling, search, hidden Markov modeling, neural networks models, end-to-end deep learning models, and other machine learning techniques applied to speech and language processing topics. Lecture material intersperses theory with practice. Includes problem sets, laboratory exercises, and open-ended term project.
J. R. Glass"
Problem-solving,Students will develop problem-solving abilities as they analyze and address computational issues in the representation and acquisition of knowledge.,"6.8630[J] Natural Language and the Computer Representation of Knowledge
",1,Fall 2023,Problem-solving,"6.8630[J] Natural Language and the Computer Representation of Knowledge
", ,0,"()
(Same subject as 9.611[J])
Prereq: 6.4100
Units: 3-3-6

Explores the relationship between the computer representation and acquisition of knowledge and the structure of human language, its acquisition, and hypotheses about its differentiating uniqueness. Emphasizes development of analytical skills necessary to judge the computational implications of grammatical formalisms and their role in connecting human intelligence to computational intelligence. Uses concrete examples to illustrate particular computational issues in this area.
Staff"
Communication,Students will enhance their communication abilities through the presentation and discussion of concrete examples related to natural language and knowledge representation.,"6.8630[J] Natural Language and the Computer Representation of Knowledge
",1,Fall 2023,Communication,"6.8630[J] Natural Language and the Computer Representation of Knowledge
", ,0,"()
(Same subject as 9.611[J])
Prereq: 6.4100
Units: 3-3-6

Explores the relationship between the computer representation and acquisition of knowledge and the structure of human language, its acquisition, and hypotheses about its differentiating uniqueness. Emphasizes development of analytical skills necessary to judge the computational implications of grammatical formalisms and their role in connecting human intelligence to computational intelligence. Uses concrete examples to illustrate particular computational issues in this area.
Staff"
